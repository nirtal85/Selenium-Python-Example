{"uid":"cb2d5de0eabaec0a","name":"Logout of system test","fullName":"tests.test_login.TestLogin#test_logout","historyId":"b90200cedc51a1ecbba9a19fbdbf8893","time":{"start":1686479184989,"stop":1686479195207,"duration":10218},"description":"Log out from app","descriptionHtml":"<p>Log out from app</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55cab8471133 <unknown>\n#1 0x55cab81a5966 <unknown>\n#2 0x55cab81e20dc <unknown>\n#3 0x55cab81e2211 <unknown>\n#4 0x55cab821c6c4 <unknown>\n#5 0x55cab8201bfd <unknown>\n#6 0x55cab821a1c7 <unknown>\n#7 0x55cab82019a3 <unknown>\n#8 0x55cab81d646a <unknown>\n#9 0x55cab81d755e <unknown>\n#10 0x55cab8430cae <unknown>\n#11 0x55cab84348fe <unknown>\n#12 0x55cab843df20 <unknown>\n#13 0x55cab8435923 <unknown>\n#14 0x55cab8408c0e <unknown>\n#15 0x55cab8458b08 <unknown>\n#16 0x55cab8458c97 <unknown>\n#17 0x55cab8469113 <unknown>\n#18 0x7f8af5fa6b43 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7f4369c400a0>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nrequest = <FixtureRequest for <Function test_logout>>\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_data: dict, request: FixtureRequest):\n        username = request.config.getini(\"username\")\n        password = request.config.getini(\"password\")\n        # example of a simple text attachment\n        allure.attach(body=username, name=\"username\", attachment_type=allure.attachment_type.TEXT)\n>       self.about_page.click_login_link()\n\ntests/test_login.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:37: in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b2ded56fe7064a0ba2f693ade9085dba\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f4369b0d2d0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55cab8471133 <unknown>\nE       #1 0x55cab81a5966 <unknown>\nE       #2 0x55cab81e20dc <unknown>\nE       #3 0x55cab81e2211 <unknown>\nE       #4 0x55cab821c6c4 <unknown>\nE       #5 0x55cab8201bfd <unknown>\nE       #6 0x55cab821a1c7 <unknown>\nE       #7 0x55cab82019a3 <unknown>\nE       #8 0x55cab81d646a <unknown>\nE       #9 0x55cab81d755e <unknown>\nE       #10 0x55cab8430cae <unknown>\nE       #11 0x55cab84348fe <unknown>\nE       #12 0x55cab843df20 <unknown>\nE       #13 0x55cab8435923 <unknown>\nE       #14 0x55cab8408c0e <unknown>\nE       #15 0x55cab8458b08 <unknown>\nE       #16 0x55cab8458c97 <unknown>\nE       #17 0x55cab8469113 <unknown>\nE       #18 0x7f8af5fa6b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"json_data","time":{"start":1686479154644,"stop":1686479154644,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0}],"testStage":{"description":"Log out from app","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55cab8471133 <unknown>\n#1 0x55cab81a5966 <unknown>\n#2 0x55cab81e20dc <unknown>\n#3 0x55cab81e2211 <unknown>\n#4 0x55cab821c6c4 <unknown>\n#5 0x55cab8201bfd <unknown>\n#6 0x55cab821a1c7 <unknown>\n#7 0x55cab82019a3 <unknown>\n#8 0x55cab81d646a <unknown>\n#9 0x55cab81d755e <unknown>\n#10 0x55cab8430cae <unknown>\n#11 0x55cab84348fe <unknown>\n#12 0x55cab843df20 <unknown>\n#13 0x55cab8435923 <unknown>\n#14 0x55cab8408c0e <unknown>\n#15 0x55cab8458b08 <unknown>\n#16 0x55cab8458c97 <unknown>\n#17 0x55cab8469113 <unknown>\n#18 0x7f8af5fa6b43 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7f4369c400a0>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nrequest = <FixtureRequest for <Function test_logout>>\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_data: dict, request: FixtureRequest):\n        username = request.config.getini(\"username\")\n        password = request.config.getini(\"password\")\n        # example of a simple text attachment\n        allure.attach(body=username, name=\"username\", attachment_type=allure.attachment_type.TEXT)\n>       self.about_page.click_login_link()\n\ntests/test_login.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:37: in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b2ded56fe7064a0ba2f693ade9085dba\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f4369b0d2d0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55cab8471133 <unknown>\nE       #1 0x55cab81a5966 <unknown>\nE       #2 0x55cab81e20dc <unknown>\nE       #3 0x55cab81e2211 <unknown>\nE       #4 0x55cab821c6c4 <unknown>\nE       #5 0x55cab8201bfd <unknown>\nE       #6 0x55cab821a1c7 <unknown>\nE       #7 0x55cab82019a3 <unknown>\nE       #8 0x55cab81d646a <unknown>\nE       #9 0x55cab81d755e <unknown>\nE       #10 0x55cab8430cae <unknown>\nE       #11 0x55cab84348fe <unknown>\nE       #12 0x55cab843df20 <unknown>\nE       #13 0x55cab8435923 <unknown>\nE       #14 0x55cab8408c0e <unknown>\nE       #15 0x55cab8458b08 <unknown>\nE       #16 0x55cab8458c97 <unknown>\nE       #17 0x55cab8469113 <unknown>\nE       #18 0x7f8af5fa6b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1686479184990,"stop":1686479195206,"duration":10216},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55cab8471133 <unknown>\n#1 0x55cab81a5966 <unknown>\n#2 0x55cab81e20dc <unknown>\n#3 0x55cab81e2211 <unknown>\n#4 0x55cab821c6c4 <unknown>\n#5 0x55cab8201bfd <unknown>\n#6 0x55cab821a1c7 <unknown>\n#7 0x55cab82019a3 <unknown>\n#8 0x55cab81d646a <unknown>\n#9 0x55cab81d755e <unknown>\n#10 0x55cab8430cae <unknown>\n#11 0x55cab84348fe <unknown>\n#12 0x55cab843df20 <unknown>\n#13 0x55cab8435923 <unknown>\n#14 0x55cab8408c0e <unknown>\n#15 0x55cab8458b08 <unknown>\n#16 0x55cab8458c97 <unknown>\n#17 0x55cab8469113 <unknown>\n#18 0x7f8af5fa6b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/about_page.py\", line 19, in click_login_link\n    self.click(self.LOGIN_LINK)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 37, in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0}],"attachments":[{"uid":"8846118921a6c0e7","name":"username","source":"8846118921a6c0e7.txt","type":"text/plain","size":18},{"uid":"e6b7d1efe93a189a","name":"Full Page Screenshot","source":"e6b7d1efe93a189a.png","type":"image/png","size":2751025},{"uid":"a125328ccd312be3","name":"URL","source":"a125328ccd312be3.uri","type":"text/uri-list","size":23},{"uid":"52dba480bcf0ec77","name":"public ip address","source":"52dba480bcf0ec77.txt","type":"text/plain","size":13},{"uid":"287a306c546a314f","name":"Cookies","source":"287a306c546a314f.json","type":"application/json","size":2737},{"uid":"d38ada5d1088fc91","name":"Session Storage","source":"d38ada5d1088fc91.json","type":"application/json","size":2},{"uid":"7359c0ac9d3eef9d","name":"Local Storage","source":"7359c0ac9d3eef9d.json","type":"application/json","size":2},{"uid":"2398ddfb3a32f1b1","name":"Console Logs","source":"2398ddfb3a32f1b1.json","type":"application/json","size":2},{"uid":"984e070778d38171","name":"Network Logs","source":"984e070778d38171.json","type":"application/json","size":47502}],"parameters":[],"attachmentsCount":9,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":1},"afterStages":[],"labels":[{"name":"severity","value":"blocker"},{"name":"story","value":"As a user i want to be able to logout after a successful login."},{"name":"epic","value":"Security"},{"name":"feature","value":"Login"},{"name":"tag","value":"run(order=2)"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az477-371"},{"name":"thread","value":"2175-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=2)","security"]},"source":"cb2d5de0eabaec0a.json","parameterValues":[]}