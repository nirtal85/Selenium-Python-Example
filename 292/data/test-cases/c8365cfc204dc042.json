{"uid":"c8365cfc204dc042","name":"Logout of system test","fullName":"tests.test_login.TestLogin#test_logout","historyId":"22bac01b3c7491378deafbf6e6797ba7","time":{"start":1675029121435,"stop":1675029134659,"duration":13224},"description":"Log out from app","descriptionHtml":"<p>Log out from app</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55da91b0e303 <unknown>\n#1 0x55da918e2d37 <unknown>\n#2 0x55da9191f5b2 <unknown>\n#3 0x55da9191f6c1 <unknown>\n#4 0x55da91959b34 <unknown>\n#5 0x55da9193f9ad <unknown>\n#6 0x55da9195788c <unknown>\n#7 0x55da9193f753 <unknown>\n#8 0x55da91912a14 <unknown>\n#9 0x55da91913b7e <unknown>\n#10 0x55da91b5d32e <unknown>\n#11 0x55da91b60c0e <unknown>\n#12 0x55da91b43610 <unknown>\n#13 0x55da91b61c23 <unknown>\n#14 0x55da91b35545 <unknown>\n#15 0x55da91b826a8 <unknown>\n#16 0x55da91b82836 <unknown>\n#17 0x55da91b9dd13 <unknown>\n#18 0x7f3d65a09b43 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7f8dc25c1af0>\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self):\n        username = self.config_reader.config_section_dict(\"Base Url\")[\"username\"]\n        password = self.config_reader.config_section_dict(\"Base Url\")[\"password\"]\n        # example of a simple text attachment\n        allure.attach(body=username, name=\"username\", attachment_type=allure.attachment_type.TEXT)\n        self.pages['about_page'].click_login_link()\n>       self.pages['login_page'].login(username, password)\n\ntests/test_login.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/login_page.py:21: in login\n    self.fill_text(self.USERNAME_FIELD, username)\npages/base_page.py:22: in fill_text\n    el: WebElement = self._wait.until(expected_conditions.element_to_be_clickable(webelement))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3820b856fdca5ee098bee95d34bc52c3\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f8dc24c9dc0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55da91b0e303 <unknown>\nE       #1 0x55da918e2d37 <unknown>\nE       #2 0x55da9191f5b2 <unknown>\nE       #3 0x55da9191f6c1 <unknown>\nE       #4 0x55da91959b34 <unknown>\nE       #5 0x55da9193f9ad <unknown>\nE       #6 0x55da9195788c <unknown>\nE       #7 0x55da9193f753 <unknown>\nE       #8 0x55da91912a14 <unknown>\nE       #9 0x55da91913b7e <unknown>\nE       #10 0x55da91b5d32e <unknown>\nE       #11 0x55da91b60c0e <unknown>\nE       #12 0x55da91b43610 <unknown>\nE       #13 0x55da91b61c23 <unknown>\nE       #14 0x55da91b35545 <unknown>\nE       #15 0x55da91b826a8 <unknown>\nE       #16 0x55da91b82836 <unknown>\nE       #17 0x55da91b9dd13 <unknown>\nE       #18 0x7f3d65a09b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"prep_properties","time":{"start":1675029078101,"stop":1675029078101,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"write_allure_environment","time":{"start":1675029078102,"stop":1675029078102,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_driver","time":{"start":1675029118418,"stop":1675029121433,"duration":3015},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"pages","time":{"start":1675029121433,"stop":1675029121433,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"injector","time":{"start":1675029121433,"stop":1675029121434,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Log out from app","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55da91b0e303 <unknown>\n#1 0x55da918e2d37 <unknown>\n#2 0x55da9191f5b2 <unknown>\n#3 0x55da9191f6c1 <unknown>\n#4 0x55da91959b34 <unknown>\n#5 0x55da9193f9ad <unknown>\n#6 0x55da9195788c <unknown>\n#7 0x55da9193f753 <unknown>\n#8 0x55da91912a14 <unknown>\n#9 0x55da91913b7e <unknown>\n#10 0x55da91b5d32e <unknown>\n#11 0x55da91b60c0e <unknown>\n#12 0x55da91b43610 <unknown>\n#13 0x55da91b61c23 <unknown>\n#14 0x55da91b35545 <unknown>\n#15 0x55da91b826a8 <unknown>\n#16 0x55da91b82836 <unknown>\n#17 0x55da91b9dd13 <unknown>\n#18 0x7f3d65a09b43 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7f8dc25c1af0>\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self):\n        username = self.config_reader.config_section_dict(\"Base Url\")[\"username\"]\n        password = self.config_reader.config_section_dict(\"Base Url\")[\"password\"]\n        # example of a simple text attachment\n        allure.attach(body=username, name=\"username\", attachment_type=allure.attachment_type.TEXT)\n        self.pages['about_page'].click_login_link()\n>       self.pages['login_page'].login(username, password)\n\ntests/test_login.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/login_page.py:21: in login\n    self.fill_text(self.USERNAME_FIELD, username)\npages/base_page.py:22: in fill_text\n    el: WebElement = self._wait.until(expected_conditions.element_to_be_clickable(webelement))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3820b856fdca5ee098bee95d34bc52c3\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f8dc24c9dc0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55da91b0e303 <unknown>\nE       #1 0x55da918e2d37 <unknown>\nE       #2 0x55da9191f5b2 <unknown>\nE       #3 0x55da9191f6c1 <unknown>\nE       #4 0x55da91959b34 <unknown>\nE       #5 0x55da9193f9ad <unknown>\nE       #6 0x55da9195788c <unknown>\nE       #7 0x55da9193f753 <unknown>\nE       #8 0x55da91912a14 <unknown>\nE       #9 0x55da91913b7e <unknown>\nE       #10 0x55da91b5d32e <unknown>\nE       #11 0x55da91b60c0e <unknown>\nE       #12 0x55da91b43610 <unknown>\nE       #13 0x55da91b61c23 <unknown>\nE       #14 0x55da91b35545 <unknown>\nE       #15 0x55da91b826a8 <unknown>\nE       #16 0x55da91b82836 <unknown>\nE       #17 0x55da91b9dd13 <unknown>\nE       #18 0x7f3d65a09b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1675029121435,"stop":1675029123518,"duration":2083},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Log in with username: 'elias123@gmail.com' and password: 'El123456789'","time":{"start":1675029123518,"stop":1675029134658,"duration":11140},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55da91b0e303 <unknown>\n#1 0x55da918e2d37 <unknown>\n#2 0x55da9191f5b2 <unknown>\n#3 0x55da9191f6c1 <unknown>\n#4 0x55da91959b34 <unknown>\n#5 0x55da9193f9ad <unknown>\n#6 0x55da9195788c <unknown>\n#7 0x55da9193f753 <unknown>\n#8 0x55da91912a14 <unknown>\n#9 0x55da91913b7e <unknown>\n#10 0x55da91b5d32e <unknown>\n#11 0x55da91b60c0e <unknown>\n#12 0x55da91b43610 <unknown>\n#13 0x55da91b61c23 <unknown>\n#14 0x55da91b35545 <unknown>\n#15 0x55da91b826a8 <unknown>\n#16 0x55da91b82836 <unknown>\n#17 0x55da91b9dd13 <unknown>\n#18 0x7f3d65a09b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/login_page.py\", line 21, in login\n    self.fill_text(self.USERNAME_FIELD, username)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 22, in fill_text\n    el: WebElement = self._wait.until(expected_conditions.element_to_be_clickable(webelement))\n  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"username","value":"'elias123@gmail.com'"},{"name":"password","value":"'El123456789'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"2296217023ee622a","name":"username","source":"2296217023ee622a.txt","type":"text/plain","size":18}],"parameters":[],"stepsCount":2,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"create_driver::0","time":{"start":1675029134670,"stop":1675029134939,"duration":269},"status":"passed","steps":[],"attachments":[{"uid":"3a492f55d1e278c7","name":"screenshot on failure: 29/01/2023, 21:52:14","source":"3a492f55d1e278c7.png","type":"image/png","size":57795},{"uid":"db9ce6e78eb6c604","name":"public ip address","source":"db9ce6e78eb6c604.txt","type":"text/plain","size":13}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"write_allure_environment::0","time":{"start":1675029348462,"stop":1675029348477,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"As a user i want to be able to logout after a successful login."},{"name":"epic","value":"Security"},{"name":"feature","value":"Login"},{"name":"severity","value":"blocker"},{"name":"tag","value":"run(order=2)"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az573-89"},{"name":"thread","value":"2272-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=2)","security"]},"source":"c8365cfc204dc042.json","parameterValues":[]}