{"uid":"b06432ead7480a04","name":"Login with invalid credentials test","fullName":"tests.login_test.TestLogin#test_invalid_login","historyId":"9bbc2729137fa409b9bc8067987e1d0d","time":{"start":1738460369589,"stop":1738460379666,"duration":10077},"description":"invalid login","descriptionHtml":"<p>invalid login</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5559a8359dca <unknown>\n#1 0x5559a7e503f0 <unknown>\n#2 0x5559a7ea010c <unknown>\n#3 0x5559a7ea0331 <unknown>\n#4 0x5559a7ee6154 <unknown>\n#5 0x5559a7ec4abd <unknown>\n#6 0x5559a7ee34b3 <unknown>\n#7 0x5559a7ec4833 <unknown>\n#8 0x5559a7e915a0 <unknown>\n#9 0x5559a7e92ece <unknown>\n#10 0x5559a8323bdb <unknown>\n#11 0x5559a8327b67 <unknown>\n#12 0x5559a830f3bc <unknown>\n#13 0x5559a8328727 <unknown>\n#14 0x5559a82f374f <unknown>\n#15 0x5559a8348938 <unknown>\n#16 0x5559a8348b00 <unknown>\n#17 0x5559a8358c46 <unknown>\n#18 0x7fbfc589ca94 <unknown>\n#19 0x7fbfc5929c3c <unknown>","statusTrace":"self = <tests.login_test.TestLogin object at 0x7fb8549ae510>\nemail = 'elias@gmail.com', password = '12345Tr'\ndata = Data(forgot_password=ForgotPassword(error_message=\"We can't find a user with that e-mail address.\", success_message='A...ct='Non Existing', page_title='My Workspace', project_name='test project', project_type='quiz', template_type='Blank'))\n\n    @allure.description(\"invalid login\")\n    @allure.title(\"Login with invalid credentials test\")\n    @pytest.mark.parametrize(\"email, password\", users)\n    @pytest.mark.run(order=3)\n    def test_invalid_login(self, email: str, password: str, data: Data):\n>       self.about_page.click_login_link()\n\ntests/login_test.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:20: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:60: in click\n    el: WebElement = self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"64e664f864dd5322868c46d07f17a263\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fb8546a2c00>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5559a8359dca <unknown>\nE       #1 0x5559a7e503f0 <unknown>\nE       #2 0x5559a7ea010c <unknown>\nE       #3 0x5559a7ea0331 <unknown>\nE       #4 0x5559a7ee6154 <unknown>\nE       #5 0x5559a7ec4abd <unknown>\nE       #6 0x5559a7ee34b3 <unknown>\nE       #7 0x5559a7ec4833 <unknown>\nE       #8 0x5559a7e915a0 <unknown>\nE       #9 0x5559a7e92ece <unknown>\nE       #10 0x5559a8323bdb <unknown>\nE       #11 0x5559a8327b67 <unknown>\nE       #12 0x5559a830f3bc <unknown>\nE       #13 0x5559a8328727 <unknown>\nE       #14 0x5559a82f374f <unknown>\nE       #15 0x5559a8348938 <unknown>\nE       #16 0x5559a8348b00 <unknown>\nE       #17 0x5559a8358c46 <unknown>\nE       #18 0x7fbfc589ca94 <unknown>\nE       #19 0x7fbfc5929c3c <unknown>\n\n.venv/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1738460323200,"stop":1738460323200,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"data","time":{"start":1738460323200,"stop":1738460323201,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"session_request","time":{"start":1738460323200,"stop":1738460323200,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1738460323200,"stop":1738460323200,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"invalid login","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5559a8359dca <unknown>\n#1 0x5559a7e503f0 <unknown>\n#2 0x5559a7ea010c <unknown>\n#3 0x5559a7ea0331 <unknown>\n#4 0x5559a7ee6154 <unknown>\n#5 0x5559a7ec4abd <unknown>\n#6 0x5559a7ee34b3 <unknown>\n#7 0x5559a7ec4833 <unknown>\n#8 0x5559a7e915a0 <unknown>\n#9 0x5559a7e92ece <unknown>\n#10 0x5559a8323bdb <unknown>\n#11 0x5559a8327b67 <unknown>\n#12 0x5559a830f3bc <unknown>\n#13 0x5559a8328727 <unknown>\n#14 0x5559a82f374f <unknown>\n#15 0x5559a8348938 <unknown>\n#16 0x5559a8348b00 <unknown>\n#17 0x5559a8358c46 <unknown>\n#18 0x7fbfc589ca94 <unknown>\n#19 0x7fbfc5929c3c <unknown>","statusTrace":"self = <tests.login_test.TestLogin object at 0x7fb8549ae510>\nemail = 'elias@gmail.com', password = '12345Tr'\ndata = Data(forgot_password=ForgotPassword(error_message=\"We can't find a user with that e-mail address.\", success_message='A...ct='Non Existing', page_title='My Workspace', project_name='test project', project_type='quiz', template_type='Blank'))\n\n    @allure.description(\"invalid login\")\n    @allure.title(\"Login with invalid credentials test\")\n    @pytest.mark.parametrize(\"email, password\", users)\n    @pytest.mark.run(order=3)\n    def test_invalid_login(self, email: str, password: str, data: Data):\n>       self.about_page.click_login_link()\n\ntests/login_test.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:20: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:60: in click\n    el: WebElement = self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"64e664f864dd5322868c46d07f17a263\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fb8546a2c00>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5559a8359dca <unknown>\nE       #1 0x5559a7e503f0 <unknown>\nE       #2 0x5559a7ea010c <unknown>\nE       #3 0x5559a7ea0331 <unknown>\nE       #4 0x5559a7ee6154 <unknown>\nE       #5 0x5559a7ec4abd <unknown>\nE       #6 0x5559a7ee34b3 <unknown>\nE       #7 0x5559a7ec4833 <unknown>\nE       #8 0x5559a7e915a0 <unknown>\nE       #9 0x5559a7e92ece <unknown>\nE       #10 0x5559a8323bdb <unknown>\nE       #11 0x5559a8327b67 <unknown>\nE       #12 0x5559a830f3bc <unknown>\nE       #13 0x5559a8328727 <unknown>\nE       #14 0x5559a82f374f <unknown>\nE       #15 0x5559a8348938 <unknown>\nE       #16 0x5559a8348b00 <unknown>\nE       #17 0x5559a8358c46 <unknown>\nE       #18 0x7fbfc589ca94 <unknown>\nE       #19 0x7fbfc5929c3c <unknown>\n\n.venv/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1738460369589,"stop":1738460379665,"duration":10076},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5559a8359dca <unknown>\n#1 0x5559a7e503f0 <unknown>\n#2 0x5559a7ea010c <unknown>\n#3 0x5559a7ea0331 <unknown>\n#4 0x5559a7ee6154 <unknown>\n#5 0x5559a7ec4abd <unknown>\n#6 0x5559a7ee34b3 <unknown>\n#7 0x5559a7ec4833 <unknown>\n#8 0x5559a7e915a0 <unknown>\n#9 0x5559a7e92ece <unknown>\n#10 0x5559a8323bdb <unknown>\n#11 0x5559a8327b67 <unknown>\n#12 0x5559a830f3bc <unknown>\n#13 0x5559a8328727 <unknown>\n#14 0x5559a82f374f <unknown>\n#15 0x5559a8348938 <unknown>\n#16 0x5559a8348b00 <unknown>\n#17 0x5559a8358c46 <unknown>\n#18 0x7fbfc589ca94 <unknown>\n#19 0x7fbfc5929c3c <unknown>\n\n","statusTrace":"  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/about_page.py\", line 20, in click_login_link\n    self.click(self.LOGIN_LINK)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 60, in click\n    el: WebElement = self.wait.until(\n                     ^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 146, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"public ip address","time":{"start":1738460379677,"stop":1738460379692,"duration":15},"status":"passed","steps":[],"attachments":[{"uid":"6a26f952dc5ef603","name":"HTTP logs of http://checkip.amazonaws.com/","source":"6a26f952dc5ef603.txt","type":"text/plain","size":355}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"cb7fd3c0578f9a6c","name":"Cookies","source":"cb7fd3c0578f9a6c.json","type":"application/json","size":4382},{"uid":"4e7d8518c775d6a5","name":"Session Storage","source":"4e7d8518c775d6a5.json","type":"application/json","size":358},{"uid":"6590e65a7ebebeea","name":"Local Storage","source":"6590e65a7ebebeea.json","type":"application/json","size":791},{"uid":"3995326245a0f8ec","name":"Console Logs","source":"3995326245a0f8ec.json","type":"application/json","size":236},{"uid":"dfc4a6cb7e8f2d40","name":"Full Page Screenshot","source":"dfc4a6cb7e8f2d40.png","type":"image/png","size":4007253},{"uid":"1e83d5cea10f4eb9","name":"URL","source":"1e83d5cea10f4eb9.uri","type":"text/uri-list","size":23},{"uid":"2bde2a7fb6aa1413","name":"Network Logs","source":"2bde2a7fb6aa1413.json","type":"application/json","size":6862358}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":8,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"session_request::0","time":{"start":1738460491386,"stop":1738460491386,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Security"},{"name":"severity","value":"blocker"},{"name":"feature","value":"Login"},{"name":"tag","value":"run(order=3)"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"login_test"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az1959-81"},{"name":"thread","value":"2040-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.login_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"email","value":"'elias@gmail.com'"},{"name":"password","value":"'12345Tr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=3)","security"]},"source":"b06432ead7480a04.json","parameterValues":["'elias@gmail.com'","'12345Tr'"]}