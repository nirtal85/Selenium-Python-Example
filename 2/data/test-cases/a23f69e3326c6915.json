{"uid":"a23f69e3326c6915","name":"Logout of system test","fullName":"tests.test_login.TestLogin#test_logout","historyId":"b90200cedc51a1ecbba9a19fbdbf8893","time":{"start":1687179830964,"stop":1687179841201,"duration":10237},"description":"Log out from app","descriptionHtml":"<p>Log out from app</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x556864ba24e3 <unknown>\n#1 0x5568648d1c76 <unknown>\n#2 0x55686490dc96 <unknown>\n#3 0x55686490ddc1 <unknown>\n#4 0x5568649477f4 <unknown>\n#5 0x55686492d03d <unknown>\n#6 0x55686494530e <unknown>\n#7 0x55686492cde3 <unknown>\n#8 0x5568649022dd <unknown>\n#9 0x55686490334e <unknown>\n#10 0x556864b623e4 <unknown>\n#11 0x556864b663d7 <unknown>\n#12 0x556864b70b20 <unknown>\n#13 0x556864b67023 <unknown>\n#14 0x556864b351aa <unknown>\n#15 0x556864b8b6b8 <unknown>\n#16 0x556864b8b847 <unknown>\n#17 0x556864b9b243 <unknown>\n#18 0x7fcb37b6db43 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7fdcbd99d590>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nrequest = <FixtureRequest for <Function test_logout>>\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_data: dict, request: FixtureRequest):\n        username = request.config.getini(\"username\")\n        password = request.config.getini(\"password\")\n        # example of a simple text attachment\n        allure.attach(body=username, name=\"username\", attachment_type=allure.attachment_type.TEXT)\n>       self.about_page.click_login_link()\n\ntests/test_login.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:35: in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"229c254b9261a7f6411353594f92066e\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fdcbd720900>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x556864ba24e3 <unknown>\nE       #1 0x5568648d1c76 <unknown>\nE       #2 0x55686490dc96 <unknown>\nE       #3 0x55686490ddc1 <unknown>\nE       #4 0x5568649477f4 <unknown>\nE       #5 0x55686492d03d <unknown>\nE       #6 0x55686494530e <unknown>\nE       #7 0x55686492cde3 <unknown>\nE       #8 0x5568649022dd <unknown>\nE       #9 0x55686490334e <unknown>\nE       #10 0x556864b623e4 <unknown>\nE       #11 0x556864b663d7 <unknown>\nE       #12 0x556864b70b20 <unknown>\nE       #13 0x556864b67023 <unknown>\nE       #14 0x556864b351aa <unknown>\nE       #15 0x556864b8b6b8 <unknown>\nE       #16 0x556864b8b847 <unknown>\nE       #17 0x556864b9b243 <unknown>\nE       #18 0x7fcb37b6db43 <unknown>\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"json_data","time":{"start":1687179801470,"stop":1687179801470,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Log out from app","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x556864ba24e3 <unknown>\n#1 0x5568648d1c76 <unknown>\n#2 0x55686490dc96 <unknown>\n#3 0x55686490ddc1 <unknown>\n#4 0x5568649477f4 <unknown>\n#5 0x55686492d03d <unknown>\n#6 0x55686494530e <unknown>\n#7 0x55686492cde3 <unknown>\n#8 0x5568649022dd <unknown>\n#9 0x55686490334e <unknown>\n#10 0x556864b623e4 <unknown>\n#11 0x556864b663d7 <unknown>\n#12 0x556864b70b20 <unknown>\n#13 0x556864b67023 <unknown>\n#14 0x556864b351aa <unknown>\n#15 0x556864b8b6b8 <unknown>\n#16 0x556864b8b847 <unknown>\n#17 0x556864b9b243 <unknown>\n#18 0x7fcb37b6db43 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7fdcbd99d590>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nrequest = <FixtureRequest for <Function test_logout>>\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_data: dict, request: FixtureRequest):\n        username = request.config.getini(\"username\")\n        password = request.config.getini(\"password\")\n        # example of a simple text attachment\n        allure.attach(body=username, name=\"username\", attachment_type=allure.attachment_type.TEXT)\n>       self.about_page.click_login_link()\n\ntests/test_login.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:35: in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"229c254b9261a7f6411353594f92066e\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fdcbd720900>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x556864ba24e3 <unknown>\nE       #1 0x5568648d1c76 <unknown>\nE       #2 0x55686490dc96 <unknown>\nE       #3 0x55686490ddc1 <unknown>\nE       #4 0x5568649477f4 <unknown>\nE       #5 0x55686492d03d <unknown>\nE       #6 0x55686494530e <unknown>\nE       #7 0x55686492cde3 <unknown>\nE       #8 0x5568649022dd <unknown>\nE       #9 0x55686490334e <unknown>\nE       #10 0x556864b623e4 <unknown>\nE       #11 0x556864b663d7 <unknown>\nE       #12 0x556864b70b20 <unknown>\nE       #13 0x556864b67023 <unknown>\nE       #14 0x556864b351aa <unknown>\nE       #15 0x556864b8b6b8 <unknown>\nE       #16 0x556864b8b847 <unknown>\nE       #17 0x556864b9b243 <unknown>\nE       #18 0x7fcb37b6db43 <unknown>\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1687179830965,"stop":1687179841200,"duration":10235},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x556864ba24e3 <unknown>\n#1 0x5568648d1c76 <unknown>\n#2 0x55686490dc96 <unknown>\n#3 0x55686490ddc1 <unknown>\n#4 0x5568649477f4 <unknown>\n#5 0x55686492d03d <unknown>\n#6 0x55686494530e <unknown>\n#7 0x55686492cde3 <unknown>\n#8 0x5568649022dd <unknown>\n#9 0x55686490334e <unknown>\n#10 0x556864b623e4 <unknown>\n#11 0x556864b663d7 <unknown>\n#12 0x556864b70b20 <unknown>\n#13 0x556864b67023 <unknown>\n#14 0x556864b351aa <unknown>\n#15 0x556864b8b6b8 <unknown>\n#16 0x556864b8b847 <unknown>\n#17 0x556864b9b243 <unknown>\n#18 0x7fcb37b6db43 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/about_page.py\", line 19, in click_login_link\n    self.click(self.LOGIN_LINK)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 35, in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"d0b844a8853c86ba","name":"username","source":"d0b844a8853c86ba.txt","type":"text/plain","size":18},{"uid":"3a69cf1a90e4b0d3","name":"Full Page Screenshot","source":"3a69cf1a90e4b0d3.png","type":"image/png","size":2757688},{"uid":"748f93b0fd77701","name":"URL","source":"748f93b0fd77701.uri","type":"text/uri-list","size":23},{"uid":"dcbf2981c84e794e","name":"public ip address","source":"dcbf2981c84e794e.txt","type":"text/plain","size":11},{"uid":"49cfb7620d1251c7","name":"Cookies","source":"49cfb7620d1251c7.json","type":"application/json","size":2736},{"uid":"a7dcff1e98f2f0dd","name":"Session Storage","source":"a7dcff1e98f2f0dd.json","type":"application/json","size":2},{"uid":"a12e52f8329ec3cc","name":"Local Storage","source":"a12e52f8329ec3cc.json","type":"application/json","size":208},{"uid":"43dc484c3fe5699","name":"Console Logs","source":"43dc484c3fe5699.json","type":"application/json","size":2},{"uid":"f4402c185c9de599","name":"Network Logs","source":"f4402c185c9de599.json","type":"application/json","size":47508}],"parameters":[],"stepsCount":1,"attachmentsCount":9,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"epic","value":"Security"},{"name":"severity","value":"blocker"},{"name":"story","value":"As a user i want to be able to logout after a successful login."},{"name":"feature","value":"Login"},{"name":"tag","value":"run(order=2)"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az167-741"},{"name":"thread","value":"2315-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=2)","security"]},"source":"a23f69e3326c6915.json","parameterValues":[]}