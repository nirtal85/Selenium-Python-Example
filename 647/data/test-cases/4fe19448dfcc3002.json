{"uid":"4fe19448dfcc3002","name":"Forgot Password with valid email test","fullName":"tests.forgot_password_test.TestForgotPassword#test_valid_email","historyId":"d6dde1715fb973c93e423cd6a34e3dff","time":{"start":1746755457552,"stop":1746755467965,"duration":10413},"description":"Forgot password with a valid email address","descriptionHtml":"<p>Forgot password with a valid email address</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x559f51f1153a <unknown>\n#1 0x559f51a0cf00 <unknown>\n#2 0x559f51a5cc0c <unknown>\n#3 0x559f51a5ce31 <unknown>\n#4 0x559f51aa2bd4 <unknown>\n#5 0x559f51a815cd <unknown>\n#6 0x559f51a9ff84 <unknown>\n#7 0x559f51a81343 <unknown>\n#8 0x559f51a4e78a <unknown>\n#9 0x559f51a4f9de <unknown>\n#10 0x559f51edb2cb <unknown>\n#11 0x559f51edf242 <unknown>\n#12 0x559f51ec87ac <unknown>\n#13 0x559f51edfdf7 <unknown>\n#14 0x559f51eacb2f <unknown>\n#15 0x559f51f001a8 <unknown>\n#16 0x559f51f00370 <unknown>\n#17 0x559f51f103b6 <unknown>\n#18 0x7f992829caa4 <unknown>\n#19 0x7f9928329c3c <unknown>","statusTrace":"self = <tests.forgot_password_test.TestForgotPassword object at 0x7f26189a4a50>\ndata = Data(forgot_password=ForgotPassword(error_message=\"We can't find a user with that e-mail address.\", success_message='A...ct='Non Existing', page_title='My Workspace', project_name='test project', project_type='quiz', template_type='Blank'))\n\n    @allure.description(\"Forgot password with a valid email address\")\n    @allure.title(\"Forgot Password with valid email test\")\n    def test_valid_email(self, data: Data):\n>       self.about_page.click_login_link()\n\ntests/forgot_password_test.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:18: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:59: in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"13df0a60ee0da6f9d5c8f7331dc5251b\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f26189b3c40>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x559f51f1153a <unknown>\nE       #1 0x559f51a0cf00 <unknown>\nE       #2 0x559f51a5cc0c <unknown>\nE       #3 0x559f51a5ce31 <unknown>\nE       #4 0x559f51aa2bd4 <unknown>\nE       #5 0x559f51a815cd <unknown>\nE       #6 0x559f51a9ff84 <unknown>\nE       #7 0x559f51a81343 <unknown>\nE       #8 0x559f51a4e78a <unknown>\nE       #9 0x559f51a4f9de <unknown>\nE       #10 0x559f51edb2cb <unknown>\nE       #11 0x559f51edf242 <unknown>\nE       #12 0x559f51ec87ac <unknown>\nE       #13 0x559f51edfdf7 <unknown>\nE       #14 0x559f51eacb2f <unknown>\nE       #15 0x559f51f001a8 <unknown>\nE       #16 0x559f51f00370 <unknown>\nE       #17 0x559f51f103b6 <unknown>\nE       #18 0x7f992829caa4 <unknown>\nE       #19 0x7f9928329c3c <unknown>\n\n.venv/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1746755457551,"stop":1746755457551,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"data","time":{"start":1746755457551,"stop":1746755457552,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1746755457551,"stop":1746755457551,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"session_request","time":{"start":1746755457551,"stop":1746755457551,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Forgot password with a valid email address","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x559f51f1153a <unknown>\n#1 0x559f51a0cf00 <unknown>\n#2 0x559f51a5cc0c <unknown>\n#3 0x559f51a5ce31 <unknown>\n#4 0x559f51aa2bd4 <unknown>\n#5 0x559f51a815cd <unknown>\n#6 0x559f51a9ff84 <unknown>\n#7 0x559f51a81343 <unknown>\n#8 0x559f51a4e78a <unknown>\n#9 0x559f51a4f9de <unknown>\n#10 0x559f51edb2cb <unknown>\n#11 0x559f51edf242 <unknown>\n#12 0x559f51ec87ac <unknown>\n#13 0x559f51edfdf7 <unknown>\n#14 0x559f51eacb2f <unknown>\n#15 0x559f51f001a8 <unknown>\n#16 0x559f51f00370 <unknown>\n#17 0x559f51f103b6 <unknown>\n#18 0x7f992829caa4 <unknown>\n#19 0x7f9928329c3c <unknown>","statusTrace":"self = <tests.forgot_password_test.TestForgotPassword object at 0x7f26189a4a50>\ndata = Data(forgot_password=ForgotPassword(error_message=\"We can't find a user with that e-mail address.\", success_message='A...ct='Non Existing', page_title='My Workspace', project_name='test project', project_type='quiz', template_type='Blank'))\n\n    @allure.description(\"Forgot password with a valid email address\")\n    @allure.title(\"Forgot Password with valid email test\")\n    def test_valid_email(self, data: Data):\n>       self.about_page.click_login_link()\n\ntests/forgot_password_test.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:18: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:59: in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"13df0a60ee0da6f9d5c8f7331dc5251b\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f26189b3c40>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x559f51f1153a <unknown>\nE       #1 0x559f51a0cf00 <unknown>\nE       #2 0x559f51a5cc0c <unknown>\nE       #3 0x559f51a5ce31 <unknown>\nE       #4 0x559f51aa2bd4 <unknown>\nE       #5 0x559f51a815cd <unknown>\nE       #6 0x559f51a9ff84 <unknown>\nE       #7 0x559f51a81343 <unknown>\nE       #8 0x559f51a4e78a <unknown>\nE       #9 0x559f51a4f9de <unknown>\nE       #10 0x559f51edb2cb <unknown>\nE       #11 0x559f51edf242 <unknown>\nE       #12 0x559f51ec87ac <unknown>\nE       #13 0x559f51edfdf7 <unknown>\nE       #14 0x559f51eacb2f <unknown>\nE       #15 0x559f51f001a8 <unknown>\nE       #16 0x559f51f00370 <unknown>\nE       #17 0x559f51f103b6 <unknown>\nE       #18 0x7f992829caa4 <unknown>\nE       #19 0x7f9928329c3c <unknown>\n\n.venv/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1746755457553,"stop":1746755467963,"duration":10410},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x559f51f1153a <unknown>\n#1 0x559f51a0cf00 <unknown>\n#2 0x559f51a5cc0c <unknown>\n#3 0x559f51a5ce31 <unknown>\n#4 0x559f51aa2bd4 <unknown>\n#5 0x559f51a815cd <unknown>\n#6 0x559f51a9ff84 <unknown>\n#7 0x559f51a81343 <unknown>\n#8 0x559f51a4e78a <unknown>\n#9 0x559f51a4f9de <unknown>\n#10 0x559f51edb2cb <unknown>\n#11 0x559f51edf242 <unknown>\n#12 0x559f51ec87ac <unknown>\n#13 0x559f51edfdf7 <unknown>\n#14 0x559f51eacb2f <unknown>\n#15 0x559f51f001a8 <unknown>\n#16 0x559f51f00370 <unknown>\n#17 0x559f51f103b6 <unknown>\n#18 0x7f992829caa4 <unknown>\n#19 0x7f9928329c3c <unknown>\n\n","statusTrace":"  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/about_page.py\", line 18, in click_login_link\n    self.click(self.LOGIN_LINK)\n    ~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 59, in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n                     ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.13/site-packages/selenium/webdriver/support/wait.py\", line 146, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"public ip address","time":{"start":1746755468007,"stop":1746755468155,"duration":148},"status":"passed","steps":[],"attachments":[{"uid":"a959e583da7f49cb","name":"HTTP logs of http://checkip.amazonaws.com/","source":"a959e583da7f49cb.txt","type":"text/plain","size":357}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"e65de4b8d67e97e7","name":"Cookies","source":"e65de4b8d67e97e7.json","type":"application/json","size":4116},{"uid":"63ae3a232740bec1","name":"Session Storage","source":"63ae3a232740bec1.json","type":"application/json","size":359},{"uid":"7558899c9ecd8619","name":"Local Storage","source":"7558899c9ecd8619.json","type":"application/json","size":548},{"uid":"b7c4eac977c1f7ac","name":"Full Page Screenshot","source":"b7c4eac977c1f7ac.png","type":"image/png","size":1356655},{"uid":"3a7576a9b4ed6422","name":"URL","source":"3a7576a9b4ed6422.uri","type":"text/uri-list","size":23},{"uid":"2fcdda7175bbac3d","name":"Network Logs","source":"2fcdda7175bbac3d.json","type":"application/json","size":59429}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":7,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"session_request::0","time":{"start":1746755527723,"stop":1746755527723,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Security"},{"name":"parentSuite","value":"Custom parent suite"},{"name":"story","value":"Forgot Password Feature's Functionality"},{"name":"severity","value":"critical"},{"name":"suite","value":"Custom suite"},{"name":"subSuite","value":"Custom sub suite"},{"name":"tag","value":"security"},{"name":"host","value":"fv-az1674-273"},{"name":"thread","value":"2071-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.forgot_password_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"f763609314a85e1d","reportUrl":"https://nirtal85.github.io/Selenium-Python-Example/646//#testresult/f763609314a85e1d","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55fbedada53a <unknown>\n#1 0x55fbed5d5f00 <unknown>\n#2 0x55fbed625c0c <unknown>\n#3 0x55fbed625e31 <unknown>\n#4 0x55fbed66bbd4 <unknown>\n#5 0x55fbed64a5cd <unknown>\n#6 0x55fbed668f84 <unknown>\n#7 0x55fbed64a343 <unknown>\n#8 0x55fbed61778a <unknown>\n#9 0x55fbed6189de <unknown>\n#10 0x55fbedaa42cb <unknown>\n#11 0x55fbedaa8242 <unknown>\n#12 0x55fbeda917ac <unknown>\n#13 0x55fbedaa8df7 <unknown>\n#14 0x55fbeda75b2f <unknown>\n#15 0x55fbedac91a8 <unknown>\n#16 0x55fbedac9370 <unknown>\n#17 0x55fbedad93b6 <unknown>\n#18 0x7f01ff89caa4 <unknown>\n#19 0x7f01ff929c3c <unknown>","time":{"start":1746669105893,"stop":1746669116349,"duration":10456}}]},"tags":["security"]},"source":"4fe19448dfcc3002.json","parameterValues":[]}