{"uid":"bf0e7c3372d83b3a","name":"Forgot Password with valid email test","fullName":"tests.test_forgot_password.TestForgotPassword#test_valid_email","historyId":"7ff7e178fd4f5b4b8deb31c8fc69c6a9","time":{"start":1685258103695,"stop":1685258113965,"duration":10270},"description":"Forgot password with a valid email address","descriptionHtml":"<p>Forgot password with a valid email address</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55617884e133 <unknown>\n#1 0x556178582966 <unknown>\n#2 0x5561785bf0dc <unknown>\n#3 0x5561785bf211 <unknown>\n#4 0x5561785f96c4 <unknown>\n#5 0x5561785debfd <unknown>\n#6 0x5561785f71c7 <unknown>\n#7 0x5561785de9a3 <unknown>\n#8 0x5561785b346a <unknown>\n#9 0x5561785b455e <unknown>\n#10 0x55617880dcae <unknown>\n#11 0x5561788118fe <unknown>\n#12 0x55617881af20 <unknown>\n#13 0x556178812923 <unknown>\n#14 0x5561787e5c0e <unknown>\n#15 0x556178835b08 <unknown>\n#16 0x556178835c97 <unknown>\n#17 0x556178846113 <unknown>\n#18 0x7ff996532b43 <unknown>","statusTrace":"self = <tests.test_forgot_password.TestForgotPassword object at 0x7fefa10b6c80>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nrequest = <FixtureRequest for <Function test_valid_email>>\n\n    @allure.description(\"Forgot password with a valid email address\")\n    @allure.title(\"Forgot Password with valid email test\")\n    def test_valid_email(self, json_data: dict, request: FixtureRequest):\n        email = request.config.getini(\"username\")\n>       self.about_page.click_login_link()\n\ntests/test_forgot_password.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:23: in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"951089de489702b33963cc8f0dd5bafc\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fefa0eb0940>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55617884e133 <unknown>\nE       #1 0x556178582966 <unknown>\nE       #2 0x5561785bf0dc <unknown>\nE       #3 0x5561785bf211 <unknown>\nE       #4 0x5561785f96c4 <unknown>\nE       #5 0x5561785debfd <unknown>\nE       #6 0x5561785f71c7 <unknown>\nE       #7 0x5561785de9a3 <unknown>\nE       #8 0x5561785b346a <unknown>\nE       #9 0x5561785b455e <unknown>\nE       #10 0x55617880dcae <unknown>\nE       #11 0x5561788118fe <unknown>\nE       #12 0x55617881af20 <unknown>\nE       #13 0x556178812923 <unknown>\nE       #14 0x5561787e5c0e <unknown>\nE       #15 0x556178835b08 <unknown>\nE       #16 0x556178835c97 <unknown>\nE       #17 0x556178846113 <unknown>\nE       #18 0x7ff996532b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"json_data","time":{"start":1685257906811,"stop":1685257906811,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Forgot password with a valid email address","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55617884e133 <unknown>\n#1 0x556178582966 <unknown>\n#2 0x5561785bf0dc <unknown>\n#3 0x5561785bf211 <unknown>\n#4 0x5561785f96c4 <unknown>\n#5 0x5561785debfd <unknown>\n#6 0x5561785f71c7 <unknown>\n#7 0x5561785de9a3 <unknown>\n#8 0x5561785b346a <unknown>\n#9 0x5561785b455e <unknown>\n#10 0x55617880dcae <unknown>\n#11 0x5561788118fe <unknown>\n#12 0x55617881af20 <unknown>\n#13 0x556178812923 <unknown>\n#14 0x5561787e5c0e <unknown>\n#15 0x556178835b08 <unknown>\n#16 0x556178835c97 <unknown>\n#17 0x556178846113 <unknown>\n#18 0x7ff996532b43 <unknown>","statusTrace":"self = <tests.test_forgot_password.TestForgotPassword object at 0x7fefa10b6c80>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nrequest = <FixtureRequest for <Function test_valid_email>>\n\n    @allure.description(\"Forgot password with a valid email address\")\n    @allure.title(\"Forgot Password with valid email test\")\n    def test_valid_email(self, json_data: dict, request: FixtureRequest):\n        email = request.config.getini(\"username\")\n>       self.about_page.click_login_link()\n\ntests/test_forgot_password.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:23: in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"951089de489702b33963cc8f0dd5bafc\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fefa0eb0940>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55617884e133 <unknown>\nE       #1 0x556178582966 <unknown>\nE       #2 0x5561785bf0dc <unknown>\nE       #3 0x5561785bf211 <unknown>\nE       #4 0x5561785f96c4 <unknown>\nE       #5 0x5561785debfd <unknown>\nE       #6 0x5561785f71c7 <unknown>\nE       #7 0x5561785de9a3 <unknown>\nE       #8 0x5561785b346a <unknown>\nE       #9 0x5561785b455e <unknown>\nE       #10 0x55617880dcae <unknown>\nE       #11 0x5561788118fe <unknown>\nE       #12 0x55617881af20 <unknown>\nE       #13 0x556178812923 <unknown>\nE       #14 0x5561787e5c0e <unknown>\nE       #15 0x556178835b08 <unknown>\nE       #16 0x556178835c97 <unknown>\nE       #17 0x556178846113 <unknown>\nE       #18 0x7ff996532b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1685258103695,"stop":1685258113964,"duration":10269},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55617884e133 <unknown>\n#1 0x556178582966 <unknown>\n#2 0x5561785bf0dc <unknown>\n#3 0x5561785bf211 <unknown>\n#4 0x5561785f96c4 <unknown>\n#5 0x5561785debfd <unknown>\n#6 0x5561785f71c7 <unknown>\n#7 0x5561785de9a3 <unknown>\n#8 0x5561785b346a <unknown>\n#9 0x5561785b455e <unknown>\n#10 0x55617880dcae <unknown>\n#11 0x5561788118fe <unknown>\n#12 0x55617881af20 <unknown>\n#13 0x556178812923 <unknown>\n#14 0x5561787e5c0e <unknown>\n#15 0x556178835b08 <unknown>\n#16 0x556178835c97 <unknown>\n#17 0x556178846113 <unknown>\n#18 0x7ff996532b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/about_page.py\", line 19, in click_login_link\n    self.click(self.LOGIN_LINK)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 23, in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"6d36666566d2488d","name":"Full Page Screenshot","source":"6d36666566d2488d.png","type":"image/png","size":2750549},{"uid":"26fcd333e4b2c5e5","name":"URL","source":"26fcd333e4b2c5e5.uri","type":"text/uri-list","size":23},{"uid":"e4a7106138ed2ede","name":"public ip address","source":"e4a7106138ed2ede.txt","type":"text/plain","size":14},{"uid":"42909fffb5dfbe12","name":"Cookies","source":"42909fffb5dfbe12.json","type":"application/json","size":2740},{"uid":"cda3a83ea5d53d2","name":"Session Storage","source":"cda3a83ea5d53d2.json","type":"application/json","size":2},{"uid":"3a495a85f17ac0e9","name":"Local Storage","source":"3a495a85f17ac0e9.json","type":"application/json","size":2},{"uid":"b00121159edede52","name":"Console Logs","source":"b00121159edede52.json","type":"application/json","size":2},{"uid":"3ff05c7454ec9b3f","name":"Network Logs","source":"3ff05c7454ec9b3f.json","type":"application/json","size":47518}],"parameters":[],"stepsCount":1,"attachmentsCount":8,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"epic","value":"Security"},{"name":"severity","value":"critical"},{"name":"story","value":"Forgot Password Feature's Functionality"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_forgot_password"},{"name":"subSuite","value":"TestForgotPassword"},{"name":"host","value":"fv-az396-183"},{"name":"thread","value":"2240-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_forgot_password"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["security"]},"source":"bf0e7c3372d83b3a.json","parameterValues":[]}