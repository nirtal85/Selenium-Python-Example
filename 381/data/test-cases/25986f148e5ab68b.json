{"uid":"25986f148e5ab68b","name":"Logout of system test","fullName":"tests.test_login.TestLogin#test_logout","historyId":"22bac01b3c7491378deafbf6e6797ba7","time":{"start":1682698148297,"stop":1682698158526,"duration":10229},"description":"Log out from app","descriptionHtml":"<p>Log out from app</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5627bf7d7fe3 <unknown>\n#1 0x5627bf516d36 <unknown>\n#2 0x5627bf553c4d <unknown>\n#3 0x5627bf553d61 <unknown>\n#4 0x5627bf58f6a4 <unknown>\n#5 0x5627bf5748ed <unknown>\n#6 0x5627bf58d232 <unknown>\n#7 0x5627bf574693 <unknown>\n#8 0x5627bf54703a <unknown>\n#9 0x5627bf54817e <unknown>\n#10 0x5627bf799dbd <unknown>\n#11 0x5627bf79dc6c <unknown>\n#12 0x5627bf7a74b0 <unknown>\n#13 0x5627bf79ed63 <unknown>\n#14 0x5627bf771c35 <unknown>\n#15 0x5627bf7c2138 <unknown>\n#16 0x5627bf7c22c7 <unknown>\n#17 0x5627bf7d0093 <unknown>\n#18 0x7ffa4b992b43 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7fe5ab91ded0>\njson_reader = <utils.json_parser.JsonParser object at 0x7fe5ab731720>\nini_reader = <utils.config_parser.ConfigParserIni object at 0x7fe5ab7309a0>\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_reader, ini_reader):\n        username = ini_reader.config_section_dict(\"Base Url\")[\"username\"]\n        password = ini_reader.config_section_dict(\"Base Url\")[\"password\"]\n        # example of a simple text attachment\n        allure.attach(body=username, name=\"username\", attachment_type=allure.attachment_type.TEXT)\n        login_page = LoginPage(self.driver)\n        about_page = AboutPage(self.driver)\n>       about_page.click_login_link()\n\ntests/test_login.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:17: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:17: in click\n    el: WebElement = self._wait.until(expected_conditions.element_to_be_clickable(webelement))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"d255edaf8807b6511b3a74b955d20df7\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fe5ab5ab2e0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5627bf7d7fe3 <unknown>\nE       #1 0x5627bf516d36 <unknown>\nE       #2 0x5627bf553c4d <unknown>\nE       #3 0x5627bf553d61 <unknown>\nE       #4 0x5627bf58f6a4 <unknown>\nE       #5 0x5627bf5748ed <unknown>\nE       #6 0x5627bf58d232 <unknown>\nE       #7 0x5627bf574693 <unknown>\nE       #8 0x5627bf54703a <unknown>\nE       #9 0x5627bf54817e <unknown>\nE       #10 0x5627bf799dbd <unknown>\nE       #11 0x5627bf79dc6c <unknown>\nE       #12 0x5627bf7a74b0 <unknown>\nE       #13 0x5627bf79ed63 <unknown>\nE       #14 0x5627bf771c35 <unknown>\nE       #15 0x5627bf7c2138 <unknown>\nE       #16 0x5627bf7c22c7 <unknown>\nE       #17 0x5627bf7d0093 <unknown>\nE       #18 0x7ffa4b992b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"json_reader","time":{"start":1682698112312,"stop":1682698112312,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ini_reader","time":{"start":1682698112312,"stop":1682698112313,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_driver","time":{"start":1682698144929,"stop":1682698148296,"duration":3367},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Log out from app","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5627bf7d7fe3 <unknown>\n#1 0x5627bf516d36 <unknown>\n#2 0x5627bf553c4d <unknown>\n#3 0x5627bf553d61 <unknown>\n#4 0x5627bf58f6a4 <unknown>\n#5 0x5627bf5748ed <unknown>\n#6 0x5627bf58d232 <unknown>\n#7 0x5627bf574693 <unknown>\n#8 0x5627bf54703a <unknown>\n#9 0x5627bf54817e <unknown>\n#10 0x5627bf799dbd <unknown>\n#11 0x5627bf79dc6c <unknown>\n#12 0x5627bf7a74b0 <unknown>\n#13 0x5627bf79ed63 <unknown>\n#14 0x5627bf771c35 <unknown>\n#15 0x5627bf7c2138 <unknown>\n#16 0x5627bf7c22c7 <unknown>\n#17 0x5627bf7d0093 <unknown>\n#18 0x7ffa4b992b43 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7fe5ab91ded0>\njson_reader = <utils.json_parser.JsonParser object at 0x7fe5ab731720>\nini_reader = <utils.config_parser.ConfigParserIni object at 0x7fe5ab7309a0>\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_reader, ini_reader):\n        username = ini_reader.config_section_dict(\"Base Url\")[\"username\"]\n        password = ini_reader.config_section_dict(\"Base Url\")[\"password\"]\n        # example of a simple text attachment\n        allure.attach(body=username, name=\"username\", attachment_type=allure.attachment_type.TEXT)\n        login_page = LoginPage(self.driver)\n        about_page = AboutPage(self.driver)\n>       about_page.click_login_link()\n\ntests/test_login.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:17: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:17: in click\n    el: WebElement = self._wait.until(expected_conditions.element_to_be_clickable(webelement))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"d255edaf8807b6511b3a74b955d20df7\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fe5ab5ab2e0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5627bf7d7fe3 <unknown>\nE       #1 0x5627bf516d36 <unknown>\nE       #2 0x5627bf553c4d <unknown>\nE       #3 0x5627bf553d61 <unknown>\nE       #4 0x5627bf58f6a4 <unknown>\nE       #5 0x5627bf5748ed <unknown>\nE       #6 0x5627bf58d232 <unknown>\nE       #7 0x5627bf574693 <unknown>\nE       #8 0x5627bf54703a <unknown>\nE       #9 0x5627bf54817e <unknown>\nE       #10 0x5627bf799dbd <unknown>\nE       #11 0x5627bf79dc6c <unknown>\nE       #12 0x5627bf7a74b0 <unknown>\nE       #13 0x5627bf79ed63 <unknown>\nE       #14 0x5627bf771c35 <unknown>\nE       #15 0x5627bf7c2138 <unknown>\nE       #16 0x5627bf7c22c7 <unknown>\nE       #17 0x5627bf7d0093 <unknown>\nE       #18 0x7ffa4b992b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1682698148297,"stop":1682698158525,"duration":10228},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5627bf7d7fe3 <unknown>\n#1 0x5627bf516d36 <unknown>\n#2 0x5627bf553c4d <unknown>\n#3 0x5627bf553d61 <unknown>\n#4 0x5627bf58f6a4 <unknown>\n#5 0x5627bf5748ed <unknown>\n#6 0x5627bf58d232 <unknown>\n#7 0x5627bf574693 <unknown>\n#8 0x5627bf54703a <unknown>\n#9 0x5627bf54817e <unknown>\n#10 0x5627bf799dbd <unknown>\n#11 0x5627bf79dc6c <unknown>\n#12 0x5627bf7a74b0 <unknown>\n#13 0x5627bf79ed63 <unknown>\n#14 0x5627bf771c35 <unknown>\n#15 0x5627bf7c2138 <unknown>\n#16 0x5627bf7c22c7 <unknown>\n#17 0x5627bf7d0093 <unknown>\n#18 0x7ffa4b992b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/about_page.py\", line 17, in click_login_link\n    self.click(self.LOGIN_LINK)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 17, in click\n    el: WebElement = self._wait.until(expected_conditions.element_to_be_clickable(webelement))\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"65672168dc4576cc","name":"username","source":"65672168dc4576cc.txt","type":"text/plain","size":18},{"uid":"43a1334ed485d6f8","name":"Full Page Screenshot","source":"43a1334ed485d6f8.png","type":"image/png","size":2646979},{"uid":"996dbab5c3f59d8b","name":"URL","source":"996dbab5c3f59d8b.uri","type":"text/uri-list","size":23},{"uid":"9f5f71aec0ebdaaf","name":"public ip address","source":"9f5f71aec0ebdaaf.txt","type":"text/plain","size":12},{"uid":"38a48df497ece70f","name":"Cookies","source":"38a48df497ece70f.json","type":"application/json","size":3527},{"uid":"428d7793641054c8","name":"Session Storage","source":"428d7793641054c8.json","type":"application/json","size":2},{"uid":"69f2d2ec81a77c06","name":"Local Storage","source":"69f2d2ec81a77c06.json","type":"application/json","size":1400},{"uid":"34fd4524329fa253","name":"Console Logs","source":"34fd4524329fa253.json","type":"application/json","size":5314},{"uid":"6b196ad4aa65c7e7","name":"Network Logs","source":"6b196ad4aa65c7e7.json","type":"application/json","size":85002}],"parameters":[],"stepsCount":1,"attachmentsCount":9,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"create_driver::0","time":{"start":1682698160828,"stop":1682698160896,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"severity","value":"blocker"},{"name":"epic","value":"Security"},{"name":"story","value":"As a user i want to be able to logout after a successful login."},{"name":"feature","value":"Login"},{"name":"tag","value":"run(order=2)"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az491-660"},{"name":"thread","value":"2189-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=2)","security"]},"source":"25986f148e5ab68b.json","parameterValues":[]}