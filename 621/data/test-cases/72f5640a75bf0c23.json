{"uid":"72f5640a75bf0c23","name":"Login with valid credentials test","fullName":"tests.login_test.TestLogin#test_valid_login","historyId":"18657c207d70aa57845e0b7f4751c290","time":{"start":1744513950539,"stop":1744513961118,"duration":10579},"description":"valid login","descriptionHtml":"<p>valid login</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x561a0310953a <unknown>\n#1 0x561a02c04f00 <unknown>\n#2 0x561a02c54c0c <unknown>\n#3 0x561a02c54e31 <unknown>\n#4 0x561a02c9abd4 <unknown>\n#5 0x561a02c795cd <unknown>\n#6 0x561a02c97f84 <unknown>\n#7 0x561a02c79343 <unknown>\n#8 0x561a02c4678a <unknown>\n#9 0x561a02c479de <unknown>\n#10 0x561a030d32cb <unknown>\n#11 0x561a030d7242 <unknown>\n#12 0x561a030c07ac <unknown>\n#13 0x561a030d7df7 <unknown>\n#14 0x561a030a4b2f <unknown>\n#15 0x561a030f81a8 <unknown>\n#16 0x561a030f8370 <unknown>\n#17 0x561a031083b6 <unknown>\n#18 0x7fb6ce69caa4 <unknown>\n#19 0x7fb6ce729c3c <unknown>","statusTrace":"self = <tests.login_test.TestLogin object at 0x7f4965900e90>\ndata = Data(forgot_password=ForgotPassword(error_message=\"We can't find a user with that e-mail address.\", success_message='A...ct='Non Existing', page_title='My Workspace', project_name='test project', project_type='quiz', template_type='Blank'))\n\n    @allure.description(\"valid login\")\n    @allure.title(\"Login with valid credentials test\")\n    @allure.tag(\"Tagged test\")\n    @pytest.mark.flaky(reruns=1)\n    def test_valid_login(self, data: Data):\n        self.about_page.set_geo_location(30.3079823, -97.893803)\n>       self.about_page.click_login_link()\n\ntests/login_test.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:18: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:59: in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"06c79a3720403d34fb3173de8bfa0051\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f4965758540>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x561a0310953a <unknown>\nE       #1 0x561a02c04f00 <unknown>\nE       #2 0x561a02c54c0c <unknown>\nE       #3 0x561a02c54e31 <unknown>\nE       #4 0x561a02c9abd4 <unknown>\nE       #5 0x561a02c795cd <unknown>\nE       #6 0x561a02c97f84 <unknown>\nE       #7 0x561a02c79343 <unknown>\nE       #8 0x561a02c4678a <unknown>\nE       #9 0x561a02c479de <unknown>\nE       #10 0x561a030d32cb <unknown>\nE       #11 0x561a030d7242 <unknown>\nE       #12 0x561a030c07ac <unknown>\nE       #13 0x561a030d7df7 <unknown>\nE       #14 0x561a030a4b2f <unknown>\nE       #15 0x561a030f81a8 <unknown>\nE       #16 0x561a030f8370 <unknown>\nE       #17 0x561a031083b6 <unknown>\nE       #18 0x7fb6ce69caa4 <unknown>\nE       #19 0x7fb6ce729c3c <unknown>\n\n.venv/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"session_request","time":{"start":1744513922319,"stop":1744513922319,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1744513922319,"stop":1744513922319,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1744513922319,"stop":1744513922319,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"data","time":{"start":1744513922320,"stop":1744513922320,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"valid login","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x561a0310953a <unknown>\n#1 0x561a02c04f00 <unknown>\n#2 0x561a02c54c0c <unknown>\n#3 0x561a02c54e31 <unknown>\n#4 0x561a02c9abd4 <unknown>\n#5 0x561a02c795cd <unknown>\n#6 0x561a02c97f84 <unknown>\n#7 0x561a02c79343 <unknown>\n#8 0x561a02c4678a <unknown>\n#9 0x561a02c479de <unknown>\n#10 0x561a030d32cb <unknown>\n#11 0x561a030d7242 <unknown>\n#12 0x561a030c07ac <unknown>\n#13 0x561a030d7df7 <unknown>\n#14 0x561a030a4b2f <unknown>\n#15 0x561a030f81a8 <unknown>\n#16 0x561a030f8370 <unknown>\n#17 0x561a031083b6 <unknown>\n#18 0x7fb6ce69caa4 <unknown>\n#19 0x7fb6ce729c3c <unknown>","statusTrace":"self = <tests.login_test.TestLogin object at 0x7f4965900e90>\ndata = Data(forgot_password=ForgotPassword(error_message=\"We can't find a user with that e-mail address.\", success_message='A...ct='Non Existing', page_title='My Workspace', project_name='test project', project_type='quiz', template_type='Blank'))\n\n    @allure.description(\"valid login\")\n    @allure.title(\"Login with valid credentials test\")\n    @allure.tag(\"Tagged test\")\n    @pytest.mark.flaky(reruns=1)\n    def test_valid_login(self, data: Data):\n        self.about_page.set_geo_location(30.3079823, -97.893803)\n>       self.about_page.click_login_link()\n\ntests/login_test.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:18: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:59: in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"06c79a3720403d34fb3173de8bfa0051\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f4965758540>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x561a0310953a <unknown>\nE       #1 0x561a02c04f00 <unknown>\nE       #2 0x561a02c54c0c <unknown>\nE       #3 0x561a02c54e31 <unknown>\nE       #4 0x561a02c9abd4 <unknown>\nE       #5 0x561a02c795cd <unknown>\nE       #6 0x561a02c97f84 <unknown>\nE       #7 0x561a02c79343 <unknown>\nE       #8 0x561a02c4678a <unknown>\nE       #9 0x561a02c479de <unknown>\nE       #10 0x561a030d32cb <unknown>\nE       #11 0x561a030d7242 <unknown>\nE       #12 0x561a030c07ac <unknown>\nE       #13 0x561a030d7df7 <unknown>\nE       #14 0x561a030a4b2f <unknown>\nE       #15 0x561a030f81a8 <unknown>\nE       #16 0x561a030f8370 <unknown>\nE       #17 0x561a031083b6 <unknown>\nE       #18 0x7fb6ce69caa4 <unknown>\nE       #19 0x7fb6ce729c3c <unknown>\n\n.venv/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1744513950771,"stop":1744513961117,"duration":10346},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x561a0310953a <unknown>\n#1 0x561a02c04f00 <unknown>\n#2 0x561a02c54c0c <unknown>\n#3 0x561a02c54e31 <unknown>\n#4 0x561a02c9abd4 <unknown>\n#5 0x561a02c795cd <unknown>\n#6 0x561a02c97f84 <unknown>\n#7 0x561a02c79343 <unknown>\n#8 0x561a02c4678a <unknown>\n#9 0x561a02c479de <unknown>\n#10 0x561a030d32cb <unknown>\n#11 0x561a030d7242 <unknown>\n#12 0x561a030c07ac <unknown>\n#13 0x561a030d7df7 <unknown>\n#14 0x561a030a4b2f <unknown>\n#15 0x561a030f81a8 <unknown>\n#16 0x561a030f8370 <unknown>\n#17 0x561a031083b6 <unknown>\n#18 0x7fb6ce69caa4 <unknown>\n#19 0x7fb6ce729c3c <unknown>\n\n","statusTrace":"  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/about_page.py\", line 18, in click_login_link\n    self.click(self.LOGIN_LINK)\n    ~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 59, in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n                     ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.13/site-packages/selenium/webdriver/support/wait.py\", line 146, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"public ip address","time":{"start":1744513961131,"stop":1744513961179,"duration":48},"status":"passed","steps":[],"attachments":[{"uid":"f09ca17059b5bb80","name":"HTTP logs of http://checkip.amazonaws.com/","source":"f09ca17059b5bb80.txt","type":"text/plain","size":356}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"839c7c7eac77b55c","name":"Cookies","source":"839c7c7eac77b55c.json","type":"application/json","size":4169},{"uid":"c69a13e5e9c8f35d","name":"Session Storage","source":"c69a13e5e9c8f35d.json","type":"application/json","size":359},{"uid":"eccd6bf8ee5323cd","name":"Local Storage","source":"eccd6bf8ee5323cd.json","type":"application/json","size":500},{"uid":"81123cfb41f7e9c2","name":"Full Page Screenshot","source":"81123cfb41f7e9c2.png","type":"image/png","size":1358760},{"uid":"35664ea442d453b2","name":"URL","source":"35664ea442d453b2.uri","type":"text/uri-list","size":23},{"uid":"74a9987f8b69cb98","name":"Network Logs","source":"74a9987f8b69cb98.json","type":"application/json","size":59416}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":7,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"session_request::0","time":{"start":1744513991106,"stop":1744513991106,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Security"},{"name":"feature","value":"Login"},{"name":"tag","value":"Tagged test"},{"name":"severity","value":"blocker"},{"name":"tag","value":"flaky(reruns=1)"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"login_test"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az1368-705"},{"name":"thread","value":"1943-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.login_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["security","Tagged test","flaky(reruns=1)"]},"source":"72f5640a75bf0c23.json","parameterValues":[]}