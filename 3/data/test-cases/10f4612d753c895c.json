{"uid":"10f4612d753c895c","name":"Forgot Password with valid email test","fullName":"tests.test_forgot_password.TestForgotPassword#test_valid_email","historyId":"7ff7e178fd4f5b4b8deb31c8fc69c6a9","time":{"start":1687864045254,"stop":1687864055465,"duration":10211},"description":"Forgot password with a valid email address","descriptionHtml":"<p>Forgot password with a valid email address</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x56373464f4e3 <unknown>\n#1 0x56373437ec76 <unknown>\n#2 0x5637343bac96 <unknown>\n#3 0x5637343badc1 <unknown>\n#4 0x5637343f47f4 <unknown>\n#5 0x5637343da03d <unknown>\n#6 0x5637343f230e <unknown>\n#7 0x5637343d9de3 <unknown>\n#8 0x5637343af2dd <unknown>\n#9 0x5637343b034e <unknown>\n#10 0x56373460f3e4 <unknown>\n#11 0x5637346133d7 <unknown>\n#12 0x56373461db20 <unknown>\n#13 0x563734614023 <unknown>\n#14 0x5637345e21aa <unknown>\n#15 0x5637346386b8 <unknown>\n#16 0x563734638847 <unknown>\n#17 0x563734648243 <unknown>\n#18 0x7f0f4bcb5b43 <unknown>","statusTrace":"self = <tests.test_forgot_password.TestForgotPassword object at 0x7f673fced990>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nrequest = <FixtureRequest for <Function test_valid_email>>\n\n    @allure.description(\"Forgot password with a valid email address\")\n    @allure.title(\"Forgot Password with valid email test\")\n    def test_valid_email(self, json_data: dict, request: FixtureRequest):\n        email = request.config.getini(\"username\")\n>       self.about_page.click_login_link()\n\ntests/test_forgot_password.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:35: in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3e0f6b42a3da54d094d8643fafb7652b\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f673fbe2fc0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x56373464f4e3 <unknown>\nE       #1 0x56373437ec76 <unknown>\nE       #2 0x5637343bac96 <unknown>\nE       #3 0x5637343badc1 <unknown>\nE       #4 0x5637343f47f4 <unknown>\nE       #5 0x5637343da03d <unknown>\nE       #6 0x5637343f230e <unknown>\nE       #7 0x5637343d9de3 <unknown>\nE       #8 0x5637343af2dd <unknown>\nE       #9 0x5637343b034e <unknown>\nE       #10 0x56373460f3e4 <unknown>\nE       #11 0x5637346133d7 <unknown>\nE       #12 0x56373461db20 <unknown>\nE       #13 0x563734614023 <unknown>\nE       #14 0x5637345e21aa <unknown>\nE       #15 0x5637346386b8 <unknown>\nE       #16 0x563734638847 <unknown>\nE       #17 0x563734648243 <unknown>\nE       #18 0x7f0f4bcb5b43 <unknown>\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"json_data","time":{"start":1687863854449,"stop":1687863854449,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Forgot password with a valid email address","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x56373464f4e3 <unknown>\n#1 0x56373437ec76 <unknown>\n#2 0x5637343bac96 <unknown>\n#3 0x5637343badc1 <unknown>\n#4 0x5637343f47f4 <unknown>\n#5 0x5637343da03d <unknown>\n#6 0x5637343f230e <unknown>\n#7 0x5637343d9de3 <unknown>\n#8 0x5637343af2dd <unknown>\n#9 0x5637343b034e <unknown>\n#10 0x56373460f3e4 <unknown>\n#11 0x5637346133d7 <unknown>\n#12 0x56373461db20 <unknown>\n#13 0x563734614023 <unknown>\n#14 0x5637345e21aa <unknown>\n#15 0x5637346386b8 <unknown>\n#16 0x563734638847 <unknown>\n#17 0x563734648243 <unknown>\n#18 0x7f0f4bcb5b43 <unknown>","statusTrace":"self = <tests.test_forgot_password.TestForgotPassword object at 0x7f673fced990>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nrequest = <FixtureRequest for <Function test_valid_email>>\n\n    @allure.description(\"Forgot password with a valid email address\")\n    @allure.title(\"Forgot Password with valid email test\")\n    def test_valid_email(self, json_data: dict, request: FixtureRequest):\n        email = request.config.getini(\"username\")\n>       self.about_page.click_login_link()\n\ntests/test_forgot_password.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:35: in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3e0f6b42a3da54d094d8643fafb7652b\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f673fbe2fc0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x56373464f4e3 <unknown>\nE       #1 0x56373437ec76 <unknown>\nE       #2 0x5637343bac96 <unknown>\nE       #3 0x5637343badc1 <unknown>\nE       #4 0x5637343f47f4 <unknown>\nE       #5 0x5637343da03d <unknown>\nE       #6 0x5637343f230e <unknown>\nE       #7 0x5637343d9de3 <unknown>\nE       #8 0x5637343af2dd <unknown>\nE       #9 0x5637343b034e <unknown>\nE       #10 0x56373460f3e4 <unknown>\nE       #11 0x5637346133d7 <unknown>\nE       #12 0x56373461db20 <unknown>\nE       #13 0x563734614023 <unknown>\nE       #14 0x5637345e21aa <unknown>\nE       #15 0x5637346386b8 <unknown>\nE       #16 0x563734638847 <unknown>\nE       #17 0x563734648243 <unknown>\nE       #18 0x7f0f4bcb5b43 <unknown>\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1687864045254,"stop":1687864055464,"duration":10210},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x56373464f4e3 <unknown>\n#1 0x56373437ec76 <unknown>\n#2 0x5637343bac96 <unknown>\n#3 0x5637343badc1 <unknown>\n#4 0x5637343f47f4 <unknown>\n#5 0x5637343da03d <unknown>\n#6 0x5637343f230e <unknown>\n#7 0x5637343d9de3 <unknown>\n#8 0x5637343af2dd <unknown>\n#9 0x5637343b034e <unknown>\n#10 0x56373460f3e4 <unknown>\n#11 0x5637346133d7 <unknown>\n#12 0x56373461db20 <unknown>\n#13 0x563734614023 <unknown>\n#14 0x5637345e21aa <unknown>\n#15 0x5637346386b8 <unknown>\n#16 0x563734638847 <unknown>\n#17 0x563734648243 <unknown>\n#18 0x7f0f4bcb5b43 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/about_page.py\", line 19, in click_login_link\n    self.click(self.LOGIN_LINK)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 35, in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"36936947cee63fc3","name":"Full Page Screenshot","source":"36936947cee63fc3.png","type":"image/png","size":2757805},{"uid":"43410d105ebcaad","name":"URL","source":"43410d105ebcaad.uri","type":"text/uri-list","size":23},{"uid":"a5a5b8ef6c58fd3","name":"public ip address","source":"a5a5b8ef6c58fd3.txt","type":"text/plain","size":12},{"uid":"7158aad5b25b4744","name":"Cookies","source":"7158aad5b25b4744.json","type":"application/json","size":2740},{"uid":"66e2697e3bdaaf9c","name":"Session Storage","source":"66e2697e3bdaaf9c.json","type":"application/json","size":2},{"uid":"827dbcb58a6c35ab","name":"Local Storage","source":"827dbcb58a6c35ab.json","type":"application/json","size":208},{"uid":"46dcb023b3348bb4","name":"Console Logs","source":"46dcb023b3348bb4.json","type":"application/json","size":2},{"uid":"aa54c6f01e44c109","name":"Network Logs","source":"aa54c6f01e44c109.json","type":"application/json","size":47493}],"parameters":[],"stepsCount":1,"attachmentsCount":8,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"story","value":"Forgot Password Feature's Functionality"},{"name":"severity","value":"critical"},{"name":"epic","value":"Security"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_forgot_password"},{"name":"subSuite","value":"TestForgotPassword"},{"name":"host","value":"fv-az395-584"},{"name":"thread","value":"2304-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_forgot_password"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["security"]},"source":"10f4612d753c895c.json","parameterValues":[]}