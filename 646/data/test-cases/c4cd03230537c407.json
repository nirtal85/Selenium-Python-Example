{"uid":"c4cd03230537c407","name":"Login with valid credentials test","fullName":"tests.login_test.TestLogin#test_valid_login","historyId":"18657c207d70aa57845e0b7f4751c290","time":{"start":1746669135494,"stop":1746669146002,"duration":10508},"description":"valid login","descriptionHtml":"<p>valid login</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5600bec2753a <unknown>\n#1 0x5600be722f00 <unknown>\n#2 0x5600be772c0c <unknown>\n#3 0x5600be772e31 <unknown>\n#4 0x5600be7b8bd4 <unknown>\n#5 0x5600be7975cd <unknown>\n#6 0x5600be7b5f84 <unknown>\n#7 0x5600be797343 <unknown>\n#8 0x5600be76478a <unknown>\n#9 0x5600be7659de <unknown>\n#10 0x5600bebf12cb <unknown>\n#11 0x5600bebf5242 <unknown>\n#12 0x5600bebde7ac <unknown>\n#13 0x5600bebf5df7 <unknown>\n#14 0x5600bebc2b2f <unknown>\n#15 0x5600bec161a8 <unknown>\n#16 0x5600bec16370 <unknown>\n#17 0x5600bec263b6 <unknown>\n#18 0x7f4e9ba9caa4 <unknown>\n#19 0x7f4e9bb29c3c <unknown>","statusTrace":"self = <tests.login_test.TestLogin object at 0x7fa4e8204e90>\ndata = Data(forgot_password=ForgotPassword(error_message=\"We can't find a user with that e-mail address.\", success_message='A...ct='Non Existing', page_title='My Workspace', project_name='test project', project_type='quiz', template_type='Blank'))\n\n    @allure.description(\"valid login\")\n    @allure.title(\"Login with valid credentials test\")\n    @allure.tag(\"Tagged test\")\n    @pytest.mark.flaky(reruns=1)\n    def test_valid_login(self, data: Data):\n        self.about_page.set_geo_location(30.3079823, -97.893803)\n>       self.about_page.click_login_link()\n\ntests/login_test.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:18: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:59: in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c7820f5e0c697a27c5f38225fde766b9\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fa4e8067d80>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5600bec2753a <unknown>\nE       #1 0x5600be722f00 <unknown>\nE       #2 0x5600be772c0c <unknown>\nE       #3 0x5600be772e31 <unknown>\nE       #4 0x5600be7b8bd4 <unknown>\nE       #5 0x5600be7975cd <unknown>\nE       #6 0x5600be7b5f84 <unknown>\nE       #7 0x5600be797343 <unknown>\nE       #8 0x5600be76478a <unknown>\nE       #9 0x5600be7659de <unknown>\nE       #10 0x5600bebf12cb <unknown>\nE       #11 0x5600bebf5242 <unknown>\nE       #12 0x5600bebde7ac <unknown>\nE       #13 0x5600bebf5df7 <unknown>\nE       #14 0x5600bebc2b2f <unknown>\nE       #15 0x5600bec161a8 <unknown>\nE       #16 0x5600bec16370 <unknown>\nE       #17 0x5600bec263b6 <unknown>\nE       #18 0x7f4e9ba9caa4 <unknown>\nE       #19 0x7f4e9bb29c3c <unknown>\n\n.venv/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1746669105892,"stop":1746669105892,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"data","time":{"start":1746669105892,"stop":1746669105893,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1746669105892,"stop":1746669105892,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"session_request","time":{"start":1746669105892,"stop":1746669105892,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"valid login","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5600bec2753a <unknown>\n#1 0x5600be722f00 <unknown>\n#2 0x5600be772c0c <unknown>\n#3 0x5600be772e31 <unknown>\n#4 0x5600be7b8bd4 <unknown>\n#5 0x5600be7975cd <unknown>\n#6 0x5600be7b5f84 <unknown>\n#7 0x5600be797343 <unknown>\n#8 0x5600be76478a <unknown>\n#9 0x5600be7659de <unknown>\n#10 0x5600bebf12cb <unknown>\n#11 0x5600bebf5242 <unknown>\n#12 0x5600bebde7ac <unknown>\n#13 0x5600bebf5df7 <unknown>\n#14 0x5600bebc2b2f <unknown>\n#15 0x5600bec161a8 <unknown>\n#16 0x5600bec16370 <unknown>\n#17 0x5600bec263b6 <unknown>\n#18 0x7f4e9ba9caa4 <unknown>\n#19 0x7f4e9bb29c3c <unknown>","statusTrace":"self = <tests.login_test.TestLogin object at 0x7fa4e8204e90>\ndata = Data(forgot_password=ForgotPassword(error_message=\"We can't find a user with that e-mail address.\", success_message='A...ct='Non Existing', page_title='My Workspace', project_name='test project', project_type='quiz', template_type='Blank'))\n\n    @allure.description(\"valid login\")\n    @allure.title(\"Login with valid credentials test\")\n    @allure.tag(\"Tagged test\")\n    @pytest.mark.flaky(reruns=1)\n    def test_valid_login(self, data: Data):\n        self.about_page.set_geo_location(30.3079823, -97.893803)\n>       self.about_page.click_login_link()\n\ntests/login_test.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:18: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:59: in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c7820f5e0c697a27c5f38225fde766b9\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fa4e8067d80>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5600bec2753a <unknown>\nE       #1 0x5600be722f00 <unknown>\nE       #2 0x5600be772c0c <unknown>\nE       #3 0x5600be772e31 <unknown>\nE       #4 0x5600be7b8bd4 <unknown>\nE       #5 0x5600be7975cd <unknown>\nE       #6 0x5600be7b5f84 <unknown>\nE       #7 0x5600be797343 <unknown>\nE       #8 0x5600be76478a <unknown>\nE       #9 0x5600be7659de <unknown>\nE       #10 0x5600bebf12cb <unknown>\nE       #11 0x5600bebf5242 <unknown>\nE       #12 0x5600bebde7ac <unknown>\nE       #13 0x5600bebf5df7 <unknown>\nE       #14 0x5600bebc2b2f <unknown>\nE       #15 0x5600bec161a8 <unknown>\nE       #16 0x5600bec16370 <unknown>\nE       #17 0x5600bec263b6 <unknown>\nE       #18 0x7f4e9ba9caa4 <unknown>\nE       #19 0x7f4e9bb29c3c <unknown>\n\n.venv/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1746669135628,"stop":1746669146001,"duration":10373},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5600bec2753a <unknown>\n#1 0x5600be722f00 <unknown>\n#2 0x5600be772c0c <unknown>\n#3 0x5600be772e31 <unknown>\n#4 0x5600be7b8bd4 <unknown>\n#5 0x5600be7975cd <unknown>\n#6 0x5600be7b5f84 <unknown>\n#7 0x5600be797343 <unknown>\n#8 0x5600be76478a <unknown>\n#9 0x5600be7659de <unknown>\n#10 0x5600bebf12cb <unknown>\n#11 0x5600bebf5242 <unknown>\n#12 0x5600bebde7ac <unknown>\n#13 0x5600bebf5df7 <unknown>\n#14 0x5600bebc2b2f <unknown>\n#15 0x5600bec161a8 <unknown>\n#16 0x5600bec16370 <unknown>\n#17 0x5600bec263b6 <unknown>\n#18 0x7f4e9ba9caa4 <unknown>\n#19 0x7f4e9bb29c3c <unknown>\n\n","statusTrace":"  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.13/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/about_page.py\", line 18, in click_login_link\n    self.click(self.LOGIN_LINK)\n    ~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 59, in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n                     ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.13/site-packages/selenium/webdriver/support/wait.py\", line 146, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"public ip address","time":{"start":1746669146011,"stop":1746669146028,"duration":17},"status":"passed","steps":[],"attachments":[{"uid":"2bfbeddf3a4e50f7","name":"HTTP logs of http://checkip.amazonaws.com/","source":"2bfbeddf3a4e50f7.txt","type":"text/plain","size":357}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"32c125fa3a8299bf","name":"Cookies","source":"32c125fa3a8299bf.json","type":"application/json","size":4114},{"uid":"47dcd50677889066","name":"Session Storage","source":"47dcd50677889066.json","type":"application/json","size":359},{"uid":"17e824e0a9f88ae1","name":"Local Storage","source":"17e824e0a9f88ae1.json","type":"application/json","size":548},{"uid":"3140723db564b66f","name":"Full Page Screenshot","source":"3140723db564b66f.png","type":"image/png","size":1356626},{"uid":"2cfca5acd026cfa9","name":"URL","source":"2cfca5acd026cfa9.uri","type":"text/uri-list","size":23},{"uid":"bbc0ccca0fcb511b","name":"Network Logs","source":"bbc0ccca0fcb511b.json","type":"application/json","size":59513}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":7,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"session_request::0","time":{"start":1746669177903,"stop":1746669177904,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Login"},{"name":"epic","value":"Security"},{"name":"tag","value":"Tagged test"},{"name":"severity","value":"blocker"},{"name":"tag","value":"flaky(reruns=1)"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"login_test"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az2035-296"},{"name":"thread","value":"2041-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.login_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["security","Tagged test","flaky(reruns=1)"]},"source":"c4cd03230537c407.json","parameterValues":[]}