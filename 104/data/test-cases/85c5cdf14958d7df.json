{"uid":"85c5cdf14958d7df","name":"Logout of system test","fullName":"tests.login_test.TestLogin#test_logout","historyId":"e89a5a0e9aefe451ee262eba82370b01","time":{"start":1700097370749,"stop":1700097380993,"duration":10244},"description":"Log out from app","descriptionHtml":"<p>Log out from app</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5611791b9fb3 <unknown>\n#1 0x561178e8d4a7 <unknown>\n#2 0x561178ed4dd6 <unknown>\n#3 0x561178ed4ec1 <unknown>\n#4 0x561178f12354 <unknown>\n#5 0x561178ef696d <unknown>\n#6 0x561178f0fc02 <unknown>\n#7 0x561178ef6713 <unknown>\n#8 0x561178ec918b <unknown>\n#9 0x561178ec9f7e <unknown>\n#10 0x56117917f8d8 <unknown>\n#11 0x561179183800 <unknown>\n#12 0x56117918dcfc <unknown>\n#13 0x561179184418 <unknown>\n#14 0x56117915142f <unknown>\n#15 0x5611791a84e8 <unknown>\n#16 0x5611791a86b4 <unknown>\n#17 0x5611791b9143 <unknown>\n#18 0x7fba1ae94ac3 <unknown>","statusTrace":"self = <tests.login_test.TestLogin object at 0x7f7561378610>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    def test_logout(self, json_data: dict):\n        # example of a simple text attachment\n        allure.attach(\n            \"<h1>Example html attachment</h1>\",\n            name=\"HTML example\",\n            attachment_type=allure.attachment_type.HTML,\n        )\n        # example of a file attachment\n        allure.attach.file(\n            Path(Path(__file__).absolute().parent.parent, \"data\", \"dog.png\"),\n            name=\"Attach file example\",\n            attachment_type=allure.attachment_type.PNG,\n        )\n        allure.attach(\n            \"Some text content\",\n            name=\"TXT example\",\n            attachment_type=allure.attachment_type.TEXT,\n        )\n        allure.attach(\n            \"first,second,third\\none,two,three\",\n            name=\"CSV example\",\n            attachment_type=allure.attachment_type.CSV,\n        )\n        allure.attach(\n            json.dumps({\"first\": 1, \"second\": 2}, indent=2),\n            name=\"JSON example\",\n            attachment_type=allure.attachment_type.JSON,\n        )\n        xml_content = \"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n            <tag>\n                 <inside>...</inside>\n             </tag>\n         \"\"\"\n        allure.attach(\n            xml_content,\n            name=\"some attachment name\",\n            attachment_type=allure.attachment_type.XML,\n        )\n        allure.attach(\n            \"\\n\".join(\n                [\n                    \"https://github.com/allure-framework\",\n                    \"https://github.com/allure-examples\",\n                ]\n            ),\n            name=\"URI List example\",\n            attachment_type=allure.attachment_type.URI_LIST,\n        )\n>       self.about_page.click_login_link()\n\ntests/login_test.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:20: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:38: in click\n    el: WebElement = self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"801edcaecb2c004c4eb013f85e531c61\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f756145a520>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5611791b9fb3 <unknown>\nE       #1 0x561178e8d4a7 <unknown>\nE       #2 0x561178ed4dd6 <unknown>\nE       #3 0x561178ed4ec1 <unknown>\nE       #4 0x561178f12354 <unknown>\nE       #5 0x561178ef696d <unknown>\nE       #6 0x561178f0fc02 <unknown>\nE       #7 0x561178ef6713 <unknown>\nE       #8 0x561178ec918b <unknown>\nE       #9 0x561178ec9f7e <unknown>\nE       #10 0x56117917f8d8 <unknown>\nE       #11 0x561179183800 <unknown>\nE       #12 0x56117918dcfc <unknown>\nE       #13 0x561179184418 <unknown>\nE       #14 0x56117915142f <unknown>\nE       #15 0x5611791a84e8 <unknown>\nE       #16 0x5611791a86b4 <unknown>\nE       #17 0x5611791b9143 <unknown>\nE       #18 0x7fba1ae94ac3 <unknown>\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"json_data","time":{"start":1700097166894,"stop":1700097166895,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"base_url","time":{"start":1700097166894,"stop":1700097166894,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"_verify_url","time":{"start":1700097166894,"stop":1700097166894,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"testStage":{"description":"Log out from app","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5611791b9fb3 <unknown>\n#1 0x561178e8d4a7 <unknown>\n#2 0x561178ed4dd6 <unknown>\n#3 0x561178ed4ec1 <unknown>\n#4 0x561178f12354 <unknown>\n#5 0x561178ef696d <unknown>\n#6 0x561178f0fc02 <unknown>\n#7 0x561178ef6713 <unknown>\n#8 0x561178ec918b <unknown>\n#9 0x561178ec9f7e <unknown>\n#10 0x56117917f8d8 <unknown>\n#11 0x561179183800 <unknown>\n#12 0x56117918dcfc <unknown>\n#13 0x561179184418 <unknown>\n#14 0x56117915142f <unknown>\n#15 0x5611791a84e8 <unknown>\n#16 0x5611791a86b4 <unknown>\n#17 0x5611791b9143 <unknown>\n#18 0x7fba1ae94ac3 <unknown>","statusTrace":"self = <tests.login_test.TestLogin object at 0x7f7561378610>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    def test_logout(self, json_data: dict):\n        # example of a simple text attachment\n        allure.attach(\n            \"<h1>Example html attachment</h1>\",\n            name=\"HTML example\",\n            attachment_type=allure.attachment_type.HTML,\n        )\n        # example of a file attachment\n        allure.attach.file(\n            Path(Path(__file__).absolute().parent.parent, \"data\", \"dog.png\"),\n            name=\"Attach file example\",\n            attachment_type=allure.attachment_type.PNG,\n        )\n        allure.attach(\n            \"Some text content\",\n            name=\"TXT example\",\n            attachment_type=allure.attachment_type.TEXT,\n        )\n        allure.attach(\n            \"first,second,third\\none,two,three\",\n            name=\"CSV example\",\n            attachment_type=allure.attachment_type.CSV,\n        )\n        allure.attach(\n            json.dumps({\"first\": 1, \"second\": 2}, indent=2),\n            name=\"JSON example\",\n            attachment_type=allure.attachment_type.JSON,\n        )\n        xml_content = \"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n            <tag>\n                 <inside>...</inside>\n             </tag>\n         \"\"\"\n        allure.attach(\n            xml_content,\n            name=\"some attachment name\",\n            attachment_type=allure.attachment_type.XML,\n        )\n        allure.attach(\n            \"\\n\".join(\n                [\n                    \"https://github.com/allure-framework\",\n                    \"https://github.com/allure-examples\",\n                ]\n            ),\n            name=\"URI List example\",\n            attachment_type=allure.attachment_type.URI_LIST,\n        )\n>       self.about_page.click_login_link()\n\ntests/login_test.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:20: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:38: in click\n    el: WebElement = self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"801edcaecb2c004c4eb013f85e531c61\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f756145a520>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5611791b9fb3 <unknown>\nE       #1 0x561178e8d4a7 <unknown>\nE       #2 0x561178ed4dd6 <unknown>\nE       #3 0x561178ed4ec1 <unknown>\nE       #4 0x561178f12354 <unknown>\nE       #5 0x561178ef696d <unknown>\nE       #6 0x561178f0fc02 <unknown>\nE       #7 0x561178ef6713 <unknown>\nE       #8 0x561178ec918b <unknown>\nE       #9 0x561178ec9f7e <unknown>\nE       #10 0x56117917f8d8 <unknown>\nE       #11 0x561179183800 <unknown>\nE       #12 0x56117918dcfc <unknown>\nE       #13 0x561179184418 <unknown>\nE       #14 0x56117915142f <unknown>\nE       #15 0x5611791a84e8 <unknown>\nE       #16 0x5611791a86b4 <unknown>\nE       #17 0x5611791b9143 <unknown>\nE       #18 0x7fba1ae94ac3 <unknown>\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1700097370750,"stop":1700097380993,"duration":10243},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5611791b9fb3 <unknown>\n#1 0x561178e8d4a7 <unknown>\n#2 0x561178ed4dd6 <unknown>\n#3 0x561178ed4ec1 <unknown>\n#4 0x561178f12354 <unknown>\n#5 0x561178ef696d <unknown>\n#6 0x561178f0fc02 <unknown>\n#7 0x561178ef6713 <unknown>\n#8 0x561178ec918b <unknown>\n#9 0x561178ec9f7e <unknown>\n#10 0x56117917f8d8 <unknown>\n#11 0x561179183800 <unknown>\n#12 0x56117918dcfc <unknown>\n#13 0x561179184418 <unknown>\n#14 0x56117915142f <unknown>\n#15 0x5611791a84e8 <unknown>\n#16 0x5611791a86b4 <unknown>\n#17 0x5611791b9143 <unknown>\n#18 0x7fba1ae94ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/about_page.py\", line 20, in click_login_link\n    self.click(self.LOGIN_LINK)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 38, in click\n    el: WebElement = self.wait.until(\n                     ^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0}],"attachments":[{"uid":"5d9283efffe59278","name":"HTML example","source":"5d9283efffe59278.html","type":"text/html","size":32},{"uid":"d7a74769f00c4f39","name":"Attach file example","source":"d7a74769f00c4f39.png","type":"image/png","size":14730},{"uid":"3aad95239f9b7ea3","name":"TXT example","source":"3aad95239f9b7ea3.txt","type":"text/plain","size":17},{"uid":"3cf4732818427eca","name":"CSV example","source":"3cf4732818427eca.csv","type":"text/csv","size":32},{"uid":"c59492e7ddf6c33c","name":"JSON example","source":"c59492e7ddf6c33c.json","type":"application/json","size":31},{"uid":"9536fae6145fb27a","name":"some attachment name","source":"9536fae6145fb27a.xml","type":"application/xml","size":124},{"uid":"eb8e99a7d3517539","name":"URI List example","source":"eb8e99a7d3517539.uri","type":"text/uri-list","size":70},{"uid":"57ec9c5a66d89019","name":"public ip address","source":"57ec9c5a66d89019.txt","type":"text/plain","size":14},{"uid":"646b59fa33becbf2","name":"Cookies","source":"646b59fa33becbf2.json","type":"application/json","size":2503},{"uid":"c95f8c969eb414c2","name":"Session Storage","source":"c95f8c969eb414c2.json","type":"application/json","size":2},{"uid":"5bf744cc892a0874","name":"Local Storage","source":"5bf744cc892a0874.json","type":"application/json","size":208},{"uid":"dd1991b4bc8ec50","name":"Console Logs","source":"dd1991b4bc8ec50.json","type":"application/json","size":243},{"uid":"19556ed5e1e5f4c4","name":"Full Page Screenshot","source":"19556ed5e1e5f4c4.png","type":"image/png","size":723618},{"uid":"63f9b8ea0b9ff685","name":"URL","source":"63f9b8ea0b9ff685.uri","type":"text/uri-list","size":23},{"uid":"4c24e5318354d075","name":"Network Logs","source":"4c24e5318354d075.json","type":"application/json","size":2}],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":15},"afterStages":[],"labels":[{"name":"story","value":"As a user i want to be able to logout after a successful login."},{"name":"severity","value":"blocker"},{"name":"feature","value":"Login"},{"name":"epic","value":"Security"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"login_test"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az1530-756"},{"name":"thread","value":"2643-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.login_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["security"]},"source":"85c5cdf14958d7df.json","parameterValues":[]}