{"uid":"c55f71e95d999cba","name":"Logout of system test","fullName":"tests.test_login.TestLogin#test_logout","historyId":"22bac01b3c7491378deafbf6e6797ba7","time":{"start":1682769537201,"stop":1682769547408,"duration":10207},"description":"Log out from app","descriptionHtml":"<p>Log out from app</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5587e8e23fe3 <unknown>\n#1 0x5587e8b62d36 <unknown>\n#2 0x5587e8b9fc4d <unknown>\n#3 0x5587e8b9fd61 <unknown>\n#4 0x5587e8bdb6a4 <unknown>\n#5 0x5587e8bc08ed <unknown>\n#6 0x5587e8bd9232 <unknown>\n#7 0x5587e8bc0693 <unknown>\n#8 0x5587e8b9303a <unknown>\n#9 0x5587e8b9417e <unknown>\n#10 0x5587e8de5dbd <unknown>\n#11 0x5587e8de9c6c <unknown>\n#12 0x5587e8df34b0 <unknown>\n#13 0x5587e8dead63 <unknown>\n#14 0x5587e8dbdc35 <unknown>\n#15 0x5587e8e0e138 <unknown>\n#16 0x5587e8e0e2c7 <unknown>\n#17 0x5587e8e1c093 <unknown>\n#18 0x7f7d31b76b43 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7fd4004f40a0>\njson_reader = <utils.json_parser.JsonParser object at 0x7fd400583040>\nini_reader = <utils.config_parser.ConfigParserIni object at 0x7fd40031f100>\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_reader, ini_reader):\n        username = ini_reader.config_section_dict(\"Base Url\")[\"username\"]\n        password = ini_reader.config_section_dict(\"Base Url\")[\"password\"]\n        # example of a simple text attachment\n        allure.attach(body=username, name=\"username\", attachment_type=allure.attachment_type.TEXT)\n>       self.about_page.click_login_link()\n\ntests/test_login.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:21: in click\n    el: WebElement = self._wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a220f5b3e5c6abd3e9e53bdca8e63c19\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fd400193250>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5587e8e23fe3 <unknown>\nE       #1 0x5587e8b62d36 <unknown>\nE       #2 0x5587e8b9fc4d <unknown>\nE       #3 0x5587e8b9fd61 <unknown>\nE       #4 0x5587e8bdb6a4 <unknown>\nE       #5 0x5587e8bc08ed <unknown>\nE       #6 0x5587e8bd9232 <unknown>\nE       #7 0x5587e8bc0693 <unknown>\nE       #8 0x5587e8b9303a <unknown>\nE       #9 0x5587e8b9417e <unknown>\nE       #10 0x5587e8de5dbd <unknown>\nE       #11 0x5587e8de9c6c <unknown>\nE       #12 0x5587e8df34b0 <unknown>\nE       #13 0x5587e8dead63 <unknown>\nE       #14 0x5587e8dbdc35 <unknown>\nE       #15 0x5587e8e0e138 <unknown>\nE       #16 0x5587e8e0e2c7 <unknown>\nE       #17 0x5587e8e1c093 <unknown>\nE       #18 0x7f7d31b76b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"json_reader","time":{"start":1682769490508,"stop":1682769490508,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ini_reader","time":{"start":1682769490508,"stop":1682769490509,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_driver","time":{"start":1682769534456,"stop":1682769537200,"duration":2744},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Log out from app","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5587e8e23fe3 <unknown>\n#1 0x5587e8b62d36 <unknown>\n#2 0x5587e8b9fc4d <unknown>\n#3 0x5587e8b9fd61 <unknown>\n#4 0x5587e8bdb6a4 <unknown>\n#5 0x5587e8bc08ed <unknown>\n#6 0x5587e8bd9232 <unknown>\n#7 0x5587e8bc0693 <unknown>\n#8 0x5587e8b9303a <unknown>\n#9 0x5587e8b9417e <unknown>\n#10 0x5587e8de5dbd <unknown>\n#11 0x5587e8de9c6c <unknown>\n#12 0x5587e8df34b0 <unknown>\n#13 0x5587e8dead63 <unknown>\n#14 0x5587e8dbdc35 <unknown>\n#15 0x5587e8e0e138 <unknown>\n#16 0x5587e8e0e2c7 <unknown>\n#17 0x5587e8e1c093 <unknown>\n#18 0x7f7d31b76b43 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7fd4004f40a0>\njson_reader = <utils.json_parser.JsonParser object at 0x7fd400583040>\nini_reader = <utils.config_parser.ConfigParserIni object at 0x7fd40031f100>\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_reader, ini_reader):\n        username = ini_reader.config_section_dict(\"Base Url\")[\"username\"]\n        password = ini_reader.config_section_dict(\"Base Url\")[\"password\"]\n        # example of a simple text attachment\n        allure.attach(body=username, name=\"username\", attachment_type=allure.attachment_type.TEXT)\n>       self.about_page.click_login_link()\n\ntests/test_login.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:21: in click\n    el: WebElement = self._wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a220f5b3e5c6abd3e9e53bdca8e63c19\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fd400193250>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5587e8e23fe3 <unknown>\nE       #1 0x5587e8b62d36 <unknown>\nE       #2 0x5587e8b9fc4d <unknown>\nE       #3 0x5587e8b9fd61 <unknown>\nE       #4 0x5587e8bdb6a4 <unknown>\nE       #5 0x5587e8bc08ed <unknown>\nE       #6 0x5587e8bd9232 <unknown>\nE       #7 0x5587e8bc0693 <unknown>\nE       #8 0x5587e8b9303a <unknown>\nE       #9 0x5587e8b9417e <unknown>\nE       #10 0x5587e8de5dbd <unknown>\nE       #11 0x5587e8de9c6c <unknown>\nE       #12 0x5587e8df34b0 <unknown>\nE       #13 0x5587e8dead63 <unknown>\nE       #14 0x5587e8dbdc35 <unknown>\nE       #15 0x5587e8e0e138 <unknown>\nE       #16 0x5587e8e0e2c7 <unknown>\nE       #17 0x5587e8e1c093 <unknown>\nE       #18 0x7f7d31b76b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1682769537201,"stop":1682769547407,"duration":10206},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5587e8e23fe3 <unknown>\n#1 0x5587e8b62d36 <unknown>\n#2 0x5587e8b9fc4d <unknown>\n#3 0x5587e8b9fd61 <unknown>\n#4 0x5587e8bdb6a4 <unknown>\n#5 0x5587e8bc08ed <unknown>\n#6 0x5587e8bd9232 <unknown>\n#7 0x5587e8bc0693 <unknown>\n#8 0x5587e8b9303a <unknown>\n#9 0x5587e8b9417e <unknown>\n#10 0x5587e8de5dbd <unknown>\n#11 0x5587e8de9c6c <unknown>\n#12 0x5587e8df34b0 <unknown>\n#13 0x5587e8dead63 <unknown>\n#14 0x5587e8dbdc35 <unknown>\n#15 0x5587e8e0e138 <unknown>\n#16 0x5587e8e0e2c7 <unknown>\n#17 0x5587e8e1c093 <unknown>\n#18 0x7f7d31b76b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/about_page.py\", line 19, in click_login_link\n    self.click(self.LOGIN_LINK)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 21, in click\n    el: WebElement = self._wait.until(expected_conditions.element_to_be_clickable(locator))\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"e5f4a61611e3b2a2","name":"username","source":"e5f4a61611e3b2a2.txt","type":"text/plain","size":18},{"uid":"5f1df7609065c2ff","name":"Full Page Screenshot","source":"5f1df7609065c2ff.png","type":"image/png","size":2646979},{"uid":"3152d06f75655c2","name":"URL","source":"3152d06f75655c2.uri","type":"text/uri-list","size":23},{"uid":"57ba0579be58a61d","name":"public ip address","source":"57ba0579be58a61d.txt","type":"text/plain","size":14},{"uid":"ec0f50fef9efe73e","name":"Cookies","source":"ec0f50fef9efe73e.json","type":"application/json","size":3532},{"uid":"7a446b9b44e2c841","name":"Session Storage","source":"7a446b9b44e2c841.json","type":"application/json","size":2},{"uid":"e31bd35b6235a250","name":"Local Storage","source":"e31bd35b6235a250.json","type":"application/json","size":1400},{"uid":"50705d2734abc34e","name":"Console Logs","source":"50705d2734abc34e.json","type":"application/json","size":5314},{"uid":"24edad45f551eade","name":"Network Logs","source":"24edad45f551eade.json","type":"application/json","size":85003}],"parameters":[],"stepsCount":1,"attachmentsCount":9,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"create_driver::0","time":{"start":1682769549717,"stop":1682769549776,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"severity","value":"blocker"},{"name":"feature","value":"Login"},{"name":"epic","value":"Security"},{"name":"story","value":"As a user i want to be able to logout after a successful login."},{"name":"tag","value":"run(order=2)"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az402-614"},{"name":"thread","value":"2226-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=2)","security"]},"source":"c55f71e95d999cba.json","parameterValues":[]}