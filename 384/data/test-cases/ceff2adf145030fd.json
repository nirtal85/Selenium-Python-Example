{"uid":"ceff2adf145030fd","name":"Login with invalid credentials test","fullName":"tests.test_login.TestLogin#test_invalid_login","historyId":"759a8709b421dba7c516b861c451e0c7","time":{"start":1682763846713,"stop":1682763856901,"duration":10188},"description":"invalid login","descriptionHtml":"<p>invalid login</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5601588a4fe3 <unknown>\n#1 0x5601585e3d36 <unknown>\n#2 0x560158620c4d <unknown>\n#3 0x560158620d61 <unknown>\n#4 0x56015865c6a4 <unknown>\n#5 0x5601586418ed <unknown>\n#6 0x56015865a232 <unknown>\n#7 0x560158641693 <unknown>\n#8 0x56015861403a <unknown>\n#9 0x56015861517e <unknown>\n#10 0x560158866dbd <unknown>\n#11 0x56015886ac6c <unknown>\n#12 0x5601588744b0 <unknown>\n#13 0x56015886bd63 <unknown>\n#14 0x56015883ec35 <unknown>\n#15 0x56015888f138 <unknown>\n#16 0x56015888f2c7 <unknown>\n#17 0x56015889d093 <unknown>\n#18 0x7f4b87b2eb43 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7ff3e9e83100>\nemail = 'nirt236@gmail.com', password = '123456'\njson_reader = <utils.json_parser.JsonParser object at 0x7ff3e9f123e0>\n\n    @allure.description(\"invalid login\")\n    @allure.title(\"Login with invalid credentials test\")\n    @pytest.mark.parametrize(\"email, password\", users)\n    @pytest.mark.run(order=3)\n    def test_invalid_login(self, email: str, password : str, json_reader):\n>       self.about_page.click_login_link()\n\ntests/test_login.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:21: in click\n    el: WebElement = self._wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6ff7fdc985354c34fd01b0e7191ff6e6\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7ff3e9d0b910>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5601588a4fe3 <unknown>\nE       #1 0x5601585e3d36 <unknown>\nE       #2 0x560158620c4d <unknown>\nE       #3 0x560158620d61 <unknown>\nE       #4 0x56015865c6a4 <unknown>\nE       #5 0x5601586418ed <unknown>\nE       #6 0x56015865a232 <unknown>\nE       #7 0x560158641693 <unknown>\nE       #8 0x56015861403a <unknown>\nE       #9 0x56015861517e <unknown>\nE       #10 0x560158866dbd <unknown>\nE       #11 0x56015886ac6c <unknown>\nE       #12 0x5601588744b0 <unknown>\nE       #13 0x56015886bd63 <unknown>\nE       #14 0x56015883ec35 <unknown>\nE       #15 0x56015888f138 <unknown>\nE       #16 0x56015888f2c7 <unknown>\nE       #17 0x56015889d093 <unknown>\nE       #18 0x7f4b87b2eb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"json_reader","time":{"start":1682763772730,"stop":1682763772731,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"ini_reader","time":{"start":1682763772732,"stop":1682763772732,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_driver","time":{"start":1682763843828,"stop":1682763846712,"duration":2884},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"invalid login","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5601588a4fe3 <unknown>\n#1 0x5601585e3d36 <unknown>\n#2 0x560158620c4d <unknown>\n#3 0x560158620d61 <unknown>\n#4 0x56015865c6a4 <unknown>\n#5 0x5601586418ed <unknown>\n#6 0x56015865a232 <unknown>\n#7 0x560158641693 <unknown>\n#8 0x56015861403a <unknown>\n#9 0x56015861517e <unknown>\n#10 0x560158866dbd <unknown>\n#11 0x56015886ac6c <unknown>\n#12 0x5601588744b0 <unknown>\n#13 0x56015886bd63 <unknown>\n#14 0x56015883ec35 <unknown>\n#15 0x56015888f138 <unknown>\n#16 0x56015888f2c7 <unknown>\n#17 0x56015889d093 <unknown>\n#18 0x7f4b87b2eb43 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7ff3e9e83100>\nemail = 'nirt236@gmail.com', password = '123456'\njson_reader = <utils.json_parser.JsonParser object at 0x7ff3e9f123e0>\n\n    @allure.description(\"invalid login\")\n    @allure.title(\"Login with invalid credentials test\")\n    @pytest.mark.parametrize(\"email, password\", users)\n    @pytest.mark.run(order=3)\n    def test_invalid_login(self, email: str, password : str, json_reader):\n>       self.about_page.click_login_link()\n\ntests/test_login.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:21: in click\n    el: WebElement = self._wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6ff7fdc985354c34fd01b0e7191ff6e6\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7ff3e9d0b910>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5601588a4fe3 <unknown>\nE       #1 0x5601585e3d36 <unknown>\nE       #2 0x560158620c4d <unknown>\nE       #3 0x560158620d61 <unknown>\nE       #4 0x56015865c6a4 <unknown>\nE       #5 0x5601586418ed <unknown>\nE       #6 0x56015865a232 <unknown>\nE       #7 0x560158641693 <unknown>\nE       #8 0x56015861403a <unknown>\nE       #9 0x56015861517e <unknown>\nE       #10 0x560158866dbd <unknown>\nE       #11 0x56015886ac6c <unknown>\nE       #12 0x5601588744b0 <unknown>\nE       #13 0x56015886bd63 <unknown>\nE       #14 0x56015883ec35 <unknown>\nE       #15 0x56015888f138 <unknown>\nE       #16 0x56015888f2c7 <unknown>\nE       #17 0x56015889d093 <unknown>\nE       #18 0x7f4b87b2eb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1682763846713,"stop":1682763856900,"duration":10187},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5601588a4fe3 <unknown>\n#1 0x5601585e3d36 <unknown>\n#2 0x560158620c4d <unknown>\n#3 0x560158620d61 <unknown>\n#4 0x56015865c6a4 <unknown>\n#5 0x5601586418ed <unknown>\n#6 0x56015865a232 <unknown>\n#7 0x560158641693 <unknown>\n#8 0x56015861403a <unknown>\n#9 0x56015861517e <unknown>\n#10 0x560158866dbd <unknown>\n#11 0x56015886ac6c <unknown>\n#12 0x5601588744b0 <unknown>\n#13 0x56015886bd63 <unknown>\n#14 0x56015883ec35 <unknown>\n#15 0x56015888f138 <unknown>\n#16 0x56015888f2c7 <unknown>\n#17 0x56015889d093 <unknown>\n#18 0x7f4b87b2eb43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/about_page.py\", line 19, in click_login_link\n    self.click(self.LOGIN_LINK)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 21, in click\n    el: WebElement = self._wait.until(expected_conditions.element_to_be_clickable(locator))\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"bdb29a98fa5cfc7e","name":"Full Page Screenshot","source":"bdb29a98fa5cfc7e.png","type":"image/png","size":2646979},{"uid":"6504aeace6f1c07b","name":"URL","source":"6504aeace6f1c07b.uri","type":"text/uri-list","size":23},{"uid":"352b1e2e45338911","name":"public ip address","source":"352b1e2e45338911.txt","type":"text/plain","size":15},{"uid":"7a63b1b3e82d13b3","name":"Cookies","source":"7a63b1b3e82d13b3.json","type":"application/json","size":3532},{"uid":"1aa416eebcdf1ebd","name":"Session Storage","source":"1aa416eebcdf1ebd.json","type":"application/json","size":2},{"uid":"a76f424c1588bda2","name":"Local Storage","source":"a76f424c1588bda2.json","type":"application/json","size":1400},{"uid":"17b4cc29dc42a2ef","name":"Console Logs","source":"17b4cc29dc42a2ef.json","type":"application/json","size":5314},{"uid":"a0a3c91b9e2cab19","name":"Network Logs","source":"a0a3c91b9e2cab19.json","type":"application/json","size":84989}],"parameters":[],"stepsCount":1,"attachmentsCount":8,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"create_driver::0","time":{"start":1682763859087,"stop":1682763859150,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"epic","value":"Security"},{"name":"severity","value":"blocker"},{"name":"feature","value":"Login"},{"name":"tag","value":"run(order=3)"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az404-880"},{"name":"thread","value":"2193-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"email","value":"'nirt236@gmail.com'"},{"name":"password","value":"'123456'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=3)","security"]},"source":"ceff2adf145030fd.json","parameterValues":["'nirt236@gmail.com'","'123456'"]}