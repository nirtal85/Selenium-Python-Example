{"uid":"1870fd344b7fd6c4","name":"Logout of system test","fullName":"tests.test_login.TestLogin#test_logout","historyId":"b90200cedc51a1ecbba9a19fbdbf8893","time":{"start":1688754786717,"stop":1688754796983,"duration":10266},"description":"Log out from app","descriptionHtml":"<p>Log out from app</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5597b96d74e3 <unknown>\n#1 0x5597b9406c76 <unknown>\n#2 0x5597b9442c96 <unknown>\n#3 0x5597b9442dc1 <unknown>\n#4 0x5597b947c7f4 <unknown>\n#5 0x5597b946203d <unknown>\n#6 0x5597b947a30e <unknown>\n#7 0x5597b9461de3 <unknown>\n#8 0x5597b94372dd <unknown>\n#9 0x5597b943834e <unknown>\n#10 0x5597b96973e4 <unknown>\n#11 0x5597b969b3d7 <unknown>\n#12 0x5597b96a5b20 <unknown>\n#13 0x5597b969c023 <unknown>\n#14 0x5597b966a1aa <unknown>\n#15 0x5597b96c06b8 <unknown>\n#16 0x5597b96c0847 <unknown>\n#17 0x5597b96d0243 <unknown>\n#18 0x7f1d1ee2bb43 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7f2c8e63f1d0>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nrequest = <FixtureRequest for <Function test_logout>>\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_data: dict, request: FixtureRequest):\n        username = request.config.getini(\"username\")\n        password = request.config.getini(\"password\")\n        # example of a simple text attachment\n        allure.attach(body=username, name=\"username\", attachment_type=allure.attachment_type.TEXT)\n>       self.about_page.click_login_link()\n\ntests/test_login.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:34: in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7baa75b7e0b0ba03046e9cdc32c4ecb8\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f2c8e200cc0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5597b96d74e3 <unknown>\nE       #1 0x5597b9406c76 <unknown>\nE       #2 0x5597b9442c96 <unknown>\nE       #3 0x5597b9442dc1 <unknown>\nE       #4 0x5597b947c7f4 <unknown>\nE       #5 0x5597b946203d <unknown>\nE       #6 0x5597b947a30e <unknown>\nE       #7 0x5597b9461de3 <unknown>\nE       #8 0x5597b94372dd <unknown>\nE       #9 0x5597b943834e <unknown>\nE       #10 0x5597b96973e4 <unknown>\nE       #11 0x5597b969b3d7 <unknown>\nE       #12 0x5597b96a5b20 <unknown>\nE       #13 0x5597b969c023 <unknown>\nE       #14 0x5597b966a1aa <unknown>\nE       #15 0x5597b96c06b8 <unknown>\nE       #16 0x5597b96c0847 <unknown>\nE       #17 0x5597b96d0243 <unknown>\nE       #18 0x7f1d1ee2bb43 <unknown>\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"json_data","time":{"start":1688754755781,"stop":1688754755781,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Log out from app","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5597b96d74e3 <unknown>\n#1 0x5597b9406c76 <unknown>\n#2 0x5597b9442c96 <unknown>\n#3 0x5597b9442dc1 <unknown>\n#4 0x5597b947c7f4 <unknown>\n#5 0x5597b946203d <unknown>\n#6 0x5597b947a30e <unknown>\n#7 0x5597b9461de3 <unknown>\n#8 0x5597b94372dd <unknown>\n#9 0x5597b943834e <unknown>\n#10 0x5597b96973e4 <unknown>\n#11 0x5597b969b3d7 <unknown>\n#12 0x5597b96a5b20 <unknown>\n#13 0x5597b969c023 <unknown>\n#14 0x5597b966a1aa <unknown>\n#15 0x5597b96c06b8 <unknown>\n#16 0x5597b96c0847 <unknown>\n#17 0x5597b96d0243 <unknown>\n#18 0x7f1d1ee2bb43 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7f2c8e63f1d0>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nrequest = <FixtureRequest for <Function test_logout>>\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_data: dict, request: FixtureRequest):\n        username = request.config.getini(\"username\")\n        password = request.config.getini(\"password\")\n        # example of a simple text attachment\n        allure.attach(body=username, name=\"username\", attachment_type=allure.attachment_type.TEXT)\n>       self.about_page.click_login_link()\n\ntests/test_login.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:34: in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7baa75b7e0b0ba03046e9cdc32c4ecb8\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f2c8e200cc0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5597b96d74e3 <unknown>\nE       #1 0x5597b9406c76 <unknown>\nE       #2 0x5597b9442c96 <unknown>\nE       #3 0x5597b9442dc1 <unknown>\nE       #4 0x5597b947c7f4 <unknown>\nE       #5 0x5597b946203d <unknown>\nE       #6 0x5597b947a30e <unknown>\nE       #7 0x5597b9461de3 <unknown>\nE       #8 0x5597b94372dd <unknown>\nE       #9 0x5597b943834e <unknown>\nE       #10 0x5597b96973e4 <unknown>\nE       #11 0x5597b969b3d7 <unknown>\nE       #12 0x5597b96a5b20 <unknown>\nE       #13 0x5597b969c023 <unknown>\nE       #14 0x5597b966a1aa <unknown>\nE       #15 0x5597b96c06b8 <unknown>\nE       #16 0x5597b96c0847 <unknown>\nE       #17 0x5597b96d0243 <unknown>\nE       #18 0x7f1d1ee2bb43 <unknown>\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1688754786718,"stop":1688754796982,"duration":10264},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5597b96d74e3 <unknown>\n#1 0x5597b9406c76 <unknown>\n#2 0x5597b9442c96 <unknown>\n#3 0x5597b9442dc1 <unknown>\n#4 0x5597b947c7f4 <unknown>\n#5 0x5597b946203d <unknown>\n#6 0x5597b947a30e <unknown>\n#7 0x5597b9461de3 <unknown>\n#8 0x5597b94372dd <unknown>\n#9 0x5597b943834e <unknown>\n#10 0x5597b96973e4 <unknown>\n#11 0x5597b969b3d7 <unknown>\n#12 0x5597b96a5b20 <unknown>\n#13 0x5597b969c023 <unknown>\n#14 0x5597b966a1aa <unknown>\n#15 0x5597b96c06b8 <unknown>\n#16 0x5597b96c0847 <unknown>\n#17 0x5597b96d0243 <unknown>\n#18 0x7f1d1ee2bb43 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/about_page.py\", line 19, in click_login_link\n    self.click(self.LOGIN_LINK)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 34, in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"350fc53985ec5c4f","name":"username","source":"350fc53985ec5c4f.txt","type":"text/plain","size":18},{"uid":"c6bca6bcdce7863c","name":"Full Page Screenshot","source":"c6bca6bcdce7863c.png","type":"image/png","size":2759801},{"uid":"be6bfb692cf3f1ca","name":"URL","source":"be6bfb692cf3f1ca.uri","type":"text/uri-list","size":23},{"uid":"98b7bb429528b448","name":"public ip address","source":"98b7bb429528b448.txt","type":"text/plain","size":12},{"uid":"16b17f32fb34e49a","name":"Cookies","source":"16b17f32fb34e49a.json","type":"application/json","size":3283},{"uid":"e594413cf081d888","name":"Session Storage","source":"e594413cf081d888.json","type":"application/json","size":2},{"uid":"8c45c95251becf21","name":"Local Storage","source":"8c45c95251becf21.json","type":"application/json","size":208},{"uid":"600eefe48b0eeac3","name":"Console Logs","source":"600eefe48b0eeac3.json","type":"application/json","size":2},{"uid":"5ee0192954590c63","name":"Network Logs","source":"5ee0192954590c63.json","type":"application/json","size":47517}],"parameters":[],"stepsCount":1,"attachmentsCount":9,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"story","value":"As a user i want to be able to logout after a successful login."},{"name":"severity","value":"blocker"},{"name":"feature","value":"Login"},{"name":"epic","value":"Security"},{"name":"tag","value":"run(order=2)"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az552-460"},{"name":"thread","value":"2318-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=2)","security"]},"source":"1870fd344b7fd6c4.json","parameterValues":[]}