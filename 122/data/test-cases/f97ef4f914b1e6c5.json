{"uid":"f97ef4f914b1e6c5","name":"Logout of system test","fullName":"tests.login_test.TestLogin#test_logout","historyId":"e89a5a0e9aefe451ee262eba82370b01","time":{"start":1701652601759,"stop":1701652612020,"duration":10261},"description":"Log out from app","descriptionHtml":"<p>Log out from app</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55dc15b4d5e3 <unknown>\n#1 0x55dc158100b7 <unknown>\n#2 0x55dc1585df53 <unknown>\n#3 0x55dc1585e051 <unknown>\n#4 0x55dc158a39c4 <unknown>\n#5 0x55dc15884f1d <unknown>\n#6 0x55dc158a0b3d <unknown>\n#7 0x55dc15884cc3 <unknown>\n#8 0x55dc158500e4 <unknown>\n#9 0x55dc158510ae <unknown>\n#10 0x55dc15b13ce1 <unknown>\n#11 0x55dc15b17b7e <unknown>\n#12 0x55dc15b014b5 <unknown>\n#13 0x55dc15b187d6 <unknown>\n#14 0x55dc15ae4dbf <unknown>\n#15 0x55dc15b3b748 <unknown>\n#16 0x55dc15b3b917 <unknown>\n#17 0x55dc15b4c773 <unknown>\n#18 0x7fc9f2094ac3 <unknown>","statusTrace":"self = <tests.login_test.TestLogin object at 0x7fcb06dad6d0>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    def test_logout(self, json_data: dict):\n        # example of a simple text attachment\n        allure.attach(\n            \"<h1>Example html attachment</h1>\",\n            name=\"HTML example\",\n            attachment_type=allure.attachment_type.HTML,\n        )\n        # example of a file attachment\n        allure.attach.file(\n            Path(Path(__file__).absolute().parent.parent, \"data\", \"dog.png\"),\n            name=\"Attach file example\",\n            attachment_type=allure.attachment_type.PNG,\n        )\n        allure.attach(\n            \"Some text content\",\n            name=\"TXT example\",\n            attachment_type=allure.attachment_type.TEXT,\n        )\n        allure.attach(\n            \"first,second,third\\none,two,three\",\n            name=\"CSV example\",\n            attachment_type=allure.attachment_type.CSV,\n        )\n        allure.attach(\n            json.dumps({\"first\": 1, \"second\": 2}, indent=2),\n            name=\"JSON example\",\n            attachment_type=allure.attachment_type.JSON,\n        )\n        xml_content = \"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n            <tag>\n                 <inside>...</inside>\n             </tag>\n         \"\"\"\n        allure.attach(\n            xml_content,\n            name=\"some attachment name\",\n            attachment_type=allure.attachment_type.XML,\n        )\n        allure.attach(\n            \"\\n\".join(\n                [\n                    \"https://github.com/allure-framework\",\n                    \"https://github.com/allure-examples\",\n                ]\n            ),\n            name=\"URI List example\",\n            attachment_type=allure.attachment_type.URI_LIST,\n        )\n>       self.about_page.click_login_link()\n\ntests/login_test.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:20: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:38: in click\n    el: WebElement = self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ec07cee7fd45ca372f9edb4548f17820\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fcb06e42020>\nmessage = ''\n\n    def until(self, method: Callable[[WebDriver], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55dc15b4d5e3 <unknown>\nE       #1 0x55dc158100b7 <unknown>\nE       #2 0x55dc1585df53 <unknown>\nE       #3 0x55dc1585e051 <unknown>\nE       #4 0x55dc158a39c4 <unknown>\nE       #5 0x55dc15884f1d <unknown>\nE       #6 0x55dc158a0b3d <unknown>\nE       #7 0x55dc15884cc3 <unknown>\nE       #8 0x55dc158500e4 <unknown>\nE       #9 0x55dc158510ae <unknown>\nE       #10 0x55dc15b13ce1 <unknown>\nE       #11 0x55dc15b17b7e <unknown>\nE       #12 0x55dc15b014b5 <unknown>\nE       #13 0x55dc15b187d6 <unknown>\nE       #14 0x55dc15ae4dbf <unknown>\nE       #15 0x55dc15b3b748 <unknown>\nE       #16 0x55dc15b3b917 <unknown>\nE       #17 0x55dc15b4c773 <unknown>\nE       #18 0x7fc9f2094ac3 <unknown>\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:101: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1701652395714,"stop":1701652395714,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1701652395714,"stop":1701652395714,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"json_data","time":{"start":1701652395714,"stop":1701652395714,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"Log out from app","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55dc15b4d5e3 <unknown>\n#1 0x55dc158100b7 <unknown>\n#2 0x55dc1585df53 <unknown>\n#3 0x55dc1585e051 <unknown>\n#4 0x55dc158a39c4 <unknown>\n#5 0x55dc15884f1d <unknown>\n#6 0x55dc158a0b3d <unknown>\n#7 0x55dc15884cc3 <unknown>\n#8 0x55dc158500e4 <unknown>\n#9 0x55dc158510ae <unknown>\n#10 0x55dc15b13ce1 <unknown>\n#11 0x55dc15b17b7e <unknown>\n#12 0x55dc15b014b5 <unknown>\n#13 0x55dc15b187d6 <unknown>\n#14 0x55dc15ae4dbf <unknown>\n#15 0x55dc15b3b748 <unknown>\n#16 0x55dc15b3b917 <unknown>\n#17 0x55dc15b4c773 <unknown>\n#18 0x7fc9f2094ac3 <unknown>","statusTrace":"self = <tests.login_test.TestLogin object at 0x7fcb06dad6d0>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    def test_logout(self, json_data: dict):\n        # example of a simple text attachment\n        allure.attach(\n            \"<h1>Example html attachment</h1>\",\n            name=\"HTML example\",\n            attachment_type=allure.attachment_type.HTML,\n        )\n        # example of a file attachment\n        allure.attach.file(\n            Path(Path(__file__).absolute().parent.parent, \"data\", \"dog.png\"),\n            name=\"Attach file example\",\n            attachment_type=allure.attachment_type.PNG,\n        )\n        allure.attach(\n            \"Some text content\",\n            name=\"TXT example\",\n            attachment_type=allure.attachment_type.TEXT,\n        )\n        allure.attach(\n            \"first,second,third\\none,two,three\",\n            name=\"CSV example\",\n            attachment_type=allure.attachment_type.CSV,\n        )\n        allure.attach(\n            json.dumps({\"first\": 1, \"second\": 2}, indent=2),\n            name=\"JSON example\",\n            attachment_type=allure.attachment_type.JSON,\n        )\n        xml_content = \"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n            <tag>\n                 <inside>...</inside>\n             </tag>\n         \"\"\"\n        allure.attach(\n            xml_content,\n            name=\"some attachment name\",\n            attachment_type=allure.attachment_type.XML,\n        )\n        allure.attach(\n            \"\\n\".join(\n                [\n                    \"https://github.com/allure-framework\",\n                    \"https://github.com/allure-examples\",\n                ]\n            ),\n            name=\"URI List example\",\n            attachment_type=allure.attachment_type.URI_LIST,\n        )\n>       self.about_page.click_login_link()\n\ntests/login_test.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:20: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:38: in click\n    el: WebElement = self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ec07cee7fd45ca372f9edb4548f17820\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fcb06e42020>\nmessage = ''\n\n    def until(self, method: Callable[[WebDriver], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55dc15b4d5e3 <unknown>\nE       #1 0x55dc158100b7 <unknown>\nE       #2 0x55dc1585df53 <unknown>\nE       #3 0x55dc1585e051 <unknown>\nE       #4 0x55dc158a39c4 <unknown>\nE       #5 0x55dc15884f1d <unknown>\nE       #6 0x55dc158a0b3d <unknown>\nE       #7 0x55dc15884cc3 <unknown>\nE       #8 0x55dc158500e4 <unknown>\nE       #9 0x55dc158510ae <unknown>\nE       #10 0x55dc15b13ce1 <unknown>\nE       #11 0x55dc15b17b7e <unknown>\nE       #12 0x55dc15b014b5 <unknown>\nE       #13 0x55dc15b187d6 <unknown>\nE       #14 0x55dc15ae4dbf <unknown>\nE       #15 0x55dc15b3b748 <unknown>\nE       #16 0x55dc15b3b917 <unknown>\nE       #17 0x55dc15b4c773 <unknown>\nE       #18 0x7fc9f2094ac3 <unknown>\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:101: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1701652601761,"stop":1701652612020,"duration":10259},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55dc15b4d5e3 <unknown>\n#1 0x55dc158100b7 <unknown>\n#2 0x55dc1585df53 <unknown>\n#3 0x55dc1585e051 <unknown>\n#4 0x55dc158a39c4 <unknown>\n#5 0x55dc15884f1d <unknown>\n#6 0x55dc158a0b3d <unknown>\n#7 0x55dc15884cc3 <unknown>\n#8 0x55dc158500e4 <unknown>\n#9 0x55dc158510ae <unknown>\n#10 0x55dc15b13ce1 <unknown>\n#11 0x55dc15b17b7e <unknown>\n#12 0x55dc15b014b5 <unknown>\n#13 0x55dc15b187d6 <unknown>\n#14 0x55dc15ae4dbf <unknown>\n#15 0x55dc15b3b748 <unknown>\n#16 0x55dc15b3b917 <unknown>\n#17 0x55dc15b4c773 <unknown>\n#18 0x7fc9f2094ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/about_page.py\", line 20, in click_login_link\n    self.click(self.LOGIN_LINK)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 38, in click\n    el: WebElement = self.wait.until(\n                     ^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 101, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"d4cb998a750673ed","name":"HTML example","source":"d4cb998a750673ed.html","type":"text/html","size":32},{"uid":"16b43d661f492c8c","name":"Attach file example","source":"16b43d661f492c8c.png","type":"image/png","size":14730},{"uid":"ea7420b7ea1419d","name":"TXT example","source":"ea7420b7ea1419d.txt","type":"text/plain","size":17},{"uid":"acb607636b6c0b2f","name":"CSV example","source":"acb607636b6c0b2f.csv","type":"text/csv","size":32},{"uid":"cc2625207ee4c2bb","name":"JSON example","source":"cc2625207ee4c2bb.json","type":"application/json","size":31},{"uid":"9a61c3564c352703","name":"some attachment name","source":"9a61c3564c352703.xml","type":"application/xml","size":124},{"uid":"6eafb67cee950efa","name":"URI List example","source":"6eafb67cee950efa.uri","type":"text/uri-list","size":70},{"uid":"624cdf1078399b6a","name":"public ip address","source":"624cdf1078399b6a.txt","type":"text/plain","size":12},{"uid":"53d75b6dba1f14db","name":"Cookies","source":"53d75b6dba1f14db.json","type":"application/json","size":3356},{"uid":"71e28dfb33bef0df","name":"Session Storage","source":"71e28dfb33bef0df.json","type":"application/json","size":357},{"uid":"e1b67bcecafefffc","name":"Local Storage","source":"e1b67bcecafefffc.json","type":"application/json","size":208},{"uid":"4d62a2bf0a6316d","name":"Console Logs","source":"4d62a2bf0a6316d.json","type":"application/json","size":2},{"uid":"8671dff0c4b9dbe3","name":"Full Page Screenshot","source":"8671dff0c4b9dbe3.png","type":"image/png","size":1298608},{"uid":"932cd0e095b3ba44","name":"URL","source":"932cd0e095b3ba44.uri","type":"text/uri-list","size":23},{"uid":"d2b8f983e2d22230","name":"Network Logs","source":"d2b8f983e2d22230.json","type":"application/json","size":22803}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":15,"hasContent":true},"afterStages":[],"labels":[{"name":"story","value":"As a user i want to be able to logout after a successful login."},{"name":"severity","value":"blocker"},{"name":"epic","value":"Security"},{"name":"feature","value":"Login"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"login_test"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az568-906"},{"name":"thread","value":"2221-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.login_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["security"]},"source":"f97ef4f914b1e6c5.json","parameterValues":[]}