{"uid":"659d40c8fccba21d","name":"Login with invalid credentials test","fullName":"tests.login_test.TestLogin#test_invalid_login","historyId":"9bbc2729137fa409b9bc8067987e1d0d","time":{"start":1743817449311,"stop":1743817459312,"duration":10001},"description":"invalid login","descriptionHtml":"<p>invalid login</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5622deaf153a <unknown>\n#1 0x5622de5ecf00 <unknown>\n#2 0x5622de63cc0c <unknown>\n#3 0x5622de63ce31 <unknown>\n#4 0x5622de682bd4 <unknown>\n#5 0x5622de6615cd <unknown>\n#6 0x5622de67ff84 <unknown>\n#7 0x5622de661343 <unknown>\n#8 0x5622de62e78a <unknown>\n#9 0x5622de62f9de <unknown>\n#10 0x5622deabb2cb <unknown>\n#11 0x5622deabf242 <unknown>\n#12 0x5622deaa87ac <unknown>\n#13 0x5622deabfdf7 <unknown>\n#14 0x5622dea8cb2f <unknown>\n#15 0x5622deae01a8 <unknown>\n#16 0x5622deae0370 <unknown>\n#17 0x5622deaf03b6 <unknown>\n#18 0x7f1ef769caa4 <unknown>\n#19 0x7f1ef7729c3c <unknown>","statusTrace":"self = <tests.login_test.TestLogin object at 0x7f4012b80a50>\nemail = 'elias@gmail.com', password = '12345Tr'\ndata = Data(forgot_password=ForgotPassword(error_message=\"We can't find a user with that e-mail address.\", success_message='A...ct='Non Existing', page_title='My Workspace', project_name='test project', project_type='quiz', template_type='Blank'))\n\n    @allure.description(\"invalid login\")\n    @allure.title(\"Login with invalid credentials test\")\n    @pytest.mark.parametrize(\"email, password\", users)\n    @pytest.mark.run(order=3)\n    def test_invalid_login(self, email: str, password: str, data: Data):\n>       self.about_page.click_login_link()\n\ntests/login_test.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:20: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:60: in click\n    el: WebElement = self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a91b24838031d840bbc4ff0c93c87b19\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f4012a80360>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5622deaf153a <unknown>\nE       #1 0x5622de5ecf00 <unknown>\nE       #2 0x5622de63cc0c <unknown>\nE       #3 0x5622de63ce31 <unknown>\nE       #4 0x5622de682bd4 <unknown>\nE       #5 0x5622de6615cd <unknown>\nE       #6 0x5622de67ff84 <unknown>\nE       #7 0x5622de661343 <unknown>\nE       #8 0x5622de62e78a <unknown>\nE       #9 0x5622de62f9de <unknown>\nE       #10 0x5622deabb2cb <unknown>\nE       #11 0x5622deabf242 <unknown>\nE       #12 0x5622deaa87ac <unknown>\nE       #13 0x5622deabfdf7 <unknown>\nE       #14 0x5622dea8cb2f <unknown>\nE       #15 0x5622deae01a8 <unknown>\nE       #16 0x5622deae0370 <unknown>\nE       #17 0x5622deaf03b6 <unknown>\nE       #18 0x7f1ef769caa4 <unknown>\nE       #19 0x7f1ef7729c3c <unknown>\n\n.venv/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1743817406823,"stop":1743817406824,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1743817406823,"stop":1743817406823,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"session_request","time":{"start":1743817406824,"stop":1743817406824,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"data","time":{"start":1743817406824,"stop":1743817406825,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"invalid login","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5622deaf153a <unknown>\n#1 0x5622de5ecf00 <unknown>\n#2 0x5622de63cc0c <unknown>\n#3 0x5622de63ce31 <unknown>\n#4 0x5622de682bd4 <unknown>\n#5 0x5622de6615cd <unknown>\n#6 0x5622de67ff84 <unknown>\n#7 0x5622de661343 <unknown>\n#8 0x5622de62e78a <unknown>\n#9 0x5622de62f9de <unknown>\n#10 0x5622deabb2cb <unknown>\n#11 0x5622deabf242 <unknown>\n#12 0x5622deaa87ac <unknown>\n#13 0x5622deabfdf7 <unknown>\n#14 0x5622dea8cb2f <unknown>\n#15 0x5622deae01a8 <unknown>\n#16 0x5622deae0370 <unknown>\n#17 0x5622deaf03b6 <unknown>\n#18 0x7f1ef769caa4 <unknown>\n#19 0x7f1ef7729c3c <unknown>","statusTrace":"self = <tests.login_test.TestLogin object at 0x7f4012b80a50>\nemail = 'elias@gmail.com', password = '12345Tr'\ndata = Data(forgot_password=ForgotPassword(error_message=\"We can't find a user with that e-mail address.\", success_message='A...ct='Non Existing', page_title='My Workspace', project_name='test project', project_type='quiz', template_type='Blank'))\n\n    @allure.description(\"invalid login\")\n    @allure.title(\"Login with invalid credentials test\")\n    @pytest.mark.parametrize(\"email, password\", users)\n    @pytest.mark.run(order=3)\n    def test_invalid_login(self, email: str, password: str, data: Data):\n>       self.about_page.click_login_link()\n\ntests/login_test.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:20: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:60: in click\n    el: WebElement = self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a91b24838031d840bbc4ff0c93c87b19\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f4012a80360>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5622deaf153a <unknown>\nE       #1 0x5622de5ecf00 <unknown>\nE       #2 0x5622de63cc0c <unknown>\nE       #3 0x5622de63ce31 <unknown>\nE       #4 0x5622de682bd4 <unknown>\nE       #5 0x5622de6615cd <unknown>\nE       #6 0x5622de67ff84 <unknown>\nE       #7 0x5622de661343 <unknown>\nE       #8 0x5622de62e78a <unknown>\nE       #9 0x5622de62f9de <unknown>\nE       #10 0x5622deabb2cb <unknown>\nE       #11 0x5622deabf242 <unknown>\nE       #12 0x5622deaa87ac <unknown>\nE       #13 0x5622deabfdf7 <unknown>\nE       #14 0x5622dea8cb2f <unknown>\nE       #15 0x5622deae01a8 <unknown>\nE       #16 0x5622deae0370 <unknown>\nE       #17 0x5622deaf03b6 <unknown>\nE       #18 0x7f1ef769caa4 <unknown>\nE       #19 0x7f1ef7729c3c <unknown>\n\n.venv/lib/python3.13/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1743817449311,"stop":1743817459311,"duration":10000},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5622deaf153a <unknown>\n#1 0x5622de5ecf00 <unknown>\n#2 0x5622de63cc0c <unknown>\n#3 0x5622de63ce31 <unknown>\n#4 0x5622de682bd4 <unknown>\n#5 0x5622de6615cd <unknown>\n#6 0x5622de67ff84 <unknown>\n#7 0x5622de661343 <unknown>\n#8 0x5622de62e78a <unknown>\n#9 0x5622de62f9de <unknown>\n#10 0x5622deabb2cb <unknown>\n#11 0x5622deabf242 <unknown>\n#12 0x5622deaa87ac <unknown>\n#13 0x5622deabfdf7 <unknown>\n#14 0x5622dea8cb2f <unknown>\n#15 0x5622deae01a8 <unknown>\n#16 0x5622deae0370 <unknown>\n#17 0x5622deaf03b6 <unknown>\n#18 0x7f1ef769caa4 <unknown>\n#19 0x7f1ef7729c3c <unknown>\n\n","statusTrace":"  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.13/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/about_page.py\", line 20, in click_login_link\n    self.click(self.LOGIN_LINK)\n    ~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 60, in click\n    el: WebElement = self.wait.until(\n                     ~~~~~~~~~~~~~~~^\n        expected_conditions.element_to_be_clickable(locator)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.13/site-packages/selenium/webdriver/support/wait.py\", line 146, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"public ip address","time":{"start":1743817459320,"stop":1743817459410,"duration":90},"status":"passed","steps":[],"attachments":[{"uid":"1249de67d49b3d3","name":"HTTP logs of http://checkip.amazonaws.com/","source":"1249de67d49b3d3.txt","type":"text/plain","size":356}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"8e64141eb90a9cf6","name":"Cookies","source":"8e64141eb90a9cf6.json","type":"application/json","size":4110},{"uid":"765e527525bb3790","name":"Session Storage","source":"765e527525bb3790.json","type":"application/json","size":359},{"uid":"23ec448d1f1876f4","name":"Local Storage","source":"23ec448d1f1876f4.json","type":"application/json","size":350},{"uid":"b55328268a82ba72","name":"Full Page Screenshot","source":"b55328268a82ba72.png","type":"image/png","size":1358254},{"uid":"efca9d0634478488","name":"URL","source":"efca9d0634478488.uri","type":"text/uri-list","size":23},{"uid":"ff8c4c9bf5a25a85","name":"Network Logs","source":"ff8c4c9bf5a25a85.json","type":"application/json","size":59480}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":7,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"session_request::0","time":{"start":1743817559939,"stop":1743817559939,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"blocker"},{"name":"feature","value":"Login"},{"name":"epic","value":"Security"},{"name":"tag","value":"run(order=3)"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"login_test"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az1657-525"},{"name":"thread","value":"2057-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.login_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"email","value":"'elias@gmail.com'"},{"name":"password","value":"'12345Tr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"8afc51fa5557b309","reportUrl":"https://nirtal85.github.io/Selenium-Python-Example/611//#testresult/8afc51fa5557b309","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5627c3b8253a <unknown>\n#1 0x5627c367df00 <unknown>\n#2 0x5627c36cdc0c <unknown>\n#3 0x5627c36cde31 <unknown>\n#4 0x5627c3713bd4 <unknown>\n#5 0x5627c36f25cd <unknown>\n#6 0x5627c3710f84 <unknown>\n#7 0x5627c36f2343 <unknown>\n#8 0x5627c36bf78a <unknown>\n#9 0x5627c36c09de <unknown>\n#10 0x5627c3b4c2cb <unknown>\n#11 0x5627c3b50242 <unknown>\n#12 0x5627c3b397ac <unknown>\n#13 0x5627c3b50df7 <unknown>\n#14 0x5627c3b1db2f <unknown>\n#15 0x5627c3b711a8 <unknown>\n#16 0x5627c3b71370 <unknown>\n#17 0x5627c3b813b6 <unknown>\n#18 0x7fe23d89caa4 <unknown>\n#19 0x7fe23d929c3c <unknown>","time":{"start":1743731132987,"stop":1743731143050,"duration":10063}},{"uid":"4f5bbe9fc0952a75","reportUrl":"https://nirtal85.github.io/Selenium-Python-Example/610//#testresult/4f5bbe9fc0952a75","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55c51925053a <unknown>\n#1 0x55c518d4bf00 <unknown>\n#2 0x55c518d9bc0c <unknown>\n#3 0x55c518d9be31 <unknown>\n#4 0x55c518de1bd4 <unknown>\n#5 0x55c518dc05cd <unknown>\n#6 0x55c518ddef84 <unknown>\n#7 0x55c518dc0343 <unknown>\n#8 0x55c518d8d78a <unknown>\n#9 0x55c518d8e9de <unknown>\n#10 0x55c51921a2cb <unknown>\n#11 0x55c51921e242 <unknown>\n#12 0x55c5192077ac <unknown>\n#13 0x55c51921edf7 <unknown>\n#14 0x55c5191ebb2f <unknown>\n#15 0x55c51923f1a8 <unknown>\n#16 0x55c51923f370 <unknown>\n#17 0x55c51924f3b6 <unknown>\n#18 0x7febf009caa4 <unknown>\n#19 0x7febf0129c3c <unknown>","time":{"start":1743644731563,"stop":1743644741565,"duration":10002}},{"uid":"163f34dec92d3f5b","reportUrl":"https://nirtal85.github.io/Selenium-Python-Example/609//#testresult/163f34dec92d3f5b","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5571cb6c853a <unknown>\n#1 0x5571cb1c3f00 <unknown>\n#2 0x5571cb213c0c <unknown>\n#3 0x5571cb213e31 <unknown>\n#4 0x5571cb259bd4 <unknown>\n#5 0x5571cb2385cd <unknown>\n#6 0x5571cb256f84 <unknown>\n#7 0x5571cb238343 <unknown>\n#8 0x5571cb20578a <unknown>\n#9 0x5571cb2069de <unknown>\n#10 0x5571cb6922cb <unknown>\n#11 0x5571cb696242 <unknown>\n#12 0x5571cb67f7ac <unknown>\n#13 0x5571cb696df7 <unknown>\n#14 0x5571cb663b2f <unknown>\n#15 0x5571cb6b71a8 <unknown>\n#16 0x5571cb6b7370 <unknown>\n#17 0x5571cb6c73b6 <unknown>\n#18 0x7f439a69caa4 <unknown>\n#19 0x7f439a729c3c <unknown>","time":{"start":1743558428050,"stop":1743558438077,"duration":10027}}]},"tags":["run(order=3)","security"]},"source":"659d40c8fccba21d.json","parameterValues":["'elias@gmail.com'","'12345Tr'"]}