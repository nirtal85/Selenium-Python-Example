{"uid":"72ff7635d8d3dd18","name":"Logout of system test","fullName":"tests.test_login.TestLogin#test_logout","historyId":"b90200cedc51a1ecbba9a19fbdbf8893","time":{"start":1683791455675,"stop":1683791465953,"duration":10278},"description":"Log out from app","descriptionHtml":"<p>Log out from app</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55c906ae9133 <unknown>\n#1 0x55c90681d966 <unknown>\n#2 0x55c90685a0dc <unknown>\n#3 0x55c90685a211 <unknown>\n#4 0x55c9068946c4 <unknown>\n#5 0x55c906879bfd <unknown>\n#6 0x55c9068921c7 <unknown>\n#7 0x55c9068799a3 <unknown>\n#8 0x55c90684e46a <unknown>\n#9 0x55c90684f55e <unknown>\n#10 0x55c906aa8cae <unknown>\n#11 0x55c906aac8fe <unknown>\n#12 0x55c906ab5f20 <unknown>\n#13 0x55c906aad923 <unknown>\n#14 0x55c906a80c0e <unknown>\n#15 0x55c906ad0b08 <unknown>\n#16 0x55c906ad0c97 <unknown>\n#17 0x55c906ae1113 <unknown>\n#18 0x7ff2c40fbb43 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7f4e73c340a0>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nrequest = <FixtureRequest for <Function test_logout>>\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_data: dict, request: FixtureRequest):\n        username = request.config.getini(\"username\")\n        password = request.config.getini(\"password\")\n        # example of a simple text attachment\n        allure.attach(body=username, name=\"username\", attachment_type=allure.attachment_type.TEXT)\n>       self.about_page.click_login_link()\n\ntests/test_login.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:21: in click\n    el: WebElement = self._wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9d79231ef31d4e08eb8ec6bad417a9b8\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f4e73aafeb0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55c906ae9133 <unknown>\nE       #1 0x55c90681d966 <unknown>\nE       #2 0x55c90685a0dc <unknown>\nE       #3 0x55c90685a211 <unknown>\nE       #4 0x55c9068946c4 <unknown>\nE       #5 0x55c906879bfd <unknown>\nE       #6 0x55c9068921c7 <unknown>\nE       #7 0x55c9068799a3 <unknown>\nE       #8 0x55c90684e46a <unknown>\nE       #9 0x55c90684f55e <unknown>\nE       #10 0x55c906aa8cae <unknown>\nE       #11 0x55c906aac8fe <unknown>\nE       #12 0x55c906ab5f20 <unknown>\nE       #13 0x55c906aad923 <unknown>\nE       #14 0x55c906a80c0e <unknown>\nE       #15 0x55c906ad0b08 <unknown>\nE       #16 0x55c906ad0c97 <unknown>\nE       #17 0x55c906ae1113 <unknown>\nE       #18 0x7ff2c40fbb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"json_data","time":{"start":1683791423910,"stop":1683791423910,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Log out from app","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55c906ae9133 <unknown>\n#1 0x55c90681d966 <unknown>\n#2 0x55c90685a0dc <unknown>\n#3 0x55c90685a211 <unknown>\n#4 0x55c9068946c4 <unknown>\n#5 0x55c906879bfd <unknown>\n#6 0x55c9068921c7 <unknown>\n#7 0x55c9068799a3 <unknown>\n#8 0x55c90684e46a <unknown>\n#9 0x55c90684f55e <unknown>\n#10 0x55c906aa8cae <unknown>\n#11 0x55c906aac8fe <unknown>\n#12 0x55c906ab5f20 <unknown>\n#13 0x55c906aad923 <unknown>\n#14 0x55c906a80c0e <unknown>\n#15 0x55c906ad0b08 <unknown>\n#16 0x55c906ad0c97 <unknown>\n#17 0x55c906ae1113 <unknown>\n#18 0x7ff2c40fbb43 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7f4e73c340a0>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nrequest = <FixtureRequest for <Function test_logout>>\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_data: dict, request: FixtureRequest):\n        username = request.config.getini(\"username\")\n        password = request.config.getini(\"password\")\n        # example of a simple text attachment\n        allure.attach(body=username, name=\"username\", attachment_type=allure.attachment_type.TEXT)\n>       self.about_page.click_login_link()\n\ntests/test_login.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:21: in click\n    el: WebElement = self._wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9d79231ef31d4e08eb8ec6bad417a9b8\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f4e73aafeb0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55c906ae9133 <unknown>\nE       #1 0x55c90681d966 <unknown>\nE       #2 0x55c90685a0dc <unknown>\nE       #3 0x55c90685a211 <unknown>\nE       #4 0x55c9068946c4 <unknown>\nE       #5 0x55c906879bfd <unknown>\nE       #6 0x55c9068921c7 <unknown>\nE       #7 0x55c9068799a3 <unknown>\nE       #8 0x55c90684e46a <unknown>\nE       #9 0x55c90684f55e <unknown>\nE       #10 0x55c906aa8cae <unknown>\nE       #11 0x55c906aac8fe <unknown>\nE       #12 0x55c906ab5f20 <unknown>\nE       #13 0x55c906aad923 <unknown>\nE       #14 0x55c906a80c0e <unknown>\nE       #15 0x55c906ad0b08 <unknown>\nE       #16 0x55c906ad0c97 <unknown>\nE       #17 0x55c906ae1113 <unknown>\nE       #18 0x7ff2c40fbb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1683791455676,"stop":1683791465952,"duration":10276},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55c906ae9133 <unknown>\n#1 0x55c90681d966 <unknown>\n#2 0x55c90685a0dc <unknown>\n#3 0x55c90685a211 <unknown>\n#4 0x55c9068946c4 <unknown>\n#5 0x55c906879bfd <unknown>\n#6 0x55c9068921c7 <unknown>\n#7 0x55c9068799a3 <unknown>\n#8 0x55c90684e46a <unknown>\n#9 0x55c90684f55e <unknown>\n#10 0x55c906aa8cae <unknown>\n#11 0x55c906aac8fe <unknown>\n#12 0x55c906ab5f20 <unknown>\n#13 0x55c906aad923 <unknown>\n#14 0x55c906a80c0e <unknown>\n#15 0x55c906ad0b08 <unknown>\n#16 0x55c906ad0c97 <unknown>\n#17 0x55c906ae1113 <unknown>\n#18 0x7ff2c40fbb43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/about_page.py\", line 19, in click_login_link\n    self.click(self.LOGIN_LINK)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 21, in click\n    el: WebElement = self._wait.until(expected_conditions.element_to_be_clickable(locator))\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"da6097975f6893eb","name":"username","source":"da6097975f6893eb.txt","type":"text/plain","size":18},{"uid":"54ae7562aea0a28f","name":"Full Page Screenshot","source":"54ae7562aea0a28f.png","type":"image/png","size":2660018},{"uid":"b17313961894e75c","name":"URL","source":"b17313961894e75c.uri","type":"text/uri-list","size":23},{"uid":"7c2ab7b85a789c8c","name":"public ip address","source":"7c2ab7b85a789c8c.txt","type":"text/plain","size":14},{"uid":"93e42645be6c0e99","name":"Cookies","source":"93e42645be6c0e99.json","type":"application/json","size":2735},{"uid":"1c429975b232a4c6","name":"Session Storage","source":"1c429975b232a4c6.json","type":"application/json","size":2},{"uid":"3b5edb9421e66946","name":"Local Storage","source":"3b5edb9421e66946.json","type":"application/json","size":2},{"uid":"dc9872d3b6174603","name":"Console Logs","source":"dc9872d3b6174603.json","type":"application/json","size":5314},{"uid":"13dae3514ff8a8db","name":"Network Logs","source":"13dae3514ff8a8db.json","type":"application/json","size":67072}],"parameters":[],"stepsCount":1,"attachmentsCount":9,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"story","value":"As a user i want to be able to logout after a successful login."},{"name":"feature","value":"Login"},{"name":"severity","value":"blocker"},{"name":"epic","value":"Security"},{"name":"tag","value":"run(order=2)"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az400-830"},{"name":"thread","value":"2154-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=2)","security"]},"source":"72ff7635d8d3dd18.json","parameterValues":[]}