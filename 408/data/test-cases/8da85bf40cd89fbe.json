{"uid":"8da85bf40cd89fbe","name":"Forgot Password with valid email test","fullName":"tests.test_forgot_password.TestForgotPassword#test_valid_email","historyId":"7ff7e178fd4f5b4b8deb31c8fc69c6a9","time":{"start":1683925579671,"stop":1683925589979,"duration":10308},"description":"Forgot password with a valid email address","descriptionHtml":"<p>Forgot password with a valid email address</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x563516c4a133 <unknown>\n#1 0x56351697e966 <unknown>\n#2 0x5635169bb0dc <unknown>\n#3 0x5635169bb211 <unknown>\n#4 0x5635169f56c4 <unknown>\n#5 0x5635169dabfd <unknown>\n#6 0x5635169f31c7 <unknown>\n#7 0x5635169da9a3 <unknown>\n#8 0x5635169af46a <unknown>\n#9 0x5635169b055e <unknown>\n#10 0x563516c09cae <unknown>\n#11 0x563516c0d8fe <unknown>\n#12 0x563516c16f20 <unknown>\n#13 0x563516c0e923 <unknown>\n#14 0x563516be1c0e <unknown>\n#15 0x563516c31b08 <unknown>\n#16 0x563516c31c97 <unknown>\n#17 0x563516c42113 <unknown>\n#18 0x7f22ca37bb43 <unknown>","statusTrace":"self = <tests.test_forgot_password.TestForgotPassword object at 0x7f0429b9ac50>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nrequest = <FixtureRequest for <Function test_valid_email>>\n\n    @allure.description(\"Forgot password with a valid email address\")\n    @allure.title(\"Forgot Password with valid email test\")\n    def test_valid_email(self, json_data: dict, request: FixtureRequest):\n        email = request.config.getini(\"username\")\n>       self.about_page.click_login_link()\n\ntests/test_forgot_password.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:23: in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b2c4fd603afd8e4a9c846477a8ef83b5\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f0429a11ea0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x563516c4a133 <unknown>\nE       #1 0x56351697e966 <unknown>\nE       #2 0x5635169bb0dc <unknown>\nE       #3 0x5635169bb211 <unknown>\nE       #4 0x5635169f56c4 <unknown>\nE       #5 0x5635169dabfd <unknown>\nE       #6 0x5635169f31c7 <unknown>\nE       #7 0x5635169da9a3 <unknown>\nE       #8 0x5635169af46a <unknown>\nE       #9 0x5635169b055e <unknown>\nE       #10 0x563516c09cae <unknown>\nE       #11 0x563516c0d8fe <unknown>\nE       #12 0x563516c16f20 <unknown>\nE       #13 0x563516c0e923 <unknown>\nE       #14 0x563516be1c0e <unknown>\nE       #15 0x563516c31b08 <unknown>\nE       #16 0x563516c31c97 <unknown>\nE       #17 0x563516c42113 <unknown>\nE       #18 0x7f22ca37bb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"json_data","time":{"start":1683925357851,"stop":1683925357852,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Forgot password with a valid email address","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x563516c4a133 <unknown>\n#1 0x56351697e966 <unknown>\n#2 0x5635169bb0dc <unknown>\n#3 0x5635169bb211 <unknown>\n#4 0x5635169f56c4 <unknown>\n#5 0x5635169dabfd <unknown>\n#6 0x5635169f31c7 <unknown>\n#7 0x5635169da9a3 <unknown>\n#8 0x5635169af46a <unknown>\n#9 0x5635169b055e <unknown>\n#10 0x563516c09cae <unknown>\n#11 0x563516c0d8fe <unknown>\n#12 0x563516c16f20 <unknown>\n#13 0x563516c0e923 <unknown>\n#14 0x563516be1c0e <unknown>\n#15 0x563516c31b08 <unknown>\n#16 0x563516c31c97 <unknown>\n#17 0x563516c42113 <unknown>\n#18 0x7f22ca37bb43 <unknown>","statusTrace":"self = <tests.test_forgot_password.TestForgotPassword object at 0x7f0429b9ac50>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nrequest = <FixtureRequest for <Function test_valid_email>>\n\n    @allure.description(\"Forgot password with a valid email address\")\n    @allure.title(\"Forgot Password with valid email test\")\n    def test_valid_email(self, json_data: dict, request: FixtureRequest):\n        email = request.config.getini(\"username\")\n>       self.about_page.click_login_link()\n\ntests/test_forgot_password.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:23: in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b2c4fd603afd8e4a9c846477a8ef83b5\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f0429a11ea0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x563516c4a133 <unknown>\nE       #1 0x56351697e966 <unknown>\nE       #2 0x5635169bb0dc <unknown>\nE       #3 0x5635169bb211 <unknown>\nE       #4 0x5635169f56c4 <unknown>\nE       #5 0x5635169dabfd <unknown>\nE       #6 0x5635169f31c7 <unknown>\nE       #7 0x5635169da9a3 <unknown>\nE       #8 0x5635169af46a <unknown>\nE       #9 0x5635169b055e <unknown>\nE       #10 0x563516c09cae <unknown>\nE       #11 0x563516c0d8fe <unknown>\nE       #12 0x563516c16f20 <unknown>\nE       #13 0x563516c0e923 <unknown>\nE       #14 0x563516be1c0e <unknown>\nE       #15 0x563516c31b08 <unknown>\nE       #16 0x563516c31c97 <unknown>\nE       #17 0x563516c42113 <unknown>\nE       #18 0x7f22ca37bb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1683925579672,"stop":1683925589979,"duration":10307},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x563516c4a133 <unknown>\n#1 0x56351697e966 <unknown>\n#2 0x5635169bb0dc <unknown>\n#3 0x5635169bb211 <unknown>\n#4 0x5635169f56c4 <unknown>\n#5 0x5635169dabfd <unknown>\n#6 0x5635169f31c7 <unknown>\n#7 0x5635169da9a3 <unknown>\n#8 0x5635169af46a <unknown>\n#9 0x5635169b055e <unknown>\n#10 0x563516c09cae <unknown>\n#11 0x563516c0d8fe <unknown>\n#12 0x563516c16f20 <unknown>\n#13 0x563516c0e923 <unknown>\n#14 0x563516be1c0e <unknown>\n#15 0x563516c31b08 <unknown>\n#16 0x563516c31c97 <unknown>\n#17 0x563516c42113 <unknown>\n#18 0x7f22ca37bb43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/about_page.py\", line 19, in click_login_link\n    self.click(self.LOGIN_LINK)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 23, in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"8461bfa98aecbbb","name":"Full Page Screenshot","source":"8461bfa98aecbbb.png","type":"image/png","size":2662571},{"uid":"73c83b051162a208","name":"URL","source":"73c83b051162a208.uri","type":"text/uri-list","size":23},{"uid":"136d4c41339f7f4b","name":"public ip address","source":"136d4c41339f7f4b.txt","type":"text/plain","size":12},{"uid":"21ed91430de74bd2","name":"Cookies","source":"21ed91430de74bd2.json","type":"application/json","size":2740},{"uid":"e348f9325e928412","name":"Session Storage","source":"e348f9325e928412.json","type":"application/json","size":2},{"uid":"3f6f976337106a70","name":"Local Storage","source":"3f6f976337106a70.json","type":"application/json","size":2},{"uid":"8dcbd4992daef8ab","name":"Console Logs","source":"8dcbd4992daef8ab.json","type":"application/json","size":5314},{"uid":"e67df4e80d7e8d65","name":"Network Logs","source":"e67df4e80d7e8d65.json","type":"application/json","size":67065}],"parameters":[],"stepsCount":1,"attachmentsCount":8,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"epic","value":"Security"},{"name":"story","value":"Forgot Password Feature's Functionality"},{"name":"severity","value":"critical"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_forgot_password"},{"name":"subSuite","value":"TestForgotPassword"},{"name":"host","value":"fv-az176-786"},{"name":"thread","value":"2180-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_forgot_password"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["security"]},"source":"8da85bf40cd89fbe.json","parameterValues":[]}