{"uid":"b3340fe226b773af","name":"Number of projects displayed in page test","fullName":"tests.test_workspaces.TestWorkspaces#test_number_of_existing_projects","historyId":"04e3a4b40218b30838faab48a90b5c28","time":{"start":1676017658477,"stop":1676017660156,"duration":1679},"description":"Compare between the actual number of projects seen on page and the number shown in workspaces block","descriptionHtml":"<p>Compare between the actual number of projects seen on page and the number shown in workspaces block</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=109.0.5414.119)\nStacktrace:\n#0 0x5570b89e5303 <unknown>\n#1 0x5570b87b9bbd <unknown>\n#2 0x5570b87f00bc <unknown>\n#3 0x5570b87ef669 <unknown>\n#4 0x5570b8816982 <unknown>\n#5 0x5570b87eb22f <unknown>\n#6 0x5570b8816b4e <unknown>\n#7 0x5570b882e88c <unknown>\n#8 0x5570b8816753 <unknown>\n#9 0x5570b87e9a14 <unknown>\n#10 0x5570b87eab7e <unknown>\n#11 0x5570b8a3432e <unknown>\n#12 0x5570b8a37c0e <unknown>\n#13 0x5570b8a1a610 <unknown>\n#14 0x5570b8a38c23 <unknown>\n#15 0x5570b8a0c545 <unknown>\n#16 0x5570b8a596a8 <unknown>\n#17 0x5570b8a59836 <unknown>\n#18 0x5570b8a74d13 <unknown>\n#19 0x7f36d67acb43 <unknown>","statusTrace":"self = <tests.test_workspaces.TestWorkspaces object at 0x7f8de9061130>\n\n    @allure.description(\n        \"Compare between the actual number of projects seen on page and the number shown in workspaces block\")\n    @allure.title(\"Number of projects displayed in page test\")\n    @pytest.mark.run(order=4)\n    def test_number_of_existing_projects(self):\n>       login(self.config_reader, self.pages)\n\ntests/test_workspaces.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_workspaces.py:14: in login\n    pages['login_page'].login(username, password)\npages/login_page.py:22: in login\n    self.fill_text(self.PASSWORD_FIELD, password)\npages/base_page.py:25: in fill_text\n    el.send_keys(txt)\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:230: in send_keys\n    self._execute(\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:403: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f8de8f0dca0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x5570b8a59836 \\\\u003Cunknown>\\\\n#18 0x5570b8a74d13 \\\\u003Cunknown>\\\\n#19 0x7f36d67acb43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: headless chrome=109.0.5414.119)\nE       Stacktrace:\nE       #0 0x5570b89e5303 <unknown>\nE       #1 0x5570b87b9bbd <unknown>\nE       #2 0x5570b87f00bc <unknown>\nE       #3 0x5570b87ef669 <unknown>\nE       #4 0x5570b8816982 <unknown>\nE       #5 0x5570b87eb22f <unknown>\nE       #6 0x5570b8816b4e <unknown>\nE       #7 0x5570b882e88c <unknown>\nE       #8 0x5570b8816753 <unknown>\nE       #9 0x5570b87e9a14 <unknown>\nE       #10 0x5570b87eab7e <unknown>\nE       #11 0x5570b8a3432e <unknown>\nE       #12 0x5570b8a37c0e <unknown>\nE       #13 0x5570b8a1a610 <unknown>\nE       #14 0x5570b8a38c23 <unknown>\nE       #15 0x5570b8a0c545 <unknown>\nE       #16 0x5570b8a596a8 <unknown>\nE       #17 0x5570b8a59836 <unknown>\nE       #18 0x5570b8a74d13 <unknown>\nE       #19 0x7f36d67acb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"write_allure_environment","time":{"start":1676017625199,"stop":1676017625199,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"prep_properties","time":{"start":1676017625199,"stop":1676017625199,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"create_driver","time":{"start":1676017656246,"stop":1676017658475,"duration":2229},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"pages","time":{"start":1676017658475,"stop":1676017658476,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"injector","time":{"start":1676017658476,"stop":1676017658476,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Compare between the actual number of projects seen on page and the number shown in workspaces block","status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=109.0.5414.119)\nStacktrace:\n#0 0x5570b89e5303 <unknown>\n#1 0x5570b87b9bbd <unknown>\n#2 0x5570b87f00bc <unknown>\n#3 0x5570b87ef669 <unknown>\n#4 0x5570b8816982 <unknown>\n#5 0x5570b87eb22f <unknown>\n#6 0x5570b8816b4e <unknown>\n#7 0x5570b882e88c <unknown>\n#8 0x5570b8816753 <unknown>\n#9 0x5570b87e9a14 <unknown>\n#10 0x5570b87eab7e <unknown>\n#11 0x5570b8a3432e <unknown>\n#12 0x5570b8a37c0e <unknown>\n#13 0x5570b8a1a610 <unknown>\n#14 0x5570b8a38c23 <unknown>\n#15 0x5570b8a0c545 <unknown>\n#16 0x5570b8a596a8 <unknown>\n#17 0x5570b8a59836 <unknown>\n#18 0x5570b8a74d13 <unknown>\n#19 0x7f36d67acb43 <unknown>","statusTrace":"self = <tests.test_workspaces.TestWorkspaces object at 0x7f8de9061130>\n\n    @allure.description(\n        \"Compare between the actual number of projects seen on page and the number shown in workspaces block\")\n    @allure.title(\"Number of projects displayed in page test\")\n    @pytest.mark.run(order=4)\n    def test_number_of_existing_projects(self):\n>       login(self.config_reader, self.pages)\n\ntests/test_workspaces.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/test_workspaces.py:14: in login\n    pages['login_page'].login(username, password)\npages/login_page.py:22: in login\n    self.fill_text(self.PASSWORD_FIELD, password)\npages/base_page.py:25: in fill_text\n    el.send_keys(txt)\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:230: in send_keys\n    self._execute(\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:403: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f8de8f0dca0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x5570b8a59836 \\\\u003Cunknown>\\\\n#18 0x5570b8a74d13 \\\\u003Cunknown>\\\\n#19 0x7f36d67acb43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: headless chrome=109.0.5414.119)\nE       Stacktrace:\nE       #0 0x5570b89e5303 <unknown>\nE       #1 0x5570b87b9bbd <unknown>\nE       #2 0x5570b87f00bc <unknown>\nE       #3 0x5570b87ef669 <unknown>\nE       #4 0x5570b8816982 <unknown>\nE       #5 0x5570b87eb22f <unknown>\nE       #6 0x5570b8816b4e <unknown>\nE       #7 0x5570b882e88c <unknown>\nE       #8 0x5570b8816753 <unknown>\nE       #9 0x5570b87e9a14 <unknown>\nE       #10 0x5570b87eab7e <unknown>\nE       #11 0x5570b8a3432e <unknown>\nE       #12 0x5570b8a37c0e <unknown>\nE       #13 0x5570b8a1a610 <unknown>\nE       #14 0x5570b8a38c23 <unknown>\nE       #15 0x5570b8a0c545 <unknown>\nE       #16 0x5570b8a596a8 <unknown>\nE       #17 0x5570b8a59836 <unknown>\nE       #18 0x5570b8a74d13 <unknown>\nE       #19 0x7f36d67acb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementNotInteractableException","steps":[{"name":"Click Login link","time":{"start":1676017658478,"stop":1676017659840,"duration":1362},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Log in with username: 'elias123@gmail.com' and password: 'El123456789'","time":{"start":1676017659840,"stop":1676017660156,"duration":316},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=109.0.5414.119)\nStacktrace:\n#0 0x5570b89e5303 <unknown>\n#1 0x5570b87b9bbd <unknown>\n#2 0x5570b87f00bc <unknown>\n#3 0x5570b87ef669 <unknown>\n#4 0x5570b8816982 <unknown>\n#5 0x5570b87eb22f <unknown>\n#6 0x5570b8816b4e <unknown>\n#7 0x5570b882e88c <unknown>\n#8 0x5570b8816753 <unknown>\n#9 0x5570b87e9a14 <unknown>\n#10 0x5570b87eab7e <unknown>\n#11 0x5570b8a3432e <unknown>\n#12 0x5570b8a37c0e <unknown>\n#13 0x5570b8a1a610 <unknown>\n#14 0x5570b8a38c23 <unknown>\n#15 0x5570b8a0c545 <unknown>\n#16 0x5570b8a596a8 <unknown>\n#17 0x5570b8a59836 <unknown>\n#18 0x5570b8a74d13 <unknown>\n#19 0x7f36d67acb43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/login_page.py\", line 22, in login\n    self.fill_text(self.PASSWORD_FIELD, password)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 25, in fill_text\n    el.send_keys(txt)\n  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py\", line 230, in send_keys\n    self._execute(\n  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py\", line 403, in _execute\n    return self._parent.execute(command, params)\n  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"username","value":"'elias123@gmail.com'"},{"name":"password","value":"'El123456789'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"create_driver::0","time":{"start":1676017660199,"stop":1676017660376,"duration":177},"status":"passed","steps":[],"attachments":[{"uid":"15adea5cc9d6a16e","name":"Screenshot","source":"15adea5cc9d6a16e.png","type":"image/png","size":60086},{"uid":"7ca225f93d461686","name":"public ip address","source":"7ca225f93d461686.txt","type":"text/plain","size":14},{"uid":"70295a02f1cf1abd","name":"Cookies","source":"70295a02f1cf1abd.json","type":"application/json","size":3697},{"uid":"592775144dad9a6","name":"Session Storage","source":"592775144dad9a6.json","type":"application/json","size":45},{"uid":"d203f2de2c68cb5f","name":"Local Storage","source":"d203f2de2c68cb5f.json","type":"application/json","size":2},{"uid":"50cc004447562c7a","name":"Console Logs","source":"50cc004447562c7a.json","type":"application/json","size":4071},{"uid":"b7ab9b29639bcc65","name":"Network Logs","source":"b7ab9b29639bcc65.json","type":"application/json","size":1284209}],"parameters":[],"stepsCount":0,"attachmentsCount":7,"shouldDisplayMessage":false,"hasContent":true},{"name":"write_allure_environment::0","time":{"start":1676017730723,"stop":1676017730736,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"epic","value":"Workspaces"},{"name":"story","value":"WorkSpaces Creation and Editing Functionality"},{"name":"severity","value":"normal"},{"name":"tag","value":"run(order=4)"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_workspaces"},{"name":"subSuite","value":"TestWorkspaces"},{"name":"host","value":"fv-az419-660"},{"name":"thread","value":"2145-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_workspaces"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=4)"]},"source":"b3340fe226b773af.json","parameterValues":[]}