{"uid":"970de94d7b313d23","name":"Logout of system test","fullName":"tests.test_login.TestLogin#test_logout","historyId":"22bac01b3c7491378deafbf6e6797ba7","time":{"start":1682771137501,"stop":1682771147784,"duration":10283},"description":"Log out from app","descriptionHtml":"<p>Log out from app</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5634165fefe3 <unknown>\n#1 0x56341633dd36 <unknown>\n#2 0x56341637ac4d <unknown>\n#3 0x56341637ad61 <unknown>\n#4 0x5634163b66a4 <unknown>\n#5 0x56341639b8ed <unknown>\n#6 0x5634163b4232 <unknown>\n#7 0x56341639b693 <unknown>\n#8 0x56341636e03a <unknown>\n#9 0x56341636f17e <unknown>\n#10 0x5634165c0dbd <unknown>\n#11 0x5634165c4c6c <unknown>\n#12 0x5634165ce4b0 <unknown>\n#13 0x5634165c5d63 <unknown>\n#14 0x563416598c35 <unknown>\n#15 0x5634165e9138 <unknown>\n#16 0x5634165e92c7 <unknown>\n#17 0x5634165f7093 <unknown>\n#18 0x7fab97411b43 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7f9b97ee80a0>\njson_reader = <utils.json_parser.JsonParser object at 0x7f9b97f74820>\nini_reader = <utils.config_parser.ConfigParserIni object at 0x7f9b97d0f1f0>\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_reader, ini_reader):\n        username = ini_reader.config_section_dict(\"Base Url\")[\"username\"]\n        password = ini_reader.config_section_dict(\"Base Url\")[\"password\"]\n        # example of a simple text attachment\n        allure.attach(body=username, name=\"username\", attachment_type=allure.attachment_type.TEXT)\n>       self.about_page.click_login_link()\n\ntests/test_login.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:21: in click\n    el: WebElement = self._wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e695bb79e53bfe02ec46c5839cacbc90\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f9b97e6f6d0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5634165fefe3 <unknown>\nE       #1 0x56341633dd36 <unknown>\nE       #2 0x56341637ac4d <unknown>\nE       #3 0x56341637ad61 <unknown>\nE       #4 0x5634163b66a4 <unknown>\nE       #5 0x56341639b8ed <unknown>\nE       #6 0x5634163b4232 <unknown>\nE       #7 0x56341639b693 <unknown>\nE       #8 0x56341636e03a <unknown>\nE       #9 0x56341636f17e <unknown>\nE       #10 0x5634165c0dbd <unknown>\nE       #11 0x5634165c4c6c <unknown>\nE       #12 0x5634165ce4b0 <unknown>\nE       #13 0x5634165c5d63 <unknown>\nE       #14 0x563416598c35 <unknown>\nE       #15 0x5634165e9138 <unknown>\nE       #16 0x5634165e92c7 <unknown>\nE       #17 0x5634165f7093 <unknown>\nE       #18 0x7fab97411b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"ini_reader","time":{"start":1682771099983,"stop":1682771099984,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"json_reader","time":{"start":1682771099983,"stop":1682771099983,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"create_driver","time":{"start":1682771134202,"stop":1682771137500,"duration":3298},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Log out from app","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5634165fefe3 <unknown>\n#1 0x56341633dd36 <unknown>\n#2 0x56341637ac4d <unknown>\n#3 0x56341637ad61 <unknown>\n#4 0x5634163b66a4 <unknown>\n#5 0x56341639b8ed <unknown>\n#6 0x5634163b4232 <unknown>\n#7 0x56341639b693 <unknown>\n#8 0x56341636e03a <unknown>\n#9 0x56341636f17e <unknown>\n#10 0x5634165c0dbd <unknown>\n#11 0x5634165c4c6c <unknown>\n#12 0x5634165ce4b0 <unknown>\n#13 0x5634165c5d63 <unknown>\n#14 0x563416598c35 <unknown>\n#15 0x5634165e9138 <unknown>\n#16 0x5634165e92c7 <unknown>\n#17 0x5634165f7093 <unknown>\n#18 0x7fab97411b43 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7f9b97ee80a0>\njson_reader = <utils.json_parser.JsonParser object at 0x7f9b97f74820>\nini_reader = <utils.config_parser.ConfigParserIni object at 0x7f9b97d0f1f0>\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_reader, ini_reader):\n        username = ini_reader.config_section_dict(\"Base Url\")[\"username\"]\n        password = ini_reader.config_section_dict(\"Base Url\")[\"password\"]\n        # example of a simple text attachment\n        allure.attach(body=username, name=\"username\", attachment_type=allure.attachment_type.TEXT)\n>       self.about_page.click_login_link()\n\ntests/test_login.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:21: in click\n    el: WebElement = self._wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e695bb79e53bfe02ec46c5839cacbc90\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f9b97e6f6d0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5634165fefe3 <unknown>\nE       #1 0x56341633dd36 <unknown>\nE       #2 0x56341637ac4d <unknown>\nE       #3 0x56341637ad61 <unknown>\nE       #4 0x5634163b66a4 <unknown>\nE       #5 0x56341639b8ed <unknown>\nE       #6 0x5634163b4232 <unknown>\nE       #7 0x56341639b693 <unknown>\nE       #8 0x56341636e03a <unknown>\nE       #9 0x56341636f17e <unknown>\nE       #10 0x5634165c0dbd <unknown>\nE       #11 0x5634165c4c6c <unknown>\nE       #12 0x5634165ce4b0 <unknown>\nE       #13 0x5634165c5d63 <unknown>\nE       #14 0x563416598c35 <unknown>\nE       #15 0x5634165e9138 <unknown>\nE       #16 0x5634165e92c7 <unknown>\nE       #17 0x5634165f7093 <unknown>\nE       #18 0x7fab97411b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1682771137501,"stop":1682771147784,"duration":10283},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5634165fefe3 <unknown>\n#1 0x56341633dd36 <unknown>\n#2 0x56341637ac4d <unknown>\n#3 0x56341637ad61 <unknown>\n#4 0x5634163b66a4 <unknown>\n#5 0x56341639b8ed <unknown>\n#6 0x5634163b4232 <unknown>\n#7 0x56341639b693 <unknown>\n#8 0x56341636e03a <unknown>\n#9 0x56341636f17e <unknown>\n#10 0x5634165c0dbd <unknown>\n#11 0x5634165c4c6c <unknown>\n#12 0x5634165ce4b0 <unknown>\n#13 0x5634165c5d63 <unknown>\n#14 0x563416598c35 <unknown>\n#15 0x5634165e9138 <unknown>\n#16 0x5634165e92c7 <unknown>\n#17 0x5634165f7093 <unknown>\n#18 0x7fab97411b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/about_page.py\", line 19, in click_login_link\n    self.click(self.LOGIN_LINK)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 21, in click\n    el: WebElement = self._wait.until(expected_conditions.element_to_be_clickable(locator))\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true}],"attachments":[{"uid":"53444010e62a3dba","name":"username","source":"53444010e62a3dba.txt","type":"text/plain","size":18},{"uid":"97560b8602d398f9","name":"Full Page Screenshot","source":"97560b8602d398f9.png","type":"image/png","size":2646979},{"uid":"84337b1409002fe3","name":"URL","source":"84337b1409002fe3.uri","type":"text/uri-list","size":23},{"uid":"bc3103b427338e10","name":"public ip address","source":"bc3103b427338e10.txt","type":"text/plain","size":13},{"uid":"5a6c5b0a5322a1ff","name":"Cookies","source":"5a6c5b0a5322a1ff.json","type":"application/json","size":3528},{"uid":"15afe2f4534e398e","name":"Session Storage","source":"15afe2f4534e398e.json","type":"application/json","size":2},{"uid":"af525d59b15924b","name":"Local Storage","source":"af525d59b15924b.json","type":"application/json","size":1400},{"uid":"cfaebeaafea913b7","name":"Console Logs","source":"cfaebeaafea913b7.json","type":"application/json","size":5314},{"uid":"77b355dcc5d304eb","name":"Network Logs","source":"77b355dcc5d304eb.json","type":"application/json","size":84993}],"parameters":[],"hasContent":true,"stepsCount":1,"attachmentsCount":9,"shouldDisplayMessage":true},"afterStages":[{"name":"create_driver::0","time":{"start":1682771150642,"stop":1682771150709,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"Login"},{"name":"epic","value":"Security"},{"name":"severity","value":"blocker"},{"name":"story","value":"As a user i want to be able to logout after a successful login."},{"name":"tag","value":"run(order=2)"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az451-606"},{"name":"thread","value":"2210-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=2)","security"]},"source":"970de94d7b313d23.json","parameterValues":[]}