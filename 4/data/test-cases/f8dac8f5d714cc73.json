{"uid":"f8dac8f5d714cc73","name":"Forgot Password with valid email test","fullName":"tests.test_forgot_password.TestForgotPassword#test_valid_email","historyId":"7ff7e178fd4f5b4b8deb31c8fc69c6a9","time":{"start":1687947986980,"stop":1687947997239,"duration":10259},"description":"Forgot password with a valid email address","descriptionHtml":"<p>Forgot password with a valid email address</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55953f7944e3 <unknown>\n#1 0x55953f4c3c76 <unknown>\n#2 0x55953f4ffc96 <unknown>\n#3 0x55953f4ffdc1 <unknown>\n#4 0x55953f5397f4 <unknown>\n#5 0x55953f51f03d <unknown>\n#6 0x55953f53730e <unknown>\n#7 0x55953f51ede3 <unknown>\n#8 0x55953f4f42dd <unknown>\n#9 0x55953f4f534e <unknown>\n#10 0x55953f7543e4 <unknown>\n#11 0x55953f7583d7 <unknown>\n#12 0x55953f762b20 <unknown>\n#13 0x55953f759023 <unknown>\n#14 0x55953f7271aa <unknown>\n#15 0x55953f77d6b8 <unknown>\n#16 0x55953f77d847 <unknown>\n#17 0x55953f78d243 <unknown>\n#18 0x7fe2dabe7b43 <unknown>","statusTrace":"self = <tests.test_forgot_password.TestForgotPassword object at 0x7f42bf701490>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nrequest = <FixtureRequest for <Function test_valid_email>>\n\n    @allure.description(\"Forgot password with a valid email address\")\n    @allure.title(\"Forgot Password with valid email test\")\n    def test_valid_email(self, json_data: dict, request: FixtureRequest):\n        email = request.config.getini(\"username\")\n>       self.about_page.click_login_link()\n\ntests/test_forgot_password.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:35: in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4d5a63ddfef7c6779b21002753b6d5f1\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f42bf6168e0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55953f7944e3 <unknown>\nE       #1 0x55953f4c3c76 <unknown>\nE       #2 0x55953f4ffc96 <unknown>\nE       #3 0x55953f4ffdc1 <unknown>\nE       #4 0x55953f5397f4 <unknown>\nE       #5 0x55953f51f03d <unknown>\nE       #6 0x55953f53730e <unknown>\nE       #7 0x55953f51ede3 <unknown>\nE       #8 0x55953f4f42dd <unknown>\nE       #9 0x55953f4f534e <unknown>\nE       #10 0x55953f7543e4 <unknown>\nE       #11 0x55953f7583d7 <unknown>\nE       #12 0x55953f762b20 <unknown>\nE       #13 0x55953f759023 <unknown>\nE       #14 0x55953f7271aa <unknown>\nE       #15 0x55953f77d6b8 <unknown>\nE       #16 0x55953f77d847 <unknown>\nE       #17 0x55953f78d243 <unknown>\nE       #18 0x7fe2dabe7b43 <unknown>\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"json_data","time":{"start":1687947793801,"stop":1687947793801,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Forgot password with a valid email address","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55953f7944e3 <unknown>\n#1 0x55953f4c3c76 <unknown>\n#2 0x55953f4ffc96 <unknown>\n#3 0x55953f4ffdc1 <unknown>\n#4 0x55953f5397f4 <unknown>\n#5 0x55953f51f03d <unknown>\n#6 0x55953f53730e <unknown>\n#7 0x55953f51ede3 <unknown>\n#8 0x55953f4f42dd <unknown>\n#9 0x55953f4f534e <unknown>\n#10 0x55953f7543e4 <unknown>\n#11 0x55953f7583d7 <unknown>\n#12 0x55953f762b20 <unknown>\n#13 0x55953f759023 <unknown>\n#14 0x55953f7271aa <unknown>\n#15 0x55953f77d6b8 <unknown>\n#16 0x55953f77d847 <unknown>\n#17 0x55953f78d243 <unknown>\n#18 0x7fe2dabe7b43 <unknown>","statusTrace":"self = <tests.test_forgot_password.TestForgotPassword object at 0x7f42bf701490>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nrequest = <FixtureRequest for <Function test_valid_email>>\n\n    @allure.description(\"Forgot password with a valid email address\")\n    @allure.title(\"Forgot Password with valid email test\")\n    def test_valid_email(self, json_data: dict, request: FixtureRequest):\n        email = request.config.getini(\"username\")\n>       self.about_page.click_login_link()\n\ntests/test_forgot_password.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:35: in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4d5a63ddfef7c6779b21002753b6d5f1\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f42bf6168e0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55953f7944e3 <unknown>\nE       #1 0x55953f4c3c76 <unknown>\nE       #2 0x55953f4ffc96 <unknown>\nE       #3 0x55953f4ffdc1 <unknown>\nE       #4 0x55953f5397f4 <unknown>\nE       #5 0x55953f51f03d <unknown>\nE       #6 0x55953f53730e <unknown>\nE       #7 0x55953f51ede3 <unknown>\nE       #8 0x55953f4f42dd <unknown>\nE       #9 0x55953f4f534e <unknown>\nE       #10 0x55953f7543e4 <unknown>\nE       #11 0x55953f7583d7 <unknown>\nE       #12 0x55953f762b20 <unknown>\nE       #13 0x55953f759023 <unknown>\nE       #14 0x55953f7271aa <unknown>\nE       #15 0x55953f77d6b8 <unknown>\nE       #16 0x55953f77d847 <unknown>\nE       #17 0x55953f78d243 <unknown>\nE       #18 0x7fe2dabe7b43 <unknown>\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1687947986980,"stop":1687947997238,"duration":10258},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55953f7944e3 <unknown>\n#1 0x55953f4c3c76 <unknown>\n#2 0x55953f4ffc96 <unknown>\n#3 0x55953f4ffdc1 <unknown>\n#4 0x55953f5397f4 <unknown>\n#5 0x55953f51f03d <unknown>\n#6 0x55953f53730e <unknown>\n#7 0x55953f51ede3 <unknown>\n#8 0x55953f4f42dd <unknown>\n#9 0x55953f4f534e <unknown>\n#10 0x55953f7543e4 <unknown>\n#11 0x55953f7583d7 <unknown>\n#12 0x55953f762b20 <unknown>\n#13 0x55953f759023 <unknown>\n#14 0x55953f7271aa <unknown>\n#15 0x55953f77d6b8 <unknown>\n#16 0x55953f77d847 <unknown>\n#17 0x55953f78d243 <unknown>\n#18 0x7fe2dabe7b43 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/about_page.py\", line 19, in click_login_link\n    self.click(self.LOGIN_LINK)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 35, in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"386d0cb298f01181","name":"Full Page Screenshot","source":"386d0cb298f01181.png","type":"image/png","size":2759419},{"uid":"80fd5ac85eba7e65","name":"URL","source":"80fd5ac85eba7e65.uri","type":"text/uri-list","size":23},{"uid":"688207085c2584b8","name":"public ip address","source":"688207085c2584b8.txt","type":"text/plain","size":12},{"uid":"b487bae7c05d1c69","name":"Cookies","source":"b487bae7c05d1c69.json","type":"application/json","size":3015},{"uid":"eccbdc2c3bea2cd5","name":"Session Storage","source":"eccbdc2c3bea2cd5.json","type":"application/json","size":2},{"uid":"f625f21534048104","name":"Local Storage","source":"f625f21534048104.json","type":"application/json","size":208},{"uid":"dd46b823d25c8dff","name":"Console Logs","source":"dd46b823d25c8dff.json","type":"application/json","size":2},{"uid":"32131f493c473697","name":"Network Logs","source":"32131f493c473697.json","type":"application/json","size":47542}],"parameters":[],"stepsCount":1,"attachmentsCount":8,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"severity","value":"critical"},{"name":"story","value":"Forgot Password Feature's Functionality"},{"name":"epic","value":"Security"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_forgot_password"},{"name":"subSuite","value":"TestForgotPassword"},{"name":"host","value":"fv-az581-811"},{"name":"thread","value":"2194-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_forgot_password"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["security"]},"source":"f8dac8f5d714cc73.json","parameterValues":[]}