{"uid":"ee920030ca14944f","name":"Forgot Password with invalid email test","fullName":"tests.test_forgot_password.TestForgotPassword#test_invalid_email","historyId":"3743e16c5d15da2a1434ee4e2dd39a43","time":{"start":1694740352056,"stop":1694740362369,"duration":10313},"description":"Forgot Password with invalid email address","descriptionHtml":"<p>Forgot Password with invalid email address</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55ba06827e23 <unknown>\n#1 0x55ba065507a7 <unknown>\n#2 0x55ba0658f1d3 <unknown>\n#3 0x55ba0658f2c1 <unknown>\n#4 0x55ba065caa04 <unknown>\n#5 0x55ba065b003d <unknown>\n#6 0x55ba065c8369 <unknown>\n#7 0x55ba065afde3 <unknown>\n#8 0x55ba06583a7b <unknown>\n#9 0x55ba0658481e <unknown>\n#10 0x55ba067e9638 <unknown>\n#11 0x55ba067ed507 <unknown>\n#12 0x55ba067f7c4c <unknown>\n#13 0x55ba067ee136 <unknown>\n#14 0x55ba067bc9cf <unknown>\n#15 0x55ba06811b98 <unknown>\n#16 0x55ba06811d68 <unknown>\n#17 0x55ba06820cb3 <unknown>\n#18 0x7ffa78094b43 <unknown>","statusTrace":"self = <tests.test_forgot_password.TestForgotPassword object at 0x7f89be582d90>\nexcel_reader = <utils.excel_parser.ExcelParser object at 0x7f89be5d0f50>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\n\n    @allure.description(\"Forgot Password with invalid email address\")\n    @allure.title(\"Forgot Password with invalid email test\")\n    def test_invalid_email(self, excel_reader, json_data: dict):\n        emails = excel_reader.read_from_excel(\"Emails\")\n>       self.about_page.click_login_link()\n\ntests/test_forgot_password.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:20: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:38: in click\n    el: WebElement = self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"82fee82cd1f4719e72a82f8f6ec1390c\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f89bdf8ba60>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55ba06827e23 <unknown>\nE       #1 0x55ba065507a7 <unknown>\nE       #2 0x55ba0658f1d3 <unknown>\nE       #3 0x55ba0658f2c1 <unknown>\nE       #4 0x55ba065caa04 <unknown>\nE       #5 0x55ba065b003d <unknown>\nE       #6 0x55ba065c8369 <unknown>\nE       #7 0x55ba065afde3 <unknown>\nE       #8 0x55ba06583a7b <unknown>\nE       #9 0x55ba0658481e <unknown>\nE       #10 0x55ba067e9638 <unknown>\nE       #11 0x55ba067ed507 <unknown>\nE       #12 0x55ba067f7c4c <unknown>\nE       #13 0x55ba067ee136 <unknown>\nE       #14 0x55ba067bc9cf <unknown>\nE       #15 0x55ba06811b98 <unknown>\nE       #16 0x55ba06811d68 <unknown>\nE       #17 0x55ba06820cb3 <unknown>\nE       #18 0x7ffa78094b43 <unknown>\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1694740126623,"stop":1694740126624,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"json_data","time":{"start":1694740126624,"stop":1694740126624,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1694740126624,"stop":1694740126624,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"excel_reader","time":{"start":1694740352056,"stop":1694740352056,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"Forgot Password with invalid email address","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55ba06827e23 <unknown>\n#1 0x55ba065507a7 <unknown>\n#2 0x55ba0658f1d3 <unknown>\n#3 0x55ba0658f2c1 <unknown>\n#4 0x55ba065caa04 <unknown>\n#5 0x55ba065b003d <unknown>\n#6 0x55ba065c8369 <unknown>\n#7 0x55ba065afde3 <unknown>\n#8 0x55ba06583a7b <unknown>\n#9 0x55ba0658481e <unknown>\n#10 0x55ba067e9638 <unknown>\n#11 0x55ba067ed507 <unknown>\n#12 0x55ba067f7c4c <unknown>\n#13 0x55ba067ee136 <unknown>\n#14 0x55ba067bc9cf <unknown>\n#15 0x55ba06811b98 <unknown>\n#16 0x55ba06811d68 <unknown>\n#17 0x55ba06820cb3 <unknown>\n#18 0x7ffa78094b43 <unknown>","statusTrace":"self = <tests.test_forgot_password.TestForgotPassword object at 0x7f89be582d90>\nexcel_reader = <utils.excel_parser.ExcelParser object at 0x7f89be5d0f50>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\n\n    @allure.description(\"Forgot Password with invalid email address\")\n    @allure.title(\"Forgot Password with invalid email test\")\n    def test_invalid_email(self, excel_reader, json_data: dict):\n        emails = excel_reader.read_from_excel(\"Emails\")\n>       self.about_page.click_login_link()\n\ntests/test_forgot_password.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:20: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:38: in click\n    el: WebElement = self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"82fee82cd1f4719e72a82f8f6ec1390c\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f89bdf8ba60>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55ba06827e23 <unknown>\nE       #1 0x55ba065507a7 <unknown>\nE       #2 0x55ba0658f1d3 <unknown>\nE       #3 0x55ba0658f2c1 <unknown>\nE       #4 0x55ba065caa04 <unknown>\nE       #5 0x55ba065b003d <unknown>\nE       #6 0x55ba065c8369 <unknown>\nE       #7 0x55ba065afde3 <unknown>\nE       #8 0x55ba06583a7b <unknown>\nE       #9 0x55ba0658481e <unknown>\nE       #10 0x55ba067e9638 <unknown>\nE       #11 0x55ba067ed507 <unknown>\nE       #12 0x55ba067f7c4c <unknown>\nE       #13 0x55ba067ee136 <unknown>\nE       #14 0x55ba067bc9cf <unknown>\nE       #15 0x55ba06811b98 <unknown>\nE       #16 0x55ba06811d68 <unknown>\nE       #17 0x55ba06820cb3 <unknown>\nE       #18 0x7ffa78094b43 <unknown>\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1694740352060,"stop":1694740362368,"duration":10308},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55ba06827e23 <unknown>\n#1 0x55ba065507a7 <unknown>\n#2 0x55ba0658f1d3 <unknown>\n#3 0x55ba0658f2c1 <unknown>\n#4 0x55ba065caa04 <unknown>\n#5 0x55ba065b003d <unknown>\n#6 0x55ba065c8369 <unknown>\n#7 0x55ba065afde3 <unknown>\n#8 0x55ba06583a7b <unknown>\n#9 0x55ba0658481e <unknown>\n#10 0x55ba067e9638 <unknown>\n#11 0x55ba067ed507 <unknown>\n#12 0x55ba067f7c4c <unknown>\n#13 0x55ba067ee136 <unknown>\n#14 0x55ba067bc9cf <unknown>\n#15 0x55ba06811b98 <unknown>\n#16 0x55ba06811d68 <unknown>\n#17 0x55ba06820cb3 <unknown>\n#18 0x7ffa78094b43 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/about_page.py\", line 20, in click_login_link\n    self.click(self.LOGIN_LINK)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 38, in click\n    el: WebElement = self.wait.until(\n                     ^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"4fd6ba53b23b9b80","name":"public ip address","source":"4fd6ba53b23b9b80.txt","type":"text/plain","size":12},{"uid":"9b83ca1c7fa99f73","name":"Cookies","source":"9b83ca1c7fa99f73.json","type":"application/json","size":2018},{"uid":"89f126883ff8540a","name":"Session Storage","source":"89f126883ff8540a.json","type":"application/json","size":333},{"uid":"7edd1d582148ec88","name":"Local Storage","source":"7edd1d582148ec88.json","type":"application/json","size":208},{"uid":"aba632372925d06f","name":"Console Logs","source":"aba632372925d06f.json","type":"application/json","size":4954},{"uid":"b0f8335f492be7bc","name":"Full Page Screenshot","source":"b0f8335f492be7bc.png","type":"image/png","size":3339372},{"uid":"6ae8dd7d320f1855","name":"URL","source":"6ae8dd7d320f1855.uri","type":"text/uri-list","size":23},{"uid":"68dc2171e1d6eca9","name":"Network Logs","source":"68dc2171e1d6eca9.json","type":"application/json","size":55229}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":8,"hasContent":true},"afterStages":[],"labels":[{"name":"subSuite","value":"Custom sub suite"},{"name":"suite","value":"Custom suite"},{"name":"severity","value":"critical"},{"name":"epic","value":"Security"},{"name":"story","value":"Forgot Password Feature's Functionality"},{"name":"parentSuite","value":"Custom parent suite"},{"name":"tag","value":"security"},{"name":"host","value":"fv-az1128-620"},{"name":"thread","value":"2119-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_forgot_password"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["security"]},"source":"ee920030ca14944f.json","parameterValues":[]}