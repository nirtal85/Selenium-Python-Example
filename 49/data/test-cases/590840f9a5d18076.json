{"uid":"590840f9a5d18076","name":"Logout of system test","fullName":"tests.login_test.TestLogin#test_logout","historyId":"e89a5a0e9aefe451ee262eba82370b01","time":{"start":1695344928234,"stop":1695344938507,"duration":10273},"description":"Log out from app","descriptionHtml":"<p>Log out from app</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55ad1c8016c3 <unknown>\n#1 0x55ad1c4d71e7 <unknown>\n#2 0x55ad1c51e566 <unknown>\n#3 0x55ad1c51e651 <unknown>\n#4 0x55ad1c55ba74 <unknown>\n#5 0x55ad1c5400ed <unknown>\n#6 0x55ad1c559322 <unknown>\n#7 0x55ad1c53fe93 <unknown>\n#8 0x55ad1c512934 <unknown>\n#9 0x55ad1c51371e <unknown>\n#10 0x55ad1c7c6cc8 <unknown>\n#11 0x55ad1c7cac00 <unknown>\n#12 0x55ad1c7d51ac <unknown>\n#13 0x55ad1c7cb818 <unknown>\n#14 0x55ad1c79828f <unknown>\n#15 0x55ad1c7efe98 <unknown>\n#16 0x55ad1c7f0069 <unknown>\n#17 0x55ad1c800853 <unknown>\n#18 0x7fa12d894b43 <unknown>","statusTrace":"self = <tests.login_test.TestLogin object at 0x7f5c142f55d0>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nsecret_data = {'email': 'elias123@gmail.com', 'password': 'El123456789'}\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_data: dict, secret_data: dict):\n        # example of a simple text attachment\n        allure.attach(\n            \"<h1>Example html attachment</h1>\",\n            name=\"HTML example\",\n            attachment_type=allure.attachment_type.HTML,\n        )\n        # example of a file attachment\n        allure.attach.file(\n            Path(Path(__file__).absolute().parent.parent, \"data\", \"dog.png\"),\n            name=\"Attach file example\",\n            attachment_type=allure.attachment_type.PNG,\n        )\n        allure.attach(\n            \"Some text content\",\n            name=\"TXT example\",\n            attachment_type=allure.attachment_type.TEXT,\n        )\n        allure.attach(\n            \"first,second,third\\none,two,three\",\n            name=\"CSV example\",\n            attachment_type=allure.attachment_type.CSV,\n        )\n        allure.attach(\n            json.dumps({\"first\": 1, \"second\": 2}, indent=2),\n            name=\"JSON example\",\n            attachment_type=allure.attachment_type.JSON,\n        )\n        xml_content = \"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n            <tag>\n                 <inside>...</inside>\n             </tag>\n         \"\"\"\n        allure.attach(\n            xml_content,\n            name=\"some attachment name\",\n            attachment_type=allure.attachment_type.XML,\n        )\n        allure.attach(\n            \"\\n\".join(\n                [\n                    \"https://github.com/allure-framework\",\n                    \"https://github.com/allure-examples\",\n                ]\n            ),\n            name=\"URI List example\",\n            attachment_type=allure.attachment_type.URI_LIST,\n        )\n>       self.about_page.click_login_link()\n\ntests/login_test.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:20: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:38: in click\n    el: WebElement = self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"31f416168dea398bd37ffd9593c90992\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f5c13f84d60>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55ad1c8016c3 <unknown>\nE       #1 0x55ad1c4d71e7 <unknown>\nE       #2 0x55ad1c51e566 <unknown>\nE       #3 0x55ad1c51e651 <unknown>\nE       #4 0x55ad1c55ba74 <unknown>\nE       #5 0x55ad1c5400ed <unknown>\nE       #6 0x55ad1c559322 <unknown>\nE       #7 0x55ad1c53fe93 <unknown>\nE       #8 0x55ad1c512934 <unknown>\nE       #9 0x55ad1c51371e <unknown>\nE       #10 0x55ad1c7c6cc8 <unknown>\nE       #11 0x55ad1c7cac00 <unknown>\nE       #12 0x55ad1c7d51ac <unknown>\nE       #13 0x55ad1c7cb818 <unknown>\nE       #14 0x55ad1c79828f <unknown>\nE       #15 0x55ad1c7efe98 <unknown>\nE       #16 0x55ad1c7f0069 <unknown>\nE       #17 0x55ad1c800853 <unknown>\nE       #18 0x7fa12d894b43 <unknown>\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"secret_data","time":{"start":1695344898424,"stop":1695344898425,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1695344898424,"stop":1695344898424,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1695344898424,"stop":1695344898424,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"json_data","time":{"start":1695344898425,"stop":1695344898425,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"Log out from app","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55ad1c8016c3 <unknown>\n#1 0x55ad1c4d71e7 <unknown>\n#2 0x55ad1c51e566 <unknown>\n#3 0x55ad1c51e651 <unknown>\n#4 0x55ad1c55ba74 <unknown>\n#5 0x55ad1c5400ed <unknown>\n#6 0x55ad1c559322 <unknown>\n#7 0x55ad1c53fe93 <unknown>\n#8 0x55ad1c512934 <unknown>\n#9 0x55ad1c51371e <unknown>\n#10 0x55ad1c7c6cc8 <unknown>\n#11 0x55ad1c7cac00 <unknown>\n#12 0x55ad1c7d51ac <unknown>\n#13 0x55ad1c7cb818 <unknown>\n#14 0x55ad1c79828f <unknown>\n#15 0x55ad1c7efe98 <unknown>\n#16 0x55ad1c7f0069 <unknown>\n#17 0x55ad1c800853 <unknown>\n#18 0x7fa12d894b43 <unknown>","statusTrace":"self = <tests.login_test.TestLogin object at 0x7f5c142f55d0>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nsecret_data = {'email': 'elias123@gmail.com', 'password': 'El123456789'}\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_data: dict, secret_data: dict):\n        # example of a simple text attachment\n        allure.attach(\n            \"<h1>Example html attachment</h1>\",\n            name=\"HTML example\",\n            attachment_type=allure.attachment_type.HTML,\n        )\n        # example of a file attachment\n        allure.attach.file(\n            Path(Path(__file__).absolute().parent.parent, \"data\", \"dog.png\"),\n            name=\"Attach file example\",\n            attachment_type=allure.attachment_type.PNG,\n        )\n        allure.attach(\n            \"Some text content\",\n            name=\"TXT example\",\n            attachment_type=allure.attachment_type.TEXT,\n        )\n        allure.attach(\n            \"first,second,third\\none,two,three\",\n            name=\"CSV example\",\n            attachment_type=allure.attachment_type.CSV,\n        )\n        allure.attach(\n            json.dumps({\"first\": 1, \"second\": 2}, indent=2),\n            name=\"JSON example\",\n            attachment_type=allure.attachment_type.JSON,\n        )\n        xml_content = \"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n            <tag>\n                 <inside>...</inside>\n             </tag>\n         \"\"\"\n        allure.attach(\n            xml_content,\n            name=\"some attachment name\",\n            attachment_type=allure.attachment_type.XML,\n        )\n        allure.attach(\n            \"\\n\".join(\n                [\n                    \"https://github.com/allure-framework\",\n                    \"https://github.com/allure-examples\",\n                ]\n            ),\n            name=\"URI List example\",\n            attachment_type=allure.attachment_type.URI_LIST,\n        )\n>       self.about_page.click_login_link()\n\ntests/login_test.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:20: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:38: in click\n    el: WebElement = self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"31f416168dea398bd37ffd9593c90992\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f5c13f84d60>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55ad1c8016c3 <unknown>\nE       #1 0x55ad1c4d71e7 <unknown>\nE       #2 0x55ad1c51e566 <unknown>\nE       #3 0x55ad1c51e651 <unknown>\nE       #4 0x55ad1c55ba74 <unknown>\nE       #5 0x55ad1c5400ed <unknown>\nE       #6 0x55ad1c559322 <unknown>\nE       #7 0x55ad1c53fe93 <unknown>\nE       #8 0x55ad1c512934 <unknown>\nE       #9 0x55ad1c51371e <unknown>\nE       #10 0x55ad1c7c6cc8 <unknown>\nE       #11 0x55ad1c7cac00 <unknown>\nE       #12 0x55ad1c7d51ac <unknown>\nE       #13 0x55ad1c7cb818 <unknown>\nE       #14 0x55ad1c79828f <unknown>\nE       #15 0x55ad1c7efe98 <unknown>\nE       #16 0x55ad1c7f0069 <unknown>\nE       #17 0x55ad1c800853 <unknown>\nE       #18 0x7fa12d894b43 <unknown>\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1695344928235,"stop":1695344938507,"duration":10272},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55ad1c8016c3 <unknown>\n#1 0x55ad1c4d71e7 <unknown>\n#2 0x55ad1c51e566 <unknown>\n#3 0x55ad1c51e651 <unknown>\n#4 0x55ad1c55ba74 <unknown>\n#5 0x55ad1c5400ed <unknown>\n#6 0x55ad1c559322 <unknown>\n#7 0x55ad1c53fe93 <unknown>\n#8 0x55ad1c512934 <unknown>\n#9 0x55ad1c51371e <unknown>\n#10 0x55ad1c7c6cc8 <unknown>\n#11 0x55ad1c7cac00 <unknown>\n#12 0x55ad1c7d51ac <unknown>\n#13 0x55ad1c7cb818 <unknown>\n#14 0x55ad1c79828f <unknown>\n#15 0x55ad1c7efe98 <unknown>\n#16 0x55ad1c7f0069 <unknown>\n#17 0x55ad1c800853 <unknown>\n#18 0x7fa12d894b43 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/about_page.py\", line 20, in click_login_link\n    self.click(self.LOGIN_LINK)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 38, in click\n    el: WebElement = self.wait.until(\n                     ^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"773428324f3cd826","name":"HTML example","source":"773428324f3cd826.html","type":"text/html","size":32},{"uid":"b33da38313e5ef2f","name":"Attach file example","source":"b33da38313e5ef2f.png","type":"image/png","size":14730},{"uid":"629ac27e77cc1af3","name":"TXT example","source":"629ac27e77cc1af3.txt","type":"text/plain","size":17},{"uid":"8452755747cf7766","name":"CSV example","source":"8452755747cf7766.csv","type":"text/csv","size":32},{"uid":"69821828381be3d5","name":"JSON example","source":"69821828381be3d5.json","type":"application/json","size":31},{"uid":"b5cbdba3da92c934","name":"some attachment name","source":"b5cbdba3da92c934.xml","type":"application/xml","size":124},{"uid":"644d5a06bc7b65af","name":"URI List example","source":"644d5a06bc7b65af.uri","type":"text/uri-list","size":70},{"uid":"5a603a7658173e7","name":"public ip address","source":"5a603a7658173e7.txt","type":"text/plain","size":14},{"uid":"5b285e1bd51e062e","name":"Cookies","source":"5b285e1bd51e062e.json","type":"application/json","size":2018},{"uid":"189d7171592b116c","name":"Session Storage","source":"189d7171592b116c.json","type":"application/json","size":333},{"uid":"658e4c9021d7b667","name":"Local Storage","source":"658e4c9021d7b667.json","type":"application/json","size":208},{"uid":"a24aca7d995ccc8f","name":"Console Logs","source":"a24aca7d995ccc8f.json","type":"application/json","size":2},{"uid":"2cdd1269883e698d","name":"Full Page Screenshot","source":"2cdd1269883e698d.png","type":"image/png","size":2821846},{"uid":"6f2e1e95b9cd6d26","name":"URL","source":"6f2e1e95b9cd6d26.uri","type":"text/uri-list","size":23},{"uid":"1b49a727b204ce89","name":"Network Logs","source":"1b49a727b204ce89.json","type":"application/json","size":23032}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":15,"hasContent":true},"afterStages":[],"labels":[{"name":"story","value":"As a user i want to be able to logout after a successful login."},{"name":"epic","value":"Security"},{"name":"severity","value":"blocker"},{"name":"feature","value":"Login"},{"name":"tag","value":"run(order=2)"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"login_test"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az438-99"},{"name":"thread","value":"2112-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.login_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=2)","security"]},"source":"590840f9a5d18076.json","parameterValues":[]}