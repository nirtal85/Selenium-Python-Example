{"uid":"1a032868f302a85f","name":"Logout of system test","fullName":"tests.test_login.TestLogin#test_logout","historyId":"b90200cedc51a1ecbba9a19fbdbf8893","time":{"start":1685907155839,"stop":1685907166062,"duration":10223},"description":"Log out from app","descriptionHtml":"<p>Log out from app</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55dec8ee9133 <unknown>\n#1 0x55dec8c1d966 <unknown>\n#2 0x55dec8c5a0dc <unknown>\n#3 0x55dec8c5a211 <unknown>\n#4 0x55dec8c946c4 <unknown>\n#5 0x55dec8c79bfd <unknown>\n#6 0x55dec8c921c7 <unknown>\n#7 0x55dec8c799a3 <unknown>\n#8 0x55dec8c4e46a <unknown>\n#9 0x55dec8c4f55e <unknown>\n#10 0x55dec8ea8cae <unknown>\n#11 0x55dec8eac8fe <unknown>\n#12 0x55dec8eb5f20 <unknown>\n#13 0x55dec8ead923 <unknown>\n#14 0x55dec8e80c0e <unknown>\n#15 0x55dec8ed0b08 <unknown>\n#16 0x55dec8ed0c97 <unknown>\n#17 0x55dec8ee1113 <unknown>\n#18 0x7f66d36dbb43 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7fdde05840a0>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nrequest = <FixtureRequest for <Function test_logout>>\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_data: dict, request: FixtureRequest):\n        username = request.config.getini(\"username\")\n        password = request.config.getini(\"password\")\n        # example of a simple text attachment\n        allure.attach(body=username, name=\"username\", attachment_type=allure.attachment_type.TEXT)\n>       self.about_page.click_login_link()\n\ntests/test_login.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:37: in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b9a12c33f422c972e63013c3f03a1775\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fdde0599000>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55dec8ee9133 <unknown>\nE       #1 0x55dec8c1d966 <unknown>\nE       #2 0x55dec8c5a0dc <unknown>\nE       #3 0x55dec8c5a211 <unknown>\nE       #4 0x55dec8c946c4 <unknown>\nE       #5 0x55dec8c79bfd <unknown>\nE       #6 0x55dec8c921c7 <unknown>\nE       #7 0x55dec8c799a3 <unknown>\nE       #8 0x55dec8c4e46a <unknown>\nE       #9 0x55dec8c4f55e <unknown>\nE       #10 0x55dec8ea8cae <unknown>\nE       #11 0x55dec8eac8fe <unknown>\nE       #12 0x55dec8eb5f20 <unknown>\nE       #13 0x55dec8ead923 <unknown>\nE       #14 0x55dec8e80c0e <unknown>\nE       #15 0x55dec8ed0b08 <unknown>\nE       #16 0x55dec8ed0c97 <unknown>\nE       #17 0x55dec8ee1113 <unknown>\nE       #18 0x7f66d36dbb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"json_data","time":{"start":1685907126024,"stop":1685907126024,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Log out from app","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55dec8ee9133 <unknown>\n#1 0x55dec8c1d966 <unknown>\n#2 0x55dec8c5a0dc <unknown>\n#3 0x55dec8c5a211 <unknown>\n#4 0x55dec8c946c4 <unknown>\n#5 0x55dec8c79bfd <unknown>\n#6 0x55dec8c921c7 <unknown>\n#7 0x55dec8c799a3 <unknown>\n#8 0x55dec8c4e46a <unknown>\n#9 0x55dec8c4f55e <unknown>\n#10 0x55dec8ea8cae <unknown>\n#11 0x55dec8eac8fe <unknown>\n#12 0x55dec8eb5f20 <unknown>\n#13 0x55dec8ead923 <unknown>\n#14 0x55dec8e80c0e <unknown>\n#15 0x55dec8ed0b08 <unknown>\n#16 0x55dec8ed0c97 <unknown>\n#17 0x55dec8ee1113 <unknown>\n#18 0x7f66d36dbb43 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7fdde05840a0>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nrequest = <FixtureRequest for <Function test_logout>>\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_data: dict, request: FixtureRequest):\n        username = request.config.getini(\"username\")\n        password = request.config.getini(\"password\")\n        # example of a simple text attachment\n        allure.attach(body=username, name=\"username\", attachment_type=allure.attachment_type.TEXT)\n>       self.about_page.click_login_link()\n\ntests/test_login.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:19: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:37: in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b9a12c33f422c972e63013c3f03a1775\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fdde0599000>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55dec8ee9133 <unknown>\nE       #1 0x55dec8c1d966 <unknown>\nE       #2 0x55dec8c5a0dc <unknown>\nE       #3 0x55dec8c5a211 <unknown>\nE       #4 0x55dec8c946c4 <unknown>\nE       #5 0x55dec8c79bfd <unknown>\nE       #6 0x55dec8c921c7 <unknown>\nE       #7 0x55dec8c799a3 <unknown>\nE       #8 0x55dec8c4e46a <unknown>\nE       #9 0x55dec8c4f55e <unknown>\nE       #10 0x55dec8ea8cae <unknown>\nE       #11 0x55dec8eac8fe <unknown>\nE       #12 0x55dec8eb5f20 <unknown>\nE       #13 0x55dec8ead923 <unknown>\nE       #14 0x55dec8e80c0e <unknown>\nE       #15 0x55dec8ed0b08 <unknown>\nE       #16 0x55dec8ed0c97 <unknown>\nE       #17 0x55dec8ee1113 <unknown>\nE       #18 0x7f66d36dbb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1685907155839,"stop":1685907166062,"duration":10223},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55dec8ee9133 <unknown>\n#1 0x55dec8c1d966 <unknown>\n#2 0x55dec8c5a0dc <unknown>\n#3 0x55dec8c5a211 <unknown>\n#4 0x55dec8c946c4 <unknown>\n#5 0x55dec8c79bfd <unknown>\n#6 0x55dec8c921c7 <unknown>\n#7 0x55dec8c799a3 <unknown>\n#8 0x55dec8c4e46a <unknown>\n#9 0x55dec8c4f55e <unknown>\n#10 0x55dec8ea8cae <unknown>\n#11 0x55dec8eac8fe <unknown>\n#12 0x55dec8eb5f20 <unknown>\n#13 0x55dec8ead923 <unknown>\n#14 0x55dec8e80c0e <unknown>\n#15 0x55dec8ed0b08 <unknown>\n#16 0x55dec8ed0c97 <unknown>\n#17 0x55dec8ee1113 <unknown>\n#18 0x7f66d36dbb43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/about_page.py\", line 19, in click_login_link\n    self.click(self.LOGIN_LINK)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 37, in click\n    el: WebElement = self.wait.until(expected_conditions.element_to_be_clickable(locator))\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"3de134f66360ac22","name":"username","source":"3de134f66360ac22.txt","type":"text/plain","size":18},{"uid":"15815c4823e352f5","name":"Full Page Screenshot","source":"15815c4823e352f5.png","type":"image/png","size":2749923},{"uid":"1c8ce6d6cfc3b12d","name":"URL","source":"1c8ce6d6cfc3b12d.uri","type":"text/uri-list","size":23},{"uid":"d506032a4bc68514","name":"public ip address","source":"d506032a4bc68514.txt","type":"text/plain","size":14},{"uid":"6e220a6ea938ef60","name":"Cookies","source":"6e220a6ea938ef60.json","type":"application/json","size":2740},{"uid":"e4803c2f5c6feb17","name":"Session Storage","source":"e4803c2f5c6feb17.json","type":"application/json","size":2},{"uid":"696655eabf48ac75","name":"Local Storage","source":"696655eabf48ac75.json","type":"application/json","size":2},{"uid":"60f690d5eaabf789","name":"Console Logs","source":"60f690d5eaabf789.json","type":"application/json","size":2},{"uid":"9c23d042cf4c5eee","name":"Network Logs","source":"9c23d042cf4c5eee.json","type":"application/json","size":47496}],"parameters":[],"stepsCount":1,"attachmentsCount":9,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"severity","value":"blocker"},{"name":"epic","value":"Security"},{"name":"story","value":"As a user i want to be able to logout after a successful login."},{"name":"feature","value":"Login"},{"name":"tag","value":"run(order=2)"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az396-612"},{"name":"thread","value":"2208-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=2)","security"]},"source":"1a032868f302a85f.json","parameterValues":[]}