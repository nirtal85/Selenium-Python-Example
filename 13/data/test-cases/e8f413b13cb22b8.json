{"uid":"e8f413b13cb22b8","name":"Logout of system test","fullName":"tests.test_login.TestLogin#test_logout","historyId":"b90200cedc51a1ecbba9a19fbdbf8893","time":{"start":1692234310406,"stop":1692234320666,"duration":10260},"description":"Log out from app","descriptionHtml":"<p>Log out from app</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x560cbc264613 <unknown>\n#1 0x560cbbf90537 <unknown>\n#2 0x560cbbfcef53 <unknown>\n#3 0x560cbbfcf041 <unknown>\n#4 0x560cbc00a2a4 <unknown>\n#5 0x560cbbfefa5d <unknown>\n#6 0x560cbc007d09 <unknown>\n#7 0x560cbbfef803 <unknown>\n#8 0x560cbbfc368b <unknown>\n#9 0x560cbbfc442e <unknown>\n#10 0x560cbc225c28 <unknown>\n#11 0x560cbc229af7 <unknown>\n#12 0x560cbc23401c <unknown>\n#13 0x560cbc22a723 <unknown>\n#14 0x560cbc1f9457 <unknown>\n#15 0x560cbc24e628 <unknown>\n#16 0x560cbc24e7b7 <unknown>\n#17 0x560cbc25d483 <unknown>\n#18 0x7f8c6adc0b43 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7f9469fb1b90>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nrequest = <FixtureRequest for <Function test_logout>>\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_data: dict, request: FixtureRequest):\n        username = request.config.getini(\"username\")\n        password = request.config.getini(\"password\")\n        # example of a simple text attachment\n        allure.attach(\n            body=username, name=\"username\", attachment_type=allure.attachment_type.TEXT\n        )\n>       self.about_page.click_login_link()\n\ntests/test_login.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:20: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:38: in click\n    el: WebElement = self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"081b73f6f9069ee5217acdc9d9ee2a7a\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f946a03c540>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x560cbc264613 <unknown>\nE       #1 0x560cbbf90537 <unknown>\nE       #2 0x560cbbfcef53 <unknown>\nE       #3 0x560cbbfcf041 <unknown>\nE       #4 0x560cbc00a2a4 <unknown>\nE       #5 0x560cbbfefa5d <unknown>\nE       #6 0x560cbc007d09 <unknown>\nE       #7 0x560cbbfef803 <unknown>\nE       #8 0x560cbbfc368b <unknown>\nE       #9 0x560cbbfc442e <unknown>\nE       #10 0x560cbc225c28 <unknown>\nE       #11 0x560cbc229af7 <unknown>\nE       #12 0x560cbc23401c <unknown>\nE       #13 0x560cbc22a723 <unknown>\nE       #14 0x560cbc1f9457 <unknown>\nE       #15 0x560cbc24e628 <unknown>\nE       #16 0x560cbc24e7b7 <unknown>\nE       #17 0x560cbc25d483 <unknown>\nE       #18 0x7f8c6adc0b43 <unknown>\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1692234279000,"stop":1692234279000,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"json_data","time":{"start":1692234279001,"stop":1692234279001,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_verify_url","time":{"start":1692234279001,"stop":1692234279001,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"Log out from app","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x560cbc264613 <unknown>\n#1 0x560cbbf90537 <unknown>\n#2 0x560cbbfcef53 <unknown>\n#3 0x560cbbfcf041 <unknown>\n#4 0x560cbc00a2a4 <unknown>\n#5 0x560cbbfefa5d <unknown>\n#6 0x560cbc007d09 <unknown>\n#7 0x560cbbfef803 <unknown>\n#8 0x560cbbfc368b <unknown>\n#9 0x560cbbfc442e <unknown>\n#10 0x560cbc225c28 <unknown>\n#11 0x560cbc229af7 <unknown>\n#12 0x560cbc23401c <unknown>\n#13 0x560cbc22a723 <unknown>\n#14 0x560cbc1f9457 <unknown>\n#15 0x560cbc24e628 <unknown>\n#16 0x560cbc24e7b7 <unknown>\n#17 0x560cbc25d483 <unknown>\n#18 0x7f8c6adc0b43 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7f9469fb1b90>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nrequest = <FixtureRequest for <Function test_logout>>\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_data: dict, request: FixtureRequest):\n        username = request.config.getini(\"username\")\n        password = request.config.getini(\"password\")\n        # example of a simple text attachment\n        allure.attach(\n            body=username, name=\"username\", attachment_type=allure.attachment_type.TEXT\n        )\n>       self.about_page.click_login_link()\n\ntests/test_login.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:20: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:38: in click\n    el: WebElement = self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"081b73f6f9069ee5217acdc9d9ee2a7a\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f946a03c540>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x560cbc264613 <unknown>\nE       #1 0x560cbbf90537 <unknown>\nE       #2 0x560cbbfcef53 <unknown>\nE       #3 0x560cbbfcf041 <unknown>\nE       #4 0x560cbc00a2a4 <unknown>\nE       #5 0x560cbbfefa5d <unknown>\nE       #6 0x560cbc007d09 <unknown>\nE       #7 0x560cbbfef803 <unknown>\nE       #8 0x560cbbfc368b <unknown>\nE       #9 0x560cbbfc442e <unknown>\nE       #10 0x560cbc225c28 <unknown>\nE       #11 0x560cbc229af7 <unknown>\nE       #12 0x560cbc23401c <unknown>\nE       #13 0x560cbc22a723 <unknown>\nE       #14 0x560cbc1f9457 <unknown>\nE       #15 0x560cbc24e628 <unknown>\nE       #16 0x560cbc24e7b7 <unknown>\nE       #17 0x560cbc25d483 <unknown>\nE       #18 0x7f8c6adc0b43 <unknown>\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1692234310406,"stop":1692234320666,"duration":10260},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x560cbc264613 <unknown>\n#1 0x560cbbf90537 <unknown>\n#2 0x560cbbfcef53 <unknown>\n#3 0x560cbbfcf041 <unknown>\n#4 0x560cbc00a2a4 <unknown>\n#5 0x560cbbfefa5d <unknown>\n#6 0x560cbc007d09 <unknown>\n#7 0x560cbbfef803 <unknown>\n#8 0x560cbbfc368b <unknown>\n#9 0x560cbbfc442e <unknown>\n#10 0x560cbc225c28 <unknown>\n#11 0x560cbc229af7 <unknown>\n#12 0x560cbc23401c <unknown>\n#13 0x560cbc22a723 <unknown>\n#14 0x560cbc1f9457 <unknown>\n#15 0x560cbc24e628 <unknown>\n#16 0x560cbc24e7b7 <unknown>\n#17 0x560cbc25d483 <unknown>\n#18 0x7f8c6adc0b43 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/about_page.py\", line 20, in click_login_link\n    self.click(self.LOGIN_LINK)\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/pages/base_page.py\", line 38, in click\n    el: WebElement = self.wait.until(\n                     ^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/Selenium-Python-Example/Selenium-Python-Example/.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"aa81191ba845833c","name":"username","source":"aa81191ba845833c.txt","type":"text/plain","size":18},{"uid":"2084f105a3f33bef","name":"public ip address","source":"2084f105a3f33bef.txt","type":"text/plain","size":13},{"uid":"38065a4187dc9483","name":"Cookies","source":"38065a4187dc9483.json","type":"application/json","size":1237},{"uid":"97e304bf2cf56f5f","name":"Session Storage","source":"97e304bf2cf56f5f.json","type":"application/json","size":2},{"uid":"3bfc3963efa957e0","name":"Local Storage","source":"3bfc3963efa957e0.json","type":"application/json","size":208},{"uid":"5746b6a8d6606ce0","name":"Console Logs","source":"5746b6a8d6606ce0.json","type":"application/json","size":4954},{"uid":"5ea5264e18bc6d7e","name":"Full Page Screenshot","source":"5ea5264e18bc6d7e.png","type":"image/png","size":3231993},{"uid":"8946ff2164fd34a4","name":"URL","source":"8946ff2164fd34a4.uri","type":"text/uri-list","size":23},{"uid":"6231368e56345a27","name":"Network Logs","source":"6231368e56345a27.json","type":"application/json","size":28289}],"parameters":[],"stepsCount":1,"attachmentsCount":9,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"epic","value":"Security"},{"name":"story","value":"As a user i want to be able to logout after a successful login."},{"name":"feature","value":"Login"},{"name":"severity","value":"blocker"},{"name":"tag","value":"run(order=2)"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az590-232"},{"name":"thread","value":"2109-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=2)","security"]},"source":"e8f413b13cb22b8.json","parameterValues":[]}